// source: customer/v1beta1/customer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.customer.v1beta1.AddRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.AddResponse', null, global);
goog.exportSymbol('proto.customer.v1beta1.Customer', null, global);
goog.exportSymbol('proto.customer.v1beta1.DeleteRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.DeleteResponse', null, global);
goog.exportSymbol('proto.customer.v1beta1.GetRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.GetResponse', null, global);
goog.exportSymbol('proto.customer.v1beta1.QueryRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.QueryRequest.RiskCase', null, global);
goog.exportSymbol('proto.customer.v1beta1.QueryResponse', null, global);
goog.exportSymbol('proto.customer.v1beta1.Risk', null, global);
goog.exportSymbol('proto.customer.v1beta1.SetRiskRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.SetRiskResponse', null, global);
goog.exportSymbol('proto.customer.v1beta1.UpdateRequest', null, global);
goog.exportSymbol('proto.customer.v1beta1.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.AddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.AddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.AddRequest.displayName = 'proto.customer.v1beta1.AddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.AddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.AddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.AddResponse.displayName = 'proto.customer.v1beta1.AddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.QueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.customer.v1beta1.QueryRequest.oneofGroups_);
};
goog.inherits(proto.customer.v1beta1.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.QueryRequest.displayName = 'proto.customer.v1beta1.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.QueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.customer.v1beta1.QueryResponse.repeatedFields_, null);
};
goog.inherits(proto.customer.v1beta1.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.QueryResponse.displayName = 'proto.customer.v1beta1.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.GetRequest.displayName = 'proto.customer.v1beta1.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.GetResponse.displayName = 'proto.customer.v1beta1.GetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.UpdateRequest.displayName = 'proto.customer.v1beta1.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.UpdateResponse.displayName = 'proto.customer.v1beta1.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.SetRiskRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.SetRiskRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.SetRiskRequest.displayName = 'proto.customer.v1beta1.SetRiskRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.SetRiskResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.SetRiskResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.SetRiskResponse.displayName = 'proto.customer.v1beta1.SetRiskResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.DeleteRequest.displayName = 'proto.customer.v1beta1.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.DeleteResponse.displayName = 'proto.customer.v1beta1.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.customer.v1beta1.Customer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.customer.v1beta1.Customer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.customer.v1beta1.Customer.displayName = 'proto.customer.v1beta1.Customer';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.AddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.AddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.AddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.AddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: (f = msg.getCustomer()) && proto.customer.v1beta1.Customer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.AddRequest}
 */
proto.customer.v1beta1.AddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.AddRequest;
  return proto.customer.v1beta1.AddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.AddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.AddRequest}
 */
proto.customer.v1beta1.AddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.AddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.AddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.AddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.AddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.AddRequest.prototype.getCustomer = function() {
  return /** @type{?proto.customer.v1beta1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {?proto.customer.v1beta1.Customer|undefined} value
 * @return {!proto.customer.v1beta1.AddRequest} returns this
*/
proto.customer.v1beta1.AddRequest.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customer.v1beta1.AddRequest} returns this
 */
proto.customer.v1beta1.AddRequest.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.AddRequest.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.AddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.AddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.AddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.AddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: (f = msg.getCustomer()) && proto.customer.v1beta1.Customer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.AddResponse}
 */
proto.customer.v1beta1.AddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.AddResponse;
  return proto.customer.v1beta1.AddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.AddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.AddResponse}
 */
proto.customer.v1beta1.AddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.AddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.AddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.AddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.AddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.AddResponse.prototype.getCustomer = function() {
  return /** @type{?proto.customer.v1beta1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {?proto.customer.v1beta1.Customer|undefined} value
 * @return {!proto.customer.v1beta1.AddResponse} returns this
*/
proto.customer.v1beta1.AddResponse.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customer.v1beta1.AddResponse} returns this
 */
proto.customer.v1beta1.AddResponse.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.AddResponse.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.customer.v1beta1.QueryRequest.oneofGroups_ = [[5,6]];

/**
 * @enum {number}
 */
proto.customer.v1beta1.QueryRequest.RiskCase = {
  RISK_NOT_SET: 0,
  NULL: 5,
  VALUE: 6
};

/**
 * @return {proto.customer.v1beta1.QueryRequest.RiskCase}
 */
proto.customer.v1beta1.QueryRequest.prototype.getRiskCase = function() {
  return /** @type {proto.customer.v1beta1.QueryRequest.RiskCase} */(jspb.Message.computeOneofCase(this, proto.customer.v1beta1.QueryRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.QueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.QueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.QueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.QueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sourceRef: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pb_null: jspb.Message.getFieldWithDefault(msg, 5, 0),
    value: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.QueryRequest}
 */
proto.customer.v1beta1.QueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.QueryRequest;
  return proto.customer.v1beta1.QueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.QueryRequest}
 */
proto.customer.v1beta1.QueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceRef(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNull(value);
      break;
    case 6:
      var value = /** @type {!proto.customer.v1beta1.Risk} */ (reader.readEnum());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.QueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.QueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.QueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSourceRef();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {!proto.customer.v1beta1.Risk} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int64 offset = 1;
 * @return {number}
 */
proto.customer.v1beta1.QueryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.customer.v1beta1.QueryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string search_text = 3;
 * @return {string}
 */
proto.customer.v1beta1.QueryRequest.prototype.getSearchText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setSearchText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string source_ref = 4;
 * @return {string}
 */
proto.customer.v1beta1.QueryRequest.prototype.getSourceRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setSourceRef = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 null = 5;
 * @return {number}
 */
proto.customer.v1beta1.QueryRequest.prototype.getNull = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setNull = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.customer.v1beta1.QueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.clearNull = function() {
  return jspb.Message.setOneofField(this, 5, proto.customer.v1beta1.QueryRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.QueryRequest.prototype.hasNull = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Risk value = 6;
 * @return {!proto.customer.v1beta1.Risk}
 */
proto.customer.v1beta1.QueryRequest.prototype.getValue = function() {
  return /** @type {!proto.customer.v1beta1.Risk} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.customer.v1beta1.Risk} value
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.setValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.customer.v1beta1.QueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.customer.v1beta1.QueryRequest} returns this
 */
proto.customer.v1beta1.QueryRequest.prototype.clearValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.customer.v1beta1.QueryRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.QueryRequest.prototype.hasValue = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.customer.v1beta1.QueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.QueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.QueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.QueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.QueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.customer.v1beta1.Customer.toObject, includeInstance),
    matches: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.QueryResponse}
 */
proto.customer.v1beta1.QueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.QueryResponse;
  return proto.customer.v1beta1.QueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.QueryResponse}
 */
proto.customer.v1beta1.QueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.QueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.QueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.QueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
  f = message.getMatches();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated Customer data = 1;
 * @return {!Array<!proto.customer.v1beta1.Customer>}
 */
proto.customer.v1beta1.QueryResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.customer.v1beta1.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {!Array<!proto.customer.v1beta1.Customer>} value
 * @return {!proto.customer.v1beta1.QueryResponse} returns this
*/
proto.customer.v1beta1.QueryResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.customer.v1beta1.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.QueryResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.customer.v1beta1.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.customer.v1beta1.QueryResponse} returns this
 */
proto.customer.v1beta1.QueryResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional int64 matches = 2;
 * @return {number}
 */
proto.customer.v1beta1.QueryResponse.prototype.getMatches = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.QueryResponse} returns this
 */
proto.customer.v1beta1.QueryResponse.prototype.setMatches = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    degrees: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.GetRequest}
 */
proto.customer.v1beta1.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.GetRequest;
  return proto.customer.v1beta1.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.GetRequest}
 */
proto.customer.v1beta1.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDegrees(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDegrees();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.customer.v1beta1.GetRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.GetRequest} returns this
 */
proto.customer.v1beta1.GetRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 degrees = 2;
 * @return {number}
 */
proto.customer.v1beta1.GetRequest.prototype.getDegrees = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.GetRequest} returns this
 */
proto.customer.v1beta1.GetRequest.prototype.setDegrees = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: (f = msg.getCustomer()) && proto.customer.v1beta1.Customer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.GetResponse}
 */
proto.customer.v1beta1.GetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.GetResponse;
  return proto.customer.v1beta1.GetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.GetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.GetResponse}
 */
proto.customer.v1beta1.GetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.GetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.GetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.GetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.GetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.GetResponse.prototype.getCustomer = function() {
  return /** @type{?proto.customer.v1beta1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {?proto.customer.v1beta1.Customer|undefined} value
 * @return {!proto.customer.v1beta1.GetResponse} returns this
*/
proto.customer.v1beta1.GetResponse.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customer.v1beta1.GetResponse} returns this
 */
proto.customer.v1beta1.GetResponse.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.GetResponse.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: (f = msg.getCustomer()) && proto.customer.v1beta1.Customer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.UpdateRequest}
 */
proto.customer.v1beta1.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.UpdateRequest;
  return proto.customer.v1beta1.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.UpdateRequest}
 */
proto.customer.v1beta1.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.UpdateRequest.prototype.getCustomer = function() {
  return /** @type{?proto.customer.v1beta1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {?proto.customer.v1beta1.Customer|undefined} value
 * @return {!proto.customer.v1beta1.UpdateRequest} returns this
*/
proto.customer.v1beta1.UpdateRequest.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customer.v1beta1.UpdateRequest} returns this
 */
proto.customer.v1beta1.UpdateRequest.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.UpdateRequest.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: (f = msg.getCustomer()) && proto.customer.v1beta1.Customer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.UpdateResponse}
 */
proto.customer.v1beta1.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.UpdateResponse;
  return proto.customer.v1beta1.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.UpdateResponse}
 */
proto.customer.v1beta1.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.customer.v1beta1.Customer;
      reader.readMessage(value,proto.customer.v1beta1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.customer.v1beta1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.UpdateResponse.prototype.getCustomer = function() {
  return /** @type{?proto.customer.v1beta1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.customer.v1beta1.Customer, 1));
};


/**
 * @param {?proto.customer.v1beta1.Customer|undefined} value
 * @return {!proto.customer.v1beta1.UpdateResponse} returns this
*/
proto.customer.v1beta1.UpdateResponse.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.customer.v1beta1.UpdateResponse} returns this
 */
proto.customer.v1beta1.UpdateResponse.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.customer.v1beta1.UpdateResponse.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.SetRiskRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.SetRiskRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.SetRiskRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.SetRiskRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    risk: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.SetRiskRequest}
 */
proto.customer.v1beta1.SetRiskRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.SetRiskRequest;
  return proto.customer.v1beta1.SetRiskRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.SetRiskRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.SetRiskRequest}
 */
proto.customer.v1beta1.SetRiskRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    case 2:
      var value = /** @type {!proto.customer.v1beta1.Risk} */ (reader.readEnum());
      msg.setRisk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.SetRiskRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.SetRiskRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.SetRiskRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.SetRiskRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRisk();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.customer.v1beta1.SetRiskRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.SetRiskRequest} returns this
 */
proto.customer.v1beta1.SetRiskRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Risk risk = 2;
 * @return {!proto.customer.v1beta1.Risk}
 */
proto.customer.v1beta1.SetRiskRequest.prototype.getRisk = function() {
  return /** @type {!proto.customer.v1beta1.Risk} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.customer.v1beta1.Risk} value
 * @return {!proto.customer.v1beta1.SetRiskRequest} returns this
 */
proto.customer.v1beta1.SetRiskRequest.prototype.setRisk = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.SetRiskResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.SetRiskResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.SetRiskResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.SetRiskResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.SetRiskResponse}
 */
proto.customer.v1beta1.SetRiskResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.SetRiskResponse;
  return proto.customer.v1beta1.SetRiskResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.SetRiskResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.SetRiskResponse}
 */
proto.customer.v1beta1.SetRiskResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.SetRiskResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.SetRiskResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.SetRiskResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.SetRiskResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.DeleteRequest}
 */
proto.customer.v1beta1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.DeleteRequest;
  return proto.customer.v1beta1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.DeleteRequest}
 */
proto.customer.v1beta1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customer_id = 1;
 * @return {string}
 */
proto.customer.v1beta1.DeleteRequest.prototype.getCustomerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.DeleteRequest} returns this
 */
proto.customer.v1beta1.DeleteRequest.prototype.setCustomerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.DeleteResponse}
 */
proto.customer.v1beta1.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.DeleteResponse;
  return proto.customer.v1beta1.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.DeleteResponse}
 */
proto.customer.v1beta1.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.customer.v1beta1.Customer.prototype.toObject = function(opt_includeInstance) {
  return proto.customer.v1beta1.Customer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.customer.v1beta1.Customer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.Customer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    purpose: jspb.Message.getFieldWithDefault(msg, 2, ""),
    risk: jspb.Message.getFieldWithDefault(msg, 3, 0),
    regCountry: jspb.Message.getFieldWithDefault(msg, 4, ""),
    busCountry: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tradeCountries: jspb.Message.getFieldWithDefault(msg, 6, ""),
    payCountries: jspb.Message.getFieldWithDefault(msg, 7, ""),
    domTransValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    domTransVolume: jspb.Message.getFieldWithDefault(msg, 9, 0),
    domTransFreq: jspb.Message.getFieldWithDefault(msg, 10, ""),
    intTransValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    intTransVolume: jspb.Message.getFieldWithDefault(msg, 12, 0),
    intTransFreq: jspb.Message.getFieldWithDefault(msg, 13, ""),
    prodOffshore: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    thirdPartyOperate: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    thirdPartyReceipts: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    indirectRelationships: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    accessMethod: jspb.Message.getFieldWithDefault(msg, 18, ""),
    exposureUnregulated: jspb.Message.getFieldWithDefault(msg, 19, ""),
    exposureShellCo: jspb.Message.getFieldWithDefault(msg, 20, ""),
    exposureShellBank: jspb.Message.getFieldWithDefault(msg, 21, ""),
    receiveCountries: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.Customer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.customer.v1beta1.Customer;
  return proto.customer.v1beta1.Customer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.customer.v1beta1.Customer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.customer.v1beta1.Customer}
 */
proto.customer.v1beta1.Customer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurpose(value);
      break;
    case 3:
      var value = /** @type {!proto.customer.v1beta1.Risk} */ (reader.readEnum());
      msg.setRisk(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegCountry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusCountry(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeCountries(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayCountries(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDomTransValue(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDomTransVolume(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomTransFreq(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIntTransValue(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntTransVolume(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntTransFreq(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProdOffshore(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThirdPartyOperate(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThirdPartyReceipts(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIndirectRelationships(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessMethod(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setExposureUnregulated(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setExposureShellCo(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setExposureShellBank(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.customer.v1beta1.Customer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.customer.v1beta1.Customer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.customer.v1beta1.Customer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.customer.v1beta1.Customer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPurpose();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRisk();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRegCountry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBusCountry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTradeCountries();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPayCountries();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDomTransValue();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getDomTransVolume();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getDomTransFreq();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIntTransValue();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getIntTransVolume();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getIntTransFreq();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getProdOffshore();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getThirdPartyOperate();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getThirdPartyReceipts();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIndirectRelationships();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAccessMethod();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getExposureUnregulated();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getExposureShellCo();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getExposureShellBank();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getReceiveCountries();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string purpose = 2;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getPurpose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setPurpose = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Risk risk = 3;
 * @return {!proto.customer.v1beta1.Risk}
 */
proto.customer.v1beta1.Customer.prototype.getRisk = function() {
  return /** @type {!proto.customer.v1beta1.Risk} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.customer.v1beta1.Risk} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setRisk = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string reg_country = 4;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getRegCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setRegCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bus_country = 5;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getBusCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setBusCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string trade_countries = 6;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getTradeCountries = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setTradeCountries = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pay_countries = 7;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getPayCountries = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setPayCountries = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double dom_trans_value = 8;
 * @return {number}
 */
proto.customer.v1beta1.Customer.prototype.getDomTransValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setDomTransValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int64 dom_trans_volume = 9;
 * @return {number}
 */
proto.customer.v1beta1.Customer.prototype.getDomTransVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setDomTransVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string dom_trans_freq = 10;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getDomTransFreq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setDomTransFreq = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double int_trans_value = 11;
 * @return {number}
 */
proto.customer.v1beta1.Customer.prototype.getIntTransValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setIntTransValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional int64 int_trans_volume = 12;
 * @return {number}
 */
proto.customer.v1beta1.Customer.prototype.getIntTransVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setIntTransVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string int_trans_freq = 13;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getIntTransFreq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setIntTransFreq = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool prod_offshore = 14;
 * @return {boolean}
 */
proto.customer.v1beta1.Customer.prototype.getProdOffshore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setProdOffshore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool third_party_operate = 15;
 * @return {boolean}
 */
proto.customer.v1beta1.Customer.prototype.getThirdPartyOperate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setThirdPartyOperate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool third_party_receipts = 16;
 * @return {boolean}
 */
proto.customer.v1beta1.Customer.prototype.getThirdPartyReceipts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setThirdPartyReceipts = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool indirect_relationships = 17;
 * @return {boolean}
 */
proto.customer.v1beta1.Customer.prototype.getIndirectRelationships = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setIndirectRelationships = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string access_method = 18;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getAccessMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setAccessMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string exposure_unregulated = 19;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getExposureUnregulated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setExposureUnregulated = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string exposure_shell_co = 20;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getExposureShellCo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setExposureShellCo = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string exposure_shell_bank = 21;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getExposureShellBank = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setExposureShellBank = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string receive_countries = 22;
 * @return {string}
 */
proto.customer.v1beta1.Customer.prototype.getReceiveCountries = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.customer.v1beta1.Customer} returns this
 */
proto.customer.v1beta1.Customer.prototype.setReceiveCountries = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * @enum {number}
 */
proto.customer.v1beta1.Risk = {
  RISK_UNSPECIFIED: 0,
  RISK_LOW: 1,
  RISK_MODERATE: 2,
  RISK_HIGH: 3
};

goog.object.extend(exports, proto.customer.v1beta1);
