
var InitIdesmicro = (function() {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  return (
function(InitIdesmicro) {
  InitIdesmicro = InitIdesmicro || {};

var Module=typeof InitIdesmicro!=="undefined"?InitIdesmicro:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=function(status,toThrow){throw toThrow};Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module["ENVIRONMENT"]){throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)")}var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",abort);Module["quit"]=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=function(status){quit(status)}}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=function(title){document.title=title}}else{throw new Error("environment detection error")}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;assert(typeof Module["memoryInitializerPrefixURL"]==="undefined","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["pthreadMainPrefixURL"]==="undefined","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["cdInitializerPrefixURL"]==="undefined","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["filePackagePrefixURL"]==="undefined","Module.filePackagePrefixURL option was removed, use Module.locateFile instead");stackSave=stackRestore=stackAlloc=function(){abort("cannot use the stack before compiled code is ready to run, and has provided stack access")};function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end<=_emscripten_get_heap_size()){HEAP32[DYNAMICTOP_PTR>>2]=end}else{var success=_emscripten_resize_heap(end);if(!success)return 0}return ret}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":function(x,y){return x%y},"debugger":function(){debugger}};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};if(typeof WebAssembly!=="object"){abort("No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce("Invalid UTF-8 leading byte 0x"+u0.toString(16)+" encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!");u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>=2097152)warnOnce("Invalid Unicode code point 0x"+u.toString(16)+" encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).");outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){assert(array.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)");HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===str.charCodeAt(i)&255);HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function demangle(func){warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STACK_BASE=628800,STACK_MAX=5871680,DYNAMIC_BASE=5871680,DYNAMICTOP_PTR=628544;assert(STACK_BASE%16===0,"stack must start aligned");assert(DYNAMIC_BASE%16===0,"heap must start aligned");var TOTAL_STACK=5242880;if(Module["TOTAL_STACK"])assert(TOTAL_STACK===Module["TOTAL_STACK"],"the stack size can no longer be determined at runtime");var INITIAL_TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+INITIAL_TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&Int32Array.prototype.subarray!==undefined&&Int32Array.prototype.set!==undefined,"JS engine does not provide full typed array support");if(Module["buffer"]){buffer=Module["buffer"];assert(buffer.byteLength===INITIAL_TOTAL_MEMORY,"provided buffer should be "+INITIAL_TOTAL_MEMORY+" bytes, but it is "+buffer.byteLength)}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){assert(INITIAL_TOTAL_MEMORY%WASM_PAGE_SIZE===0);wasmMemory=new WebAssembly.Memory({"initial":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=wasmMemory.buffer}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}assert(buffer.byteLength===INITIAL_TOTAL_MEMORY)}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function writeStackCookie(){assert((STACK_MAX&3)==0);HEAPU32[(STACK_MAX>>2)-1]=34821223;HEAPU32[(STACK_MAX>>2)-2]=2310721022}function checkStackCookie(){if(HEAPU32[(STACK_MAX>>2)-1]!=34821223||HEAPU32[(STACK_MAX>>2)-2]!=2310721022){abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x"+HEAPU32[(STACK_MAX>>2)-2].toString(16)+" "+HEAPU32[(STACK_MAX>>2)-1].toString(16))}if(HEAP32[0]!==1668509029)throw"Runtime error: The application has corrupted its heap memory area (address zero)!"}function abortStackOverflow(allocSize){abort("Stack overflow! Attempted to allocate "+allocSize+" bytes on the stack, but stack has only "+(STACK_MAX-stackSave()+allocSize)+" bytes available!")}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){checkStackCookie();if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){checkStackCookie();callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){checkStackCookie();runtimeExited=true}function postRun(){checkStackCookie();if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=="undefined"){runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err("still waiting on run dependencies:")}err("dependency: "+dep)}if(shown){err("(end of list)")}},1e4)}}else{err("warning: run dependency added without ID")}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err("warning: run dependency removed without ID")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var FS={error:function(){abort("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1")},init:function(){FS.error()},createDataFile:function(){FS.error()},createPreloadedFile:function(){FS.error()},createLazyFile:function(){FS.error()},open:function(){FS.error()},mkdev:function(){FS.error()},registerDevice:function(){FS.error()},analyzePath:function(){FS.error()},loadFilesFromDB:function(){FS.error()},ErrnoError:function ErrnoError(){FS.error()}};Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile="idesmicro_asm.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={"env":env,"global":{"NaN":NaN,Infinity:Infinity},"global.Math":Math,"asm2wasm":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}var trueModule=Module;function receiveInstantiatedSource(output){assert(Module===trueModule,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");trueModule=null;receiveInstance(output["instance"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)})}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asm"]=function(global,env,providedBuffer){env["memory"]=wasmMemory;env["table"]=wasmTable=new WebAssembly.Table({"initial":4096,"maximum":4096,"element":"anyfunc"});env["__memory_base"]=1024;env["__table_base"]=0;var exports=createWasm(env);assert(exports,"binaryen setup failed (no wasm support?)");return exports};__ATINIT__.push({func:function(){__GLOBAL__I_000101()}},{func:function(){___cxx_global_var_init_20()}},{func:function(){___cxx_global_var_init_21()}},{func:function(){___cxx_global_var_init_22()}},{func:function(){___cxx_global_var_init_23()}},{func:function(){___cxx_global_var_init_24()}},{func:function(){___cxx_global_var_init_25()}},{func:function(){___cxx_global_var_init_26()}},{func:function(){___cxx_global_var_init_27()}},{func:function(){___cxx_global_var_init_28()}},{func:function(){__GLOBAL__sub_I_idesmicro_js_cpp()}},{func:function(){__GLOBAL__sub_I_ocl_cpp()}},{func:function(){__GLOBAL__sub_I_system_cpp()}},{func:function(){__GLOBAL__sub_I_umatrix_cpp()}},{func:function(){__GLOBAL__sub_I_kmeans_cpp()}},{func:function(){__GLOBAL__sub_I_trace_cpp()}},{func:function(){__GLOBAL__sub_I_loadsave_cpp()}},{func:function(){__GLOBAL__sub_I_grfmt_webp_cpp()}},{func:function(){__GLOBAL__sub_I_color_lab_cpp()}},{func:function(){__GLOBAL__sub_I_bind_cpp()}},{func:function(){___emscripten_environ_constructor()}},{func:function(){__GLOBAL__sub_I_iostream_cpp()}});var tempDoublePtr=628784;assert(tempDoublePtr%8==0);function ___atomic_compare_exchange_8(ptr,expected,desiredl,desiredh,weak,success_memmodel,failure_memmodel){var pl=HEAP32[ptr>>2];var ph=HEAP32[ptr+4>>2];var el=HEAP32[expected>>2];var eh=HEAP32[expected+4>>2];if(pl===el&&ph===eh){HEAP32[ptr>>2]=desiredl;HEAP32[ptr+4>>2]=desiredh;return 1}else{HEAP32[expected>>2]=pl;HEAP32[expected+4>>2]=ph;return 0}}function ___atomic_fetch_add_8(ptr,vall,valh,memmodel){var l=HEAP32[ptr>>2];var h=HEAP32[ptr+4>>2];HEAP32[ptr>>2]=_i64Add(l,h,vall,valh);HEAP32[ptr+4>>2]=getTempRet0();return(setTempRet0(h),l)|0}function ___atomic_fetch_sub_8(ptr,vall,valh,memmodel){var l=HEAP32[ptr>>2];var h=HEAP32[ptr+4>>2];HEAP32[ptr>>2]=_i64Subtract(l,h,vall,valh);HEAP32[ptr+4>>2]=getTempRet0();return(setTempRet0(h),l)|0}var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]==="string"){var line=key+"="+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return 0||ENVIRONMENT_IS_NODE||typeof dateNow!=="undefined"||typeof performance==="object"&&performance&&typeof performance["now"]==="function"}function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;else err("failed to set errno from JS");return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(22);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}function ___cxa_allocate_exception(size){return _malloc(size)}function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){err("exception during cxa_free_exception: "+e)}}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted},addRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++},decRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}},clearRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0}};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_end_catch(){_setThrew(0);var ptr=EXCEPTIONS.caught.pop();if(ptr){EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));EXCEPTIONS.last=0}}function ___cxa_find_matching_catch_2(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_3(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_4(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_5(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_get_exception_ptr(ptr){return ptr}function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function ___cxa_rethrow(){var ptr=EXCEPTIONS.caught.pop();ptr=EXCEPTIONS.deAdjust(ptr);if(!EXCEPTIONS.infos[ptr].rethrown){EXCEPTIONS.caught.push(ptr);EXCEPTIONS.infos[ptr].rethrown=true}EXCEPTIONS.last=ptr;throw ptr}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted.push(thrown);return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr}function ___cxa_uncaught_exception(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___lock(){}function ___map_file(pathname,size){___setErrNo(1);return-1}var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low},getZero:function(){assert(SYSCALLS.get()===0)}};function ___syscall10(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.unlink(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function flush_NO_FILESYSTEM(){var fflush=Module["_fflush"];if(fflush)fflush(0);var buffers=SYSCALLS.buffers;if(buffers[1].length)SYSCALLS.printChar(1,10);if(buffers[2].length)SYSCALLS.printChar(2,10)}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall40(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr();FS.rmdir(path);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return"_unknown"}name=name.replace(/[^a-zA-Z0-9_]/g,"$");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return"_"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function("body","return function "+name+"() {\n"+'    "use strict";'+"    return body.apply(this, arguments);\n"+"};\n")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+"\n"+stack.replace(/^Error(:[^\n]*)?\n/,"")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+": "+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError("Mismatched type converter count")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!("argPackAdvance"in registeredInstance)){throw new TypeError("registerType registeredInstance requires argPackAdvance")}var name=registeredInstance.name;if(!rawType){throwBindingError('type "'+name+'" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError("Cannot register type '"+name+"' twice")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(wt){return!!wt},"toWireType":function(destructors,o){return o?trueValue:falseValue},"argPackAdvance":8,"readValueFromPointer":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError("Unknown boolean type size: "+name)}return this["fromWireType"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+" instance already deleted")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj["delete"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype["isAliasOf"]=ClassHandle_isAliasOf;ClassHandle.prototype["clone"]=ClassHandle_clone;ClassHandle.prototype["delete"]=ClassHandle_delete;ClassHandle.prototype["isDeleted"]=ClassHandle_isDeleted;ClassHandle.prototype["deleteLater"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError("Function '"+humanName+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+proto[methodName].overloadTable+")!")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError("Cannot register public name '"+name+"' twice")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError("Cannot register multiple overloads of a function with the same number of arguments ("+numArguments+")!")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError("Expected null or instance of "+desiredClass.name+", got an instance of "+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name)}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name)}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError("Cannot convert argument of type "+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+" to parameter type "+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError("Passing raw pointer to smart pointer is illegal")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError("Cannot convert argument of type "+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+" to parameter type "+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle["clone"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle["delete"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError("Unsupporting sharing policy")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name)}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name)}if(handle.$$.ptrType.isConst){throwBindingError("Cannot convert argument of type "+handle.$$.ptrType.name+" to parameter type "+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle["delete"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module["getInheritedInstanceCount"]=getInheritedInstanceCount;Module["getLiveInheritedInstances"]=getLiveInheritedInstances;Module["flushPendingDeletes"]=flushPendingDeletes;Module["setDelayFunction"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError("ptr should not be undefined")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError("makeClassHandle requires ptr and ptrType")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError("Both smartPtrType and smartPtr must be specified")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance["clone"]()}else{var rv=registeredInstance["clone"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype["argPackAdvance"]=8;RegisteredPointer.prototype["readValueFromPointer"]=simpleReadValueFromPointer;RegisteredPointer.prototype["deleteObject"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype["fromWireType"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this["toWireType"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this["toWireType"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this["toWireType"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError("Replacing nonexistant public symbol")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push("a"+i)}var name="dynCall_"+signature+"_"+rawFunction;var body="return function "+name+"("+args.join(", ")+") {\n";body+="    return dynCall(rawFunction"+(args.length?", ":"")+args.join(", ")+");\n";body+="};\n";return new Function("dynCall","rawFunction",body)(dynCall,rawFunction)}var fp;if(Module["FUNCTION_TABLE_"+signature]!==undefined){fp=Module["FUNCTION_TABLE_"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!=="undefined"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module["dynCall_"+signature];if(dc===undefined){dc=Module["dynCall_"+signature.replace(/f/g,"d")];if(dc===undefined){throwBindingError("No dynCall invoker for signature: "+signature)}}fp=makeDynCaller(dc)}if(typeof fp!=="function"){throwBindingError("unknown function pointer with signature "+signature+": "+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError("Cannot construct "+name+" due to unbound types",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError("Use 'new' to construct "+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+" has no accessible constructor")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError("Tried to invoke ctor of "+name+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(registeredClass.constructor_body).toString()+") parameters instead!")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+"*",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName="constructor "+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError("Cannot register multiple constructors with identical number of parameters ("+(argCount-1)+") for class '"+classType.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError("Cannot construct "+classType.name+" due to unbound types",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+" called with "+arguments.length+" arguments, expected "+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i]["toWireType"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0]["fromWireType"](ptr)};return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid "this": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with "this" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError("cannot call emscripten binding method "+humanName+" on deleted object")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+"."+fieldName;var desc={get:function(){throwUnboundTypeError("Cannot access "+humanName+" due to unbound types",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=function(){throwUnboundTypeError("Cannot access "+humanName+" due to unbound types",[getterReturnType,setterArgumentType])}}else{desc.set=function(v){throwBindingError(humanName+" is a read-only property")}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+" getter");return getterReturnType["fromWireType"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+" setter");var destructors=[];setter(setterContext,ptr,setterArgumentType["toWireType"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module["count_emval_handles"]=count_emval_handles;Module["get_first_emval"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},"toWireType":function(destructors,value){return __emval_register(value)},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return"null"}var t=typeof v;if(t==="object"||t==="array"||t==="function"){return v.toString()}else{return""+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(value){return value},"toWireType":function(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name)}return value},"argPackAdvance":8,"readValueFromPointer":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError("new_ called with constructor type "+typeof constructor+" which is not a function")}var dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!=="void";var argsList="";var argsListWired="";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?", ":"")+"arg"+i;argsListWired+=(i!==0?", ":"")+"arg"+i+"Wired"}var invokerFnBody="return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n"+"if (arguments.length !== "+(argCount-2)+") {\n"+"throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount-2)+" args!');\n"+"}\n";if(needsDestructorStack){invokerFnBody+="var destructors = [];\n"}var dtorStack=needsDestructorStack?"destructors":"null";var args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n"}for(var i=0;i<argCount-2;++i){invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";args1.push("argType"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired="thisWired"+(argsListWired.length>0?", ":"")+argsListWired}invokerFnBody+=(returns?"var rv = ":"")+"invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";if(needsDestructorStack){invokerFnBody+="runDestructors(destructors);\n"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?"thisWired":"arg"+(i-2)+"Wired";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";args1.push(paramName+"_dtor");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+="var ret = retType.fromWireType(rv);\n"+"return ret;\n"}else{}invokerFnBody+="}\n";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError("Cannot call "+name+" due to unbound types",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf("unsigned")!=-1;registerType(primitiveType,{name:name,"fromWireType":fromWireType,"toWireType":function(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number "'+_embind_repr(value)+'" from JS side to C/C++ side to an argument of type "'+name+'", which is outside the valid range ['+minRange+", "+maxRange+"]!")}return isUnsignedType?value>>>0:value|0},"argPackAdvance":8,"readValueFromPointer":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap["buffer"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":decodeMemoryView,"argPackAdvance":8,"readValueFromPointer":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name==="std::string";registerType(rawType,{name:name,"fromWireType":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join("")}_free(value);return str},"toWireType":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value==="string";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError("Cannot pass non-string to std::string")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError("String has UTF-16 code units that do not fit in 8 bits")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,"fromWireType":function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join("")},"toWireType":function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,"argPackAdvance":0,"fromWireType":function(){return undefined},"toWireType":function(destructors,o){return undefined}})}function _abort(){Module["abort"]()}function _emscripten_console_error(str){assert(typeof str==="number");console.error(UTF8ToString(str))}function _emscripten_get_heap_size(){return HEAP8.length}function _longjmp(env,value){_setThrew(env,value||1);throw"longjmp"}function _emscripten_longjmp(env,value){_longjmp(env,value)}function abortOnCannotGrowMemory(requestedSize){abort("Cannot enlarge memory arrays to size "+requestedSize+" bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+HEAP8.length+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function emscripten_realloc_buffer(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var oldSize=buffer.byteLength;try{var result=wasmMemory.grow((size-oldSize)/65536);if(result!==(-1|0)){return buffer=wasmMemory.buffer}else{return null}}catch(e){console.error("emscripten_realloc_buffer: Attempted to grow from "+oldSize+" bytes to "+size+" bytes, but got error: "+e);return null}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();assert(requestedSize>oldSize);var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){err("Cannot enlarge memory, asked to go up to "+requestedSize+" bytes, but the limit is "+LIMIT+" bytes!");return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT);if(newSize===oldSize){warnOnce("Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only "+HEAP8.length)}}}var start=Date.now();var replacement=emscripten_realloc_buffer(newSize);if(!replacement||replacement.byteLength!=newSize){err("Failed to grow the heap from "+oldSize+" bytes to "+newSize+" bytes, not enough memory!");if(replacement){err("Expected to get back a buffer of size "+newSize+" bytes, but instead got back a buffer of size "+replacement.byteLength)}return false}updateGlobalBufferViews();return true}function _exit(status){exit(status)}function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _llvm_eh_typeid_for(type){return type}function _llvm_log10_f32(x){return Math.log(x)/Math.LN10}function _llvm_log10_f64(a0){return _llvm_log10_f32(a0)}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort("trap!")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _pthread_cond_destroy(){return 0}function _pthread_cond_init(){return 0}function _pthread_cond_signal(){return 0}function _pthread_cond_wait(){return 0}function _pthread_create(){return 11}function _pthread_join(){}function _pthread_mutexattr_destroy(){}function _pthread_mutexattr_init(){}function _pthread_mutexattr_settype(){}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7},"%U":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"},"%V":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},"%w":function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()},"%W":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else if(typeof performance==="object"&&performance&&typeof performance["now"]==="function"){_emscripten_get_now=function(){return performance["now"]()}}else{_emscripten_get_now=Date.now}embind_init_charCodes();BindingError=Module["BindingError"]=extendError(Error,"BindingError");InternalError=Module["InternalError"]=extendError(Error,"InternalError");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module["UnboundTypeError"]=extendError(Error,"UnboundTypeError");init_emval();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var debug_table_di=["0","__ZN2cv11contourAreaERKNS_11_InputArrayEb","__ZN4ides13docextraction9extractor9linearityENSt3__26vectorIN2cv6Point_IiEENS2_9allocatorIS6_EEEE","0"];var debug_table_dii=["0","__ZNK4ides13docextraction4quad8get_rankERKN2cv5Size_IiEE","__ZN4ides13docextraction4quad29get_scal_invariant_similarityERKS1_","__ZN2cv9arcLengthERKNS_11_InputArrayEb","__ZN2cv4normERKNS_11_InputArrayES2_iS2_","0","0","0"];var debug_table_diii=["0","__ZN2cv16pointPolygonTestERKNS_11_InputArrayENS_6Point_IfEEb"];var debug_table_fii=["0","__ZN10emscripten8internal12MemberAccessIN8idesWASM9DeeResultEfE7getWireIS3_EEfRKMS3_fRKT_"];var debug_table_i=["0","__ZL36OPENCL_FN_clUnloadCompiler_switch_fnv","__ZN10emscripten8internal12operator_newIN8idesWASM9DeeResultEJEEEPT_DpOT0_","__ZN10emscripten8internal12operator_newIN8idesWASM13QualityResultEJEEEPT_DpOT0_","__ZN10emscripten8internal12operator_newIN8idesWASM19LowResolutionResultEJEEEPT_DpOT0_","__ZN2cv3Mat19getDefaultAllocatorEv","__ZN2cv3ocl17isOpenCLActivatedEv","__ZN2cv3ocl6Device10getDefaultEv","__ZN2cv3ocl10haveOpenCLEv","__ZN2cv5utils7logging11getLogLevelEv","__ZN2cv3ocl7Context10getDefaultEb","__ZN2cv3ocl5Queue10getDefaultEv","__ZN2cv3ocl8internal26isPerformanceCheckBypassedEv","__ZN2cvL13getTlsStorageEv","__ZN2cvL21getUMatDataAutoLockerEv","__ZN2cv3ocl9useOpenCLEv","__ZN2cv3ocl18getOpenCLAllocatorEv","__ZN2cv5utils5trace7details15getTraceManagerEv","__ZN2cv5utils11getThreadIDEv","_png_create_read_struct","_png_create_write_struct","_cvCreateMemStorage","__ZNSt3__26locale8__globalEv","0","0","0","0","0","0","0","0","0"];var debug_table_ii=["0","__ZN7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIPKcE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIPKcE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIiE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIiE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIfE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIfE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIbE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIbE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIjE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyIjE4typeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8get_sizeEv","__ZN7cvflann7anyimpl21typed_base_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE4typeEv","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv","__ZNK2cv25DummyBufferPoolController15getReservedSizeEv","__ZNK2cv25DummyBufferPoolController18getMaxReservedSizeEv","__ZNK2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE15getReservedSizeEv","__ZNK2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE18getMaxReservedSizeEv","__ZL44OPENCL_FN_clUnloadPlatformCompiler_switch_fnP15_cl_platform_id","__ZL35OPENCL_FN_clRetainSampler_switch_fnP11_cl_sampler","__ZL35OPENCL_FN_clRetainProgram_switch_fnP11_cl_program","__ZL37OPENCL_FN_clRetainMemObject_switch_fnP7_cl_mem","__ZL34OPENCL_FN_clRetainKernel_switch_fnP10_cl_kernel","__ZL33OPENCL_FN_clRetainEvent_switch_fnP9_cl_event","__ZL34OPENCL_FN_clRetainDevice_switch_fnP13_cl_device_id","__ZL35OPENCL_FN_clRetainContext_switch_fnP11_cl_context","__ZL40OPENCL_FN_clRetainCommandQueue_switch_fnP17_cl_command_queue","__ZL36OPENCL_FN_clReleaseSampler_switch_fnP11_cl_sampler","__ZL36OPENCL_FN_clReleaseProgram_switch_fnP11_cl_program","__ZL38OPENCL_FN_clReleaseMemObject_switch_fnP7_cl_mem","__ZL35OPENCL_FN_clReleaseKernel_switch_fnP10_cl_kernel","__ZL34OPENCL_FN_clReleaseEvent_switch_fnP9_cl_event","__ZL35OPENCL_FN_clReleaseDevice_switch_fnP13_cl_device_id","__ZL36OPENCL_FN_clReleaseContext_switch_fnP11_cl_context","__ZL41OPENCL_FN_clReleaseCommandQueue_switch_fnP17_cl_command_queue","__ZL49OPENCL_FN_clGetExtensionFunctionAddress_switch_fnPKc","__ZL27OPENCL_FN_clFlush_switch_fnP17_cl_command_queue","__ZL28OPENCL_FN_clFinish_switch_fnP17_cl_command_queue","__ZL36OPENCL_FN_clEnqueueBarrier_switch_fnP17_cl_command_queue","__ZNK2cv9Exception4whatEv","__ZNK2cv7TLSDataINS_11CoreTLSDataEE18createDataInstanceEv","__ZNK2cv7TLSDataINS_12_GLOBAL__N_18ThreadIDEE18createDataInstanceEv","__ZNK2cv7TLSDataINS_18UMatDataAutoLockerEE18createDataInstanceEv","__ZNK2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEE18createDataInstanceEv","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE4syncEv","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9underflowEv","__ZNK2cv16BaseImageDecoder4typeEv","__ZN2cv10BmpDecoder10readHeaderEv","__ZN2cv16BaseImageDecoder8nextPageEv","__ZNK2cv16BaseImageDecoder15signatureLengthEv","__ZN2cv10HdrDecoder10readHeaderEv","__ZNK2cv10HdrDecoder15signatureLengthEv","__ZN2cv11JpegDecoder10readHeaderEv","__ZN2cv10PAMDecoder10readHeaderEv","__ZNK2cv10PAMDecoder15signatureLengthEv","__ZN2cv10PFMDecoder10readHeaderEv","__ZNK2cv10PFMDecoder15signatureLengthEv","__ZN2cv10PngDecoder10readHeaderEv","__ZN2cv10PxMDecoder10readHeaderEv","__ZNK2cv10PxMDecoder15signatureLengthEv","__ZN2cv16SunRasterDecoder10readHeaderEv","__ZN2cv11WebPDecoder10readHeaderEv","__ZNK2cv11WebPDecoder15signatureLengthEv","__ZNKSt13runtime_error4whatEv","___stdio_close","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv","__ZNKSt3__219__iostream_category4nameEv","__ZNSt3__211__stdoutbufIwE4syncEv","__ZNSt3__211__stdoutbufIcE4syncEv","__ZNSt3__210__stdinbufIwE9underflowEv","__ZNSt3__210__stdinbufIwE5uflowEv","__ZNSt3__210__stdinbufIcE9underflowEv","__ZNSt3__210__stdinbufIcE5uflowEv","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv","__ZNKSt3__220__time_get_c_storageIcE7__weeksEv","__ZNKSt3__220__time_get_c_storageIcE8__monthsEv","__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv","__ZNKSt3__220__time_get_c_storageIcE3__cEv","__ZNKSt3__220__time_get_c_storageIcE3__rEv","__ZNKSt3__220__time_get_c_storageIcE3__xEv","__ZNKSt3__220__time_get_c_storageIcE3__XEv","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv","__ZNKSt3__220__time_get_c_storageIwE7__weeksEv","__ZNKSt3__220__time_get_c_storageIwE8__monthsEv","__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv","__ZNKSt3__220__time_get_c_storageIwE3__cEv","__ZNKSt3__220__time_get_c_storageIwE3__rEv","__ZNKSt3__220__time_get_c_storageIwE3__xEv","__ZNKSt3__220__time_get_c_storageIwE3__XEv","__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv","__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv","__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv","__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv","__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv","__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv","__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv","__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv","__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv","__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv","__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv","__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv","__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv","__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv","__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv","__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv","__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv","__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv","__ZNKSt3__28numpunctIcE16do_decimal_pointEv","__ZNKSt3__28numpunctIcE16do_thousands_sepEv","__ZNKSt3__28numpunctIwE16do_decimal_pointEv","__ZNKSt3__28numpunctIwE16do_thousands_sepEv","__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv","__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv","__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv","__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv","__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv","__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv","__ZNKSt3__224__generic_error_category4nameEv","__ZNKSt3__223__system_error_category4nameEv","__ZNKSt9bad_alloc4whatEv","__ZNKSt11logic_error4whatEv","__ZNKSt8bad_cast4whatEv","__ZN10emscripten8internal13getActualTypeIN8idesWASM9DeeResultEEEPKvPT_","__ZN10emscripten8internal7InvokerIPN8idesWASM9DeeResultEJEE6invokeEPFS4_vE","__ZN10emscripten8internal13getActualTypeIN8idesWASM13QualityResultEEEPKvPT_","__ZN10emscripten8internal7InvokerIPN8idesWASM13QualityResultEJEE6invokeEPFS4_vE","__ZN10emscripten8internal13getActualTypeIN8idesWASM19LowResolutionResultEEEPKvPT_","__ZN10emscripten8internal7InvokerIPN8idesWASM19LowResolutionResultEJEE6invokeEPFS4_vE","__Znwm","__ZNK2cv3ocl8internal12ProgramEntrycvRNS0_13ProgramSourceEEv","__ZN2cv3ocl14memopTypeToStrEi","__ZNK2cv3ocl6Device12localMemSizeEv","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv","__Znam","__ZNK2cv11_InputArray5emptyEv","__ZNK2cv11_InputArray6offsetEi","__ZNK2cv11_InputArray4stepEi","__ZNK2cv11_InputArray4dimsEi","__ZN2cv11parseOptionIbEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE","__ZN2cv10TlsStorage11reserveSlotEv","__ZN2cv11parseOptionImEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE","__ZN2cv3ocl9typeToStrEi","__ZNK2cv11_InputArray5depthEi","__ZNK2cv11_InputArray8channelsEi","__ZNKSt3__26locale9has_facetERNS0_2idE","__ZN2cv12RLByteStream8getDWordEv","__ZN2cv12RLByteStream7getWordEv","__ZN2cv12RLByteStream7getByteEv","_fclose","_jpeg_std_error","__ZN2cvL17fill_input_bufferEP22jpeg_decompress_struct","_jpeg_alloc_huff_table","_jpeg_start_decompress","__ZN2cvL19empty_output_bufferEP20jpeg_compress_struct","__ZN2cv11RBaseStream6getPosEv","_png_create_info_struct","_png_set_longjmp_fn","_png_set_interlace_handling","__ZN2cv12RMByteStream8getDWordEv","__ZN2cv20allocSingletonBufferEm","__ZNK2cv11_InputArray4rowsEi","__ZNK2cv11_InputArray12isContinuousEi","__ZNK2cv11_InputArray4colsEi","__ZNK2cv3ocl6Device12imageSupportEv","__ZN2cv3ocl7Image2D14canCreateAliasERKNS_4UMatE","__ZN2cv15isContourConvexERKNS_11_InputArrayE","_empty_output_buffer","_fill_input_buffer","_consume_markers","_read_markers","_read_restart_marker","_skip_variable","_get_interesting_appn","_consume_data","_dummy_consume_data","_CustomPut","_CustomSetup","_ThreadLoop","_png_user_version_check","_cvEndWriteSeq","__ZNK2cv11_InputArray11isSubmatrixEi","_cvFindNextContour","_cvEndFindContours","__ZNK2cv11_InputArray5totalEi","_cvNextTreeNode","__ZN2cv12countNonZeroERKNS_11_InputArrayE","_pthread_cond_broadcast","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iid=["0","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEd"];var debug_table_iiddd=["0","__ZN4ides13docextraction12line_segment14is_intersectedERKNS0_4lineE"];var debug_table_iif=["0","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEf"];var debug_table_iii=["0","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE9get_valueEPPv","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE9get_valueEPKPv","__ZN7cvflann7anyimpl16small_any_policyIPKcE9get_valueEPPv","__ZN7cvflann7anyimpl16small_any_policyIPKcE9get_valueEPKPv","__ZN7cvflann7anyimpl16small_any_policyIiE9get_valueEPPv","__ZN7cvflann7anyimpl16small_any_policyIiE9get_valueEPKPv","__ZN7cvflann7anyimpl16small_any_policyIfE9get_valueEPPv","__ZN7cvflann7anyimpl16small_any_policyIfE9get_valueEPKPv","__ZN7cvflann7anyimpl16small_any_policyIbE9get_valueEPPv","__ZN7cvflann7anyimpl16small_any_policyIbE9get_valueEPKPv","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE9get_valueEPPv","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE9get_valueEPKPv","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE9get_valueEPPv","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE9get_valueEPKPv","__ZN7cvflann7anyimpl16small_any_policyIjE9get_valueEPPv","__ZN7cvflann7anyimpl16small_any_policyIjE9get_valueEPKPv","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE9get_valueEPPv","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE9get_valueEPKPv","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi","__ZNK2cv12MatAllocator23getBufferPoolControllerEPKc","__ZNK2cv3ocl15OpenCLAllocator23getBufferPoolControllerEPKc","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE8allocateEm","__ZThn4_N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE8allocateEm","__ZL35OPENCL_FN_clWaitForEvents_switch_fnjPKP9_cl_event","__ZL40OPENCL_FN_clSetUserEventStatus_switch_fnP9_cl_eventi","__ZL60OPENCL_FN_clGetExtensionFunctionAddressForPlatform_switch_fnP15_cl_platform_idPKc","__ZL35OPENCL_FN_clEnqueueMarker_switch_fnP17_cl_command_queuePP9_cl_event","__ZL37OPENCL_FN_clCreateUserEvent_switch_fnP11_cl_contextPi","__ZNK2cv12MatOp_Invert11elementWiseERKNS_7MatExprE","__ZNK2cv5MatOp4typeERKNS_7MatExprE","__ZNK2cv11MatOp_Solve11elementWiseERKNS_7MatExprE","__ZNK2cv14MatOp_Identity11elementWiseERKNS_7MatExprE","__ZNK2cv10MatOp_GEMM11elementWiseERKNS_7MatExprE","__ZNK2cv11MatOp_AddEx11elementWiseERKNS_7MatExprE","__ZNK2cv9MatOp_Bin11elementWiseERKNS_7MatExprE","__ZNK2cv7MatOp_T11elementWiseERKNS_7MatExprE","__ZNK2cv9MatOp_Cmp11elementWiseERKNS_7MatExprE","__ZNK2cv17MatOp_Initializer11elementWiseERKNS_7MatExprE","__ZNKSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details16SyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE13__get_deleterERKSt9type_info","__ZNK2cv5utils5trace7details16SyncTraceStorage3putERKNS2_12TraceMessageE","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE8overflowEi","__ZNKSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details17AsyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE13__get_deleterERKSt9type_info","__ZNK2cv5utils5trace7details17AsyncTraceStorage3putERKNS2_12TraceMessageE","__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info","__ZN2cv16BaseImageDecoder9setSourceERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZN2cv16BaseImageDecoder9setSourceERKNS_3MatE","__ZN2cv16BaseImageDecoder8setScaleERKi","__ZN2cv10BmpDecoder8readDataERNS_3MatE","__ZNK2cv16BaseImageDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNK2cv16BaseImageEncoder17isFormatSupportedEi","__ZN2cv16BaseImageEncoder14setDestinationERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZN2cv16BaseImageEncoder14setDestinationERNSt3__26vectorIhNS1_9allocatorIhEEEE","__ZN2cv10HdrDecoder8readDataERNS_3MatE","__ZNK2cv10HdrDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNK2cv10HdrEncoder17isFormatSupportedEi","__ZN2cv11JpegDecoder8readDataERNS_3MatE","__ZN2cv10PAMDecoder8readDataERNS_3MatE","__ZNK2cv10PAMDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNK2cv10PAMEncoder17isFormatSupportedEi","__ZN2cv10PFMDecoder8readDataERNS_3MatE","__ZNK2cv10PFMDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNK2cv10PFMEncoder17isFormatSupportedEi","__ZN2cv10PngDecoder8readDataERNS_3MatE","__ZNK2cv10PngEncoder17isFormatSupportedEi","__ZN2cv10PxMDecoder8readDataERNS_3MatE","__ZNK2cv10PxMDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNK2cv10PxMEncoder17isFormatSupportedEi","__ZN2cv16SunRasterDecoder8readDataERNS_3MatE","__ZN2cv11WebPDecoder8readDataERNS_3MatE","__ZNK2cv11WebPDecoder14checkSignatureERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNKSt3__220__shared_ptr_pointerIPhPFvPvENS_9allocatorIhEEE13__get_deleterERKSt9type_info","__ZN2cv11RBaseStream4openERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZN2cv11RBaseStream4openERKNS_3MatE","__ZN2cv11WBaseStream4openERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZN2cv11WBaseStream4openERNSt3__26vectorIhNS1_9allocatorIhEEEE","__ZNKSt3__220__shared_ptr_pointerIPN4ides13docextraction7profileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info","__ZNKSt3__220__shared_ptr_pointerIP12CvMemStorageN2cv14DefaultDeleterIS1_EENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info","__ZNKSt3__220__shared_ptr_pointerIPN2cv12FilterEngineENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info","__ZN2cv12cpu_baselineL14countNonZero8uEPKhi","__ZN2cv12cpu_baselineL15countNonZero16uEPKti","__ZN2cv12cpu_baselineL15countNonZero32sEPKii","__ZN2cv12cpu_baselineL15countNonZero32fEPKfi","__ZN2cv12cpu_baselineL15countNonZero64fEPKdi","__ZNKSt3__220__shared_ptr_pointerIPN2cv15OcvDftBasicImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info","__ZNKSt3__220__shared_ptr_pointerIPN2cv10OcvDftImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info","__ZNKSt3__220__shared_ptr_pointerIPN2cv11OCL_FftPlanENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info","_deflate_stored","_deflate_fast","_deflate_slow","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj","__ZNSt3__211__stdoutbufIwE8overflowEj","__ZNSt3__211__stdoutbufIcE8overflowEi","__ZNSt3__210__stdinbufIwE9pbackfailEj","__ZNSt3__210__stdinbufIcE9pbackfailEi","__ZNKSt3__25ctypeIcE10do_toupperEc","__ZNKSt3__25ctypeIcE10do_tolowerEc","__ZNKSt3__25ctypeIcE8do_widenEc","__ZNKSt3__25ctypeIwE10do_toupperEw","__ZNKSt3__25ctypeIwE10do_tolowerEw","__ZNKSt3__25ctypeIwE8do_widenEc","__ZN2cvlsERNSt3__213basic_ostreamIcNS0_11char_traitsIcEEEERKNS0_12basic_stringIcS3_NS0_9allocatorIcEEEE","__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc","__ZN7imgproc39assess_image_quality_with_variation_fftERKN2cv3MatEi","__ZN10emscripten8internal12MemberAccessIN8idesWASM13QualityResultEiE7getWireIS3_EEiRKMS3_iRKT_","__ZN10emscripten8internal12MemberAccessIN8idesWASM19LowResolutionResultEiE7getWireIS3_EEiRKMS3_iRKT_","__ZNKSt3__26locale9use_facetERNS0_2idE","__ZNK2cv11_InputArray4typeEi","__ZN2cv3MataSERKNS_7Scalar_IdEE","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_","__ZN2cv5utils29getConfigurationParameterBoolEPKcb","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc","__ZN2cv5utils30getConfigurationParameterSizeTEPKcm","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEm","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEt","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEs","__ZN2cv4readIbEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKS1_","__ZN2cv4readImEET_RKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKS1_","__ZNK2cv11_InputArray8sameSizeERKS0_","__ZN2cv12cpu_baseline20getMulTransposedFuncEiib","_jpeg_resync_to_restart","_fopen","__ZN2cvL10ReadNumberERNS_12RLByteStreamEi","__ZN2cv21oclCvtColorRGBA2mRGBAERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cv21oclCvtColormRGBA2RGBAERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cv3ocl7Image2D17isFormatSupportedEiib","__ZN2cv3ocl6Kernel3setEiRKNS0_7Image2DE","__ZN2cv3MataSERKS0_","__ZN2cv3MataSEOS0_","__ZN4ides13docextraction4quadaSERKS1_","__ZN4ides13docextraction4quad9relate_toERKS1_","__ZN4ides13docextraction4quadaSEOKS1_","__ZNK4ides13docextraction12line_segment21does_actual_intersectERKS1_","_encode_mcu_AC_first","_encode_mcu_DC_first","_encode_mcu_DC_refine","_encode_mcu_AC_refine","_decode_mcu_AC_first","_decode_mcu_DC_first","_decode_mcu_AC_refine","_decode_mcu_DC_refine","_compress_data","_compress_first_pass","_compress_output","_encode_mcu_huff","_encode_mcu_gather","_decompress_data","_decompress_onepass","_decompress_smooth_data","_decode_mcu","_FinishRow","_EmitRescaledRGB","_EmitRescaledYUV","_EmitSampledRGB","_EmitFancyRGB","_EmitYUV","_Predictor0_C","_Predictor1_C","_Predictor2_C","_Predictor3_C","_Predictor4_C","_Predictor5_C","_Predictor6_C","_Predictor7_C","_Predictor8_C","_Predictor9_C","_Predictor10_C","_Predictor11_C","_Predictor12_C","_Predictor13_C","_CompressAlphaJob","_DoSegmentsJob","_PaletteCompareColorsForQsort","_EncodeStreamHook","_CompareHuffmanTrees","_VP8LDistanceToPlaneCode","_png_malloc_warn","_cvTreeToNodeSeq","__ZN2cv13getKernelTypeERKNS_11_InputArrayENS_6Point_IiEE","__ZN2cv4UMataSERKNS_7Scalar_IdEE","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiii=["0","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl","__ZL52OPENCL_FN_clSetMemObjectDestructorCallback_switch_fnP7_cl_memPFvS0_PvES1_","__ZL36OPENCL_FN_clGetPlatformIDs_switch_fnjPP15_cl_platform_idPj","__ZL42OPENCL_FN_clEnqueueWaitForEvents_switch_fnP17_cl_command_queuejPKP9_cl_event","__ZL34OPENCL_FN_clCreateKernel_switch_fnP11_cl_programPKcPi","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE6setbufEPcl","__ZN2cv10BmpEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv16BaseImageEncoder10writemultiERKNSt3__26vectorINS_3MatENS1_9allocatorIS3_EEEERKNS2_IiNS4_IiEEEE","__ZN2cv10HdrEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv11JpegEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv10PAMEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv10PFMEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv10PngEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv10PxMEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv16SunRasterEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","__ZN2cv11WebPEncoder5writeERKNS_3MatERKNSt3__26vectorIiNS4_9allocatorIiEEEE","___stdio_write","___stdio_seek","___stdio_read","___stdout_write","_sn_write","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl","__ZNKSt3__214error_category10equivalentEiRKNS_15error_conditionE","__ZNKSt3__214error_category10equivalentERKNS_10error_codeEi","__ZNSt3__211__stdoutbufIwE6xsputnEPKwl","__ZNSt3__211__stdoutbufIcE6xsputnEPKcl","__ZNKSt3__27collateIcE7do_hashEPKcS3_","__ZNKSt3__27collateIwE7do_hashEPKwS3_","__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE","__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE","__ZNKSt3__25ctypeIcE10do_toupperEPcPKc","__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc","__ZNKSt3__25ctypeIcE9do_narrowEcc","__ZNKSt3__25ctypeIwE5do_isEtw","__ZNKSt3__25ctypeIwE10do_toupperEPwPKw","__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw","__ZNKSt3__25ctypeIwE9do_narrowEwc","__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZNK10__cxxabiv116__enum_type_info9can_catchEPKNS_16__shim_type_infoERPv","__ZN7imgproc28perform_low_resolution_checkERKNSt3__26vectorIN2cv6Point_IiEENS0_9allocatorIS4_EEEERKNS2_3MatENS2_5Size_IiEE","__ZN10emscripten8internal7InvokerIN8idesWASM9DeeResultEJimEE6invokeEPFS3_imEim","__ZN8idesWASM18checkLowResolutionEimNS_9DeeResultE","__ZN2cv3ocl6Kernel3setEiRKNS0_9KernelArgE","__ZN2cv3Mat5setToERKNS_11_InputArrayES3_","__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm","__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m","__ZN2cv3ocl13getStringInfoIPFiP15_cl_platform_idjmPvPmES3_EEiT_T0_jRNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE","__ZN2cv3ocl13getStringInfoIPFiP13_cl_device_idjmPvPmES3_EEiT_T0_jRNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE","__ZNSt3__27getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE35_findAndRemoveEntryFromReservedListERS3_m","__ZN2cv4UMat5setToERKNS_11_InputArrayES3_","__ZN2cv17borderInterpolateEiii","__ZN2cv3ocl28predictOptimalVectorWidthMaxERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_","__ZN2cvL15ocl_mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayEPKim","__ZN2cv12RLByteStream8getBytesEPvi","_jpeg_read_scanlines","_jpeg_write_scanlines","__ZN2cv19oclCvtColor5x52GrayERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv19oclCvtColorGray25x5ERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv19oclCvtColorBGR2GrayERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv19oclCvtColorGray2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv18oclCvtColorBGR2YUVERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv20oclCvtColorBGR2YCrCbERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv18oclCvtColorBGR2XYZERKNS_11_InputArrayERKNS_12_OutputArrayEi","_alloc_small","_alloc_large","_DummyWriter","_WebPMemoryWrite","_EmitRescaledAlphaRGB","_EmitRescaledAlphaYUV","_EmitAlphaYUV","_EmitAlphaRGB","_ExportAlphaRGBA4444","_ExportAlpha","_EmitAlphaRGBA4444","_png_zalloc","__ZN2cvL21ocl_sepFilter3x3_8UC1ERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_S2_di","__ZN2cvL18ocl_makePointsListERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_17_InputOutputArrayE","_zcalloc","_do_read","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_","__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_","__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiddii=["0","__ZN2cvL13ocl_fillAccumERKNS_11_InputArrayERKNS_12_OutputArrayEiddii"];var debug_table_iiiii=["0","__ZNK2cv15StdMatAllocator8allocateEPNS_8UMatDataENS_10AccessFlagENS_14UMatUsageFlagsE","__ZNK2cv3ocl15OpenCLAllocator8allocateEPNS_8UMatDataENS_10AccessFlagENS_14UMatUsageFlagsE","__ZL34OPENCL_FN_clSetKernelArg_switch_fnP10_cl_kerneljmPKv","__ZL38OPENCL_FN_clSetEventCallback_switch_fnP9_cl_eventiPFvS0_iPvES1_","__ZL47OPENCL_FN_clEnqueueMarkerWithWaitList_switch_fnP17_cl_command_queuejPKP9_cl_eventPS2_","__ZL48OPENCL_FN_clEnqueueBarrierWithWaitList_switch_fnP17_cl_command_queuejPKP9_cl_eventPS2_","__ZL44OPENCL_FN_clCreateKernelsInProgram_switch_fnP11_cl_programjPP10_cl_kernelPj","__ZN2cv12FilterEngine5startERKNS_5Size_IiEES4_RKNS_6Point_IiEE","__ZN2cv12FilterEngine5startERKNS_3MatERKNS_5Size_IiEERKNS_6Point_IiEE","__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc","__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt","__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_","__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_","__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw","__ZN10emscripten8internal7InvokerIN8idesWASM13QualityResultEJimiEE6invokeEPFS3_imiEimi","__ZN10emscripten8internal7InvokerIN8idesWASM19LowResolutionResultEJimNS2_9DeeResultEEE6invokeEPFS3_imS4_EimPS4_","__ZN2cv3ocl25predictOptimalVectorWidthERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_NS0_17OclVectorStrategyE","__ZN2cv3ocl6Kernel3setEiPKvm","__ZN2cv7ocl_sumERKNS_11_InputArrayERNS_7Scalar_IdEEiS2_S2_bRKS4_","__ZN2cv3ocl14convertTypeStrEiiiPc","__ZN2cv18oclCvtColorBGR2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEib","__ZN2cv18oclCvtColorBGR25x5ERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv18oclCvtColorYUV2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv28oclCvtColorBGR2ThreePlaneYUVERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv20oclCvtcolorYCrCb2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv18oclCvtColorXYZ2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv18oclCvtColorBGR2HSVERKNS_11_InputArrayERKNS_12_OutputArrayEib","__ZN2cv18oclCvtColorBGR2HLSERKNS_11_InputArrayERKNS_12_OutputArrayEib","__ZN2cv18oclCvtColorBGR2LabERKNS_11_InputArrayERKNS_12_OutputArrayEib","__ZN2cv18oclCvtColorBGR2LuvERKNS_11_InputArrayERKNS_12_OutputArrayEib","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELin1ELin1EEENS3_ILi3ELi4ELin1EEENS3_ILi0ELi5ELin1EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF_","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELi4ELin1EEENS3_ILi3ELin1ELin1EEENS3_ILi0ELi5ELin1EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF_","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELi4ELin1EEENS3_ILi3ELin1ELin1EEENS3_ILi0ELi5ELin1EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF__2475","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELin1ELin1EEENS3_ILi3ELi4ELin1EEENS3_ILi0ELi5ELin1EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF__2492","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi4ELin1ELin1EEES4_NS3_ILi0ELin1ELin1EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERNS_3ocl13ProgramSourceESE_","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELin1ELin1EEENS3_ILi3ELi4ELin1EEENS3_ILi0ELi2ELi5EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF_","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi3ELi4ELin1EEENS3_ILi3ELin1ELin1EEENS3_ILi0ELi2ELi5EEELNS2_10SizePolicyE2EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF_","__ZN2cv9OclHelperINS_4impl12_GLOBAL__N_13SetILi1ELin1ELin1EEENS3_ILi3ELi4ELin1EEENS3_ILi0ELin1ELin1EEELNS2_10SizePolicyE1EE12createKernelENSt3__212basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEERNS_3ocl13ProgramSourceESF_","_alloc_sarray","_alloc_barray","__ZN2cvL11ocl_math_opERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiid=["0","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe","0","0","0"];var debug_table_iiiiidi=["0","__ZN2cvL13approxPolyDP_IiEEiPKNS_6Point_IT_EEiPS3_bdRNS_10AutoBufferINS_5RangeELm136EEE","__ZN2cvL13approxPolyDP_IfEEiPKNS_6Point_IT_EEiPS3_bdRNS_10AutoBufferINS_5RangeELm136EEE","0"];var debug_table_iiiiii=["0","__ZL36OPENCL_FN_clGetSamplerInfo_switch_fnP11_cl_samplerjmPvPm","__ZL36OPENCL_FN_clGetProgramInfo_switch_fnP11_cl_programjmPvPm","__ZL37OPENCL_FN_clGetPlatformInfo_switch_fnP15_cl_platform_idjmPvPm","__ZL38OPENCL_FN_clGetMemObjectInfo_switch_fnP7_cl_memjmPvPm","__ZL35OPENCL_FN_clGetKernelInfo_switch_fnP10_cl_kerneljmPvPm","__ZL34OPENCL_FN_clGetImageInfo_switch_fnP7_cl_memjmPvPm","__ZL43OPENCL_FN_clGetEventProfilingInfo_switch_fnP9_cl_eventjmPvPm","__ZL34OPENCL_FN_clGetEventInfo_switch_fnP9_cl_eventjmPvPm","__ZL35OPENCL_FN_clGetDeviceInfo_switch_fnP13_cl_device_idjmPvPm","__ZL36OPENCL_FN_clGetContextInfo_switch_fnP11_cl_contextjmPvPm","__ZL41OPENCL_FN_clGetCommandQueueInfo_switch_fnP17_cl_command_queuejmPvPm","__ZL33OPENCL_FN_clEnqueueTask_switch_fnP17_cl_command_queueP10_cl_kerneljPKP9_cl_eventPS4_","__ZL38OPENCL_FN_clCreateSubDevices_switch_fnP13_cl_device_idPKljPS0_Pj","__ZL35OPENCL_FN_clCreateSampler_switch_fnP11_cl_contextjjjPi","__ZL45OPENCL_FN_clCreateProgramWithSource_switch_fnP11_cl_contextjPPKcPKmPi","__ZL53OPENCL_FN_clCreateProgramWithBuiltInKernels_switch_fnP11_cl_contextjPKP13_cl_device_idPKcPi","__ZN2cv12cpu_baselineL5sum8uEPKhS2_Piii","__ZN2cv12cpu_baselineL5sum8sEPKaPKhPiii","__ZN2cv12cpu_baselineL6sum16uEPKtPKhPiii","__ZN2cv12cpu_baselineL6sum16sEPKsPKhPiii","__ZN2cv12cpu_baselineL6sum32sEPKiPKhPdii","__ZN2cv12cpu_baselineL6sum32fEPKfPKhPdii","__ZN2cv12cpu_baselineL6sum64fEPKdPKhPdii","__ZL11rgb_convertPvS_iii","__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_","__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv","__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m","__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m","__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc","__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc","__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m","__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_","__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m","__ZN2cv3ocl7Program4Impl16createFromBinaryERKNS0_7ContextEPKhmRNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE","__ZN2cv3Mat9adjustROIEiiii","__ZN2cv4UMat9adjustROIEiiii","__ZN2cv3ocl23checkOptimalVectorWidthEPKiRKNS_11_InputArrayES5_S5_S5_S5_S5_S5_S5_S5_NS0_17OclVectorStrategyE","__ZN2cv18oclCvtColor5x52BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiii","__ZN2cv26oclCvtColorTwoPlaneYUV2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiii","__ZN2cv28oclCvtColorThreePlaneYUV2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiii","__ZN2cv18oclCvtColorHSV2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiib","__ZN2cv18oclCvtColorHLS2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiib","__ZN2cv18oclCvtColorLab2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiib","__ZN2cv18oclCvtColorLuv2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiib","_access_virt_sarray","_access_virt_barray","__ZL24cvStartFindContours_ImplPvP12CvMemStorageiii7CvPointi","__ZN2cv15ocl_sepFilter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_S2_NS_6Point_IiEEdi","__ZN2cvL11ocl_morphOpERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiiRKNS_7Scalar_IdEEiS2_","__ZN2cvL12ocl_dft_rowsERKNS_11_InputArrayERKNS_12_OutputArrayEiii","__ZN2cvL12ocl_dft_colsERKNS_11_InputArrayERKNS_12_OutputArrayEiii","0"];var debug_table_iiiiiid=["0","__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce","__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe","0"];var debug_table_iiiiiii=["0","__ZL34OPENCL_FN_clBuildProgram_switch_fnP11_cl_programjPKP13_cl_device_idPKcPFvS0_PvES7_","__ZL41OPENCL_FN_clGetProgramBuildInfo_switch_fnP11_cl_programP13_cl_device_idjmPvPm","__ZL44OPENCL_FN_clGetKernelWorkGroupInfo_switch_fnP10_cl_kernelP13_cl_device_idjmPvPm","__ZL38OPENCL_FN_clGetKernelArgInfo_switch_fnP10_cl_kerneljjmPvPm","__ZL43OPENCL_FN_clEnqueueUnmapMemObject_switch_fnP17_cl_command_queueP7_cl_memPvjPKP9_cl_eventPS5_","__ZL35OPENCL_FN_clCreateContext_switch_fnPKljPKP13_cl_device_idPFvPKcPKvmPvES9_Pi","__ZN2cvL14normDiffInf_8uEPKhS1_S1_Piii","__ZN2cvL14normDiffInf_8sEPKaS1_PKhPiii","__ZN2cvL15normDiffInf_16uEPKtS1_PKhPiii","__ZN2cvL15normDiffInf_16sEPKsS1_PKhPiii","__ZN2cvL15normDiffInf_32sEPKiS1_PKhPiii","__ZN2cvL15normDiffInf_32fEPKfS1_PKhPfii","__ZN2cvL15normDiffInf_64fEPKdS1_PKhPdii","__ZN2cvL13normDiffL1_8uEPKhS1_S1_Piii","__ZN2cvL13normDiffL1_8sEPKaS1_PKhPiii","__ZN2cvL14normDiffL1_16uEPKtS1_PKhPiii","__ZN2cvL14normDiffL1_16sEPKsS1_PKhPiii","__ZN2cvL14normDiffL1_32sEPKiS1_PKhPdii","__ZN2cvL14normDiffL1_32fEPKfS1_PKhPdii","__ZN2cvL14normDiffL1_64fEPKdS1_PKhPdii","__ZN2cvL13normDiffL2_8uEPKhS1_S1_Piii","__ZN2cvL13normDiffL2_8sEPKaS1_PKhPiii","__ZN2cvL14normDiffL2_16uEPKtS1_PKhPdii","__ZN2cvL14normDiffL2_16sEPKsS1_PKhPdii","__ZN2cvL14normDiffL2_32sEPKiS1_PKhPdii","__ZN2cvL14normDiffL2_32fEPKfS1_PKhPdii","__ZN2cvL14normDiffL2_64fEPKdS1_PKhPdii","__ZN2cv12FilterEngine7proceedEPKhiiPhi","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe","__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe","__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm","__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE","__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE","__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_","__ZN2cv3ocl6Kernel3runEiPmS2_bRKNS0_5QueueE","__ZN2cvL13ocl_binary_opERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_bib","__ZN2cv26oclCvtColorOnePlaneYUV2BGRERKNS_11_InputArrayERKNS_12_OutputArrayEiiii","_encode_mcu_AC_refine_prepare","_request_virt_sarray","_request_virt_barray","_GetCoeffsFast","__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiiiii=["0","__ZL45OPENCL_FN_clCreateProgramWithBinary_switch_fnP11_cl_contextjPKP13_cl_device_idPKmPPKhPiSA_","__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc","__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc","__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe","__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE","__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe","__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE","__ZN2cvL13ocl_arithm_opERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_iPvib","__ZN2cv3hal5QR32fEPfmiiiS1_mS1_","__ZN2cv3hal5QR64fEPdmiiiS1_mS1_","_cvMakeSeqHeaderForArray","__ZNK2cv11OCL_FftPlan16enqueueTransformERKNS_11_InputArrayERKNS_12_OutputArrayEiiib","__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb","__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb","0"];var debug_table_iiiiiiiii=["0","__ZNK2cv15StdMatAllocator8allocateEiPKiiPvPmNS_10AccessFlagENS_14UMatUsageFlagsE","__ZNK2cv3ocl15OpenCLAllocator8allocateEiPKiiPvPmNS_10AccessFlagENS_14UMatUsageFlagsE","__ZL38OPENCL_FN_clEnqueueFillImage_switch_fnP17_cl_command_queueP7_cl_memPKvPKmS6_jPKP9_cl_eventPS8_","__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc","__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc","__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_","__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_","__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_","__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_","__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_","__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_","__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_","__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_","0","0"];var debug_table_iiiiiiiiii=["0","__ZL33OPENCL_FN_clLinkProgram_switch_fnP11_cl_contextjPKP13_cl_device_idPKcjPKP11_cl_programPFvS8_PvESB_Pi","__ZL40OPENCL_FN_clEnqueueWriteBuffer_switch_fnP17_cl_command_queueP7_cl_memjmmPKvjPKP9_cl_eventPS6_","__ZL39OPENCL_FN_clEnqueueReadBuffer_switch_fnP17_cl_command_queueP7_cl_memjmmPvjPKP9_cl_eventPS5_","__ZL42OPENCL_FN_clEnqueueNDRangeKernel_switch_fnP17_cl_command_queueP10_cl_kerneljPKmS4_S4_jPKP9_cl_eventPS6_","__ZL39OPENCL_FN_clEnqueueFillBuffer_switch_fnP17_cl_command_queueP7_cl_memPKvmmmjPKP9_cl_eventPS6_","__ZL46OPENCL_FN_clEnqueueCopyImageToBuffer_switch_fnP17_cl_command_queueP7_cl_memS2_PKmS4_mjPKP9_cl_eventPS6_","__ZL38OPENCL_FN_clEnqueueCopyImage_switch_fnP17_cl_command_queueP7_cl_memS2_PKmS4_S4_jPKP9_cl_eventPS6_","__ZL46OPENCL_FN_clEnqueueCopyBufferToImage_switch_fnP17_cl_command_queueP7_cl_memS2_mPKmS4_jPKP9_cl_eventPS6_","__ZL39OPENCL_FN_clEnqueueCopyBuffer_switch_fnP17_cl_command_queueP7_cl_memS2_mmmjPKP9_cl_eventPS4_","__ZL36OPENCL_FN_clCompileProgram_switch_fnP11_cl_programjPKP13_cl_device_idPKcjPKS0_PS6_PFvS0_PvESA_","0","0","0","0","0"];var debug_table_iiiiiiiiiii=["0","__ZL41OPENCL_FN_clEnqueueNativeKernel_switch_fnP17_cl_command_queuePFvPvES1_mjPKP7_cl_memPPKvjPKP9_cl_eventPSC_"];var debug_table_iiiiiiiiiiii=["0","__ZL39OPENCL_FN_clEnqueueWriteImage_switch_fnP17_cl_command_queueP7_cl_memjPKmS4_mmPKvjPKP9_cl_eventPS8_","__ZL38OPENCL_FN_clEnqueueReadImage_switch_fnP17_cl_command_queueP7_cl_memjPKmS4_mmPvjPKP9_cl_eventPS7_","__ZN2cv3ocl6Kernel4argsINS0_9KernelArgES3_S3_S3_iiiiffEERS1_RKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_","__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_","__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_","0","0"];var debug_table_iiiiiiiiiiiiii=["0","__ZL43OPENCL_FN_clEnqueueCopyBufferRect_switch_fnP17_cl_command_queueP7_cl_memS2_PKmS4_S4_mmmmjPKP9_cl_eventPS6_"];var debug_table_iiiiiiiiiiiiiii=["0","__ZL44OPENCL_FN_clEnqueueWriteBufferRect_switch_fnP17_cl_command_queueP7_cl_memjPKmS4_S4_mmmmPKvjPKP9_cl_eventPS8_","__ZL43OPENCL_FN_clEnqueueReadBufferRect_switch_fnP17_cl_command_queueP7_cl_memjPKmS4_S4_mmmmPvjPKP9_cl_eventPS7_","__ZNK2cv3ocl15OpenCLAllocator15checkContinuousEiPKmS3_S3_S3_S3_RmPmS4_S5_S5_S4_S5_S5_","__ZN2cv3ocl6Kernel4argsINS0_9KernelArgEiiiiiiiS3_iiiiEERS1_RKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_","0","0","0"];var debug_table_iiiiiiiiiiiiiiii=["0","__ZN2cv3ocl6Kernel4argsINS0_9KernelArgEiS3_iS3_iiiiffiiiEERS1_RKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_"];var debug_table_iiiiiiiiiiiiiiiiii=["0","__ZN2cv3ocl6Kernel4argsINS0_9KernelArgEiS3_iS3_iiiiffiiiiiEERS1_RKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_RKT13_RKT14_"];var debug_table_iiiiij=["0","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx","__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx","__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy","0","0","0"];var debug_table_iiiijiii=["0","__ZL46OPENCL_FN_clEnqueueMigrateMemObjects_switch_fnP17_cl_command_queuejPKP7_cl_memyjPKP9_cl_eventPS6_"];var debug_table_iiiijiiiiii=["0","__ZL38OPENCL_FN_clEnqueueMapBuffer_switch_fnP17_cl_command_queueP7_cl_memjymmjPKP9_cl_eventPS4_Pi"];var debug_table_iiiijiiiiiiii=["0","__ZL37OPENCL_FN_clEnqueueMapImage_switch_fnP17_cl_command_queueP7_cl_memjyPKmS4_PmS5_jPKP9_cl_eventPS7_Pi"];var debug_table_iiiji=["0","__ZL40OPENCL_FN_clCreateCommandQueue_switch_fnP11_cl_contextP13_cl_device_idyPi"];var debug_table_iiijii=["0","___atomic_compare_exchange_8"];var debug_table_iijiii=["0","__ZL34OPENCL_FN_clGetDeviceIDs_switch_fnP15_cl_platform_idyjPP13_cl_device_idPj","__ZL37OPENCL_FN_clCreateSubBuffer_switch_fnP7_cl_memyjPKvPi","__ZL43OPENCL_FN_clCreateContextFromType_switch_fnPKlyPFvPKcPKvmPvES5_Pi","__ZL34OPENCL_FN_clCreateBuffer_switch_fnP11_cl_contextymPvPi","0","0","0"];var debug_table_iijiiii=["0","__ZL46OPENCL_FN_clGetSupportedImageFormats_switch_fnP11_cl_contextyjjP16_cl_image_formatPj","__ZL33OPENCL_FN_clCreateImage_switch_fnP11_cl_contextyPK16_cl_image_formatPK14_cl_image_descPvPi","0"];var debug_table_iijiiiiii=["0","__ZL35OPENCL_FN_clCreateImage2D_switch_fnP11_cl_contextyPK16_cl_image_formatmmmPvPi"];var debug_table_iijiiiiiiii=["0","__ZL35OPENCL_FN_clCreateImage3D_switch_fnP11_cl_contextyPK16_cl_image_formatmmmmmPvPi"];var debug_table_ji=["0","__ZNK2cv5utils12_GLOBAL__N_119AllocatorStatistics15getCurrentUsageEv_185","__ZNK2cv5utils12_GLOBAL__N_119AllocatorStatistics13getTotalUsageEv_186","__ZNK2cv5utils12_GLOBAL__N_119AllocatorStatistics22getNumberOfAllocationsEv_187","__ZNK2cv5utils12_GLOBAL__N_119AllocatorStatistics12getPeakUsageEv_188","0","0","0"];var debug_table_jiji=["0","___atomic_fetch_sub_8","___atomic_fetch_add_8","0"];var debug_table_v=["0","___cxa_pure_virtual","___cxa_end_catch","___cxa_rethrow","__ZN2cv4cuda6Stream4NullEv","__ZN2cv4cuda6GpuMat5setToENS_7Scalar_IdEERKNS_11_InputArrayERNS0_6StreamE","__ZNSt3__215recursive_mutexC2Ev","__ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv","__ZNSt3__215recursive_mutex4lockEv","__ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv","__ZN2cvL11initLabTabsEv","__ZSt17__throw_bad_allocv","__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em","__ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_","__ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_","__ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_","__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_","__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_","__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_","__ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_","__ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_","__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm","___cxa_get_globals_fast","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_vdii=["0","__ZN2cv6divideEdRKNS_11_InputArrayERKNS_12_OutputArrayEi"];var debug_table_vi=["0","__ZN7cvflann7anyimpl15base_any_policyD2Ev","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEED0Ev","__ZN7cvflann7anyimpl16small_any_policyIPKcED0Ev","__ZN7cvflann7anyimpl16small_any_policyIiED0Ev","__ZN7cvflann7anyimpl16small_any_policyIfED0Ev","__ZN7cvflann7anyimpl16small_any_policyIbED0Ev","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEED0Ev","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEED0Ev","__ZN7cvflann7anyimpl16small_any_policyIjED0Ev","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev","__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZThn8_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZTv0_n12_NSt3__218basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev","__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev","__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev","__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZN2cv25DummyBufferPoolController22freeAllReservedBuffersEv","__ZN2cv20BufferPoolControllerD2Ev","__ZN2cv25DummyBufferPoolControllerD0Ev","__ZN2cv12MatAllocatorD2Ev","__ZN2cv15StdMatAllocatorD0Ev","__ZN2cv5utils28AllocatorStatisticsInterfaceD2Ev","__ZN2cv5utils12_GLOBAL__N_119AllocatorStatisticsD0Ev_184","__ZN2cv5utils12_GLOBAL__N_119AllocatorStatistics14resetPeakUsageEv_189","__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZN2cv3ocl15OpenCLAllocatorD2Ev","__ZN2cv3ocl15OpenCLAllocatorD0Ev","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE22freeAllReservedBuffersEv","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memED2Ev","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memED0Ev","__ZN2cv3ocl20OpenCLBufferPoolImplD0Ev","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev","__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev","__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev","__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev","__ZN2cv9ExceptionD2Ev","__ZN2cv9ExceptionD0Ev","__ZN2cv16TLSDataContainerD2Ev","__ZN2cv16TLSDataContainerD0Ev","__ZN2cv7TLSDataINS_11CoreTLSDataEED2Ev","__ZN2cv7TLSDataINS_11CoreTLSDataEED0Ev","__ZN2cv7TLSDataINS_12_GLOBAL__N_18ThreadIDEED2Ev","__ZN2cv7TLSDataINS_12_GLOBAL__N_18ThreadIDEED0Ev","__ZN2cv7TLSDataINS_18UMatDataAutoLockerEED2Ev","__ZN2cv7TLSDataINS_18UMatDataAutoLockerEED0Ev","__ZN2cv5MatOpD2Ev","__ZN2cv12MatOp_InvertD0Ev","__ZN2cv11MatOp_SolveD0Ev","__ZN2cv14MatOp_IdentityD0Ev","__ZN2cv10MatOp_GEMMD0Ev","__ZN2cv11MatOp_AddExD0Ev","__ZN2cv9MatOp_BinD0Ev","__ZN2cv7MatOp_TD0Ev","__ZN2cv9MatOp_CmpD0Ev","__ZN2cv17MatOp_InitializerD0Ev","__ZN2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEED2Ev","__ZN2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEED0Ev","__ZNSt3__214__shared_countD2Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details16SyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details16SyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details16SyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZN2cv5utils5trace7details16SyncTraceStorageD2Ev","__ZN2cv5utils5trace7details16SyncTraceStorageD0Ev","__ZNSt3__214basic_ofstreamIcNS_11char_traitsIcEEED1Ev","__ZNSt3__214basic_ofstreamIcNS_11char_traitsIcEEED0Ev","__ZTv0_n12_NSt3__214basic_ofstreamIcNS_11char_traitsIcEEED1Ev","__ZTv0_n12_NSt3__214basic_ofstreamIcNS_11char_traitsIcEEED0Ev","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED2Ev","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details17AsyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details17AsyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv5utils5trace7details17AsyncTraceStorageENS_14default_deleteIS5_EENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZN2cv5utils5trace7details17AsyncTraceStorageD2Ev","__ZN2cv5utils5trace7details17AsyncTraceStorageD0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10BmpEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10HdrEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11JpegEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv11WebPEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv16SunRasterEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PxMEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PAMEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PFMEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngDecoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngDecoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngDecoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngDecoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngEncoderENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngEncoderENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngEncoderENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv10PngEncoderENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev","__ZNSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev","__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED1Ev","__ZTv0_n12_NSt3__214basic_ifstreamIcNS_11char_traitsIcEEED0Ev","__ZN2cv10BmpDecoderD2Ev","__ZN2cv10BmpDecoderD0Ev","__ZN2cv10BmpEncoderD2Ev","__ZN2cv10BmpEncoderD0Ev","__ZNK2cv16BaseImageEncoder11throwOnErorEv","__ZN2cv10HdrDecoderD2Ev","__ZN2cv10HdrDecoderD0Ev","__ZN2cv10HdrEncoderD2Ev","__ZN2cv10HdrEncoderD0Ev","__ZN2cv11JpegDecoderD2Ev","__ZN2cv11JpegDecoderD0Ev","__ZN2cv11JpegEncoderD2Ev","__ZN2cv11JpegEncoderD0Ev","__ZN2cv10PAMDecoderD2Ev","__ZN2cv10PAMDecoderD0Ev","__ZN2cv24RBS_BAD_HEADER_ExceptionD0Ev","__ZN2cv10PAMEncoderD2Ev","__ZN2cv10PAMEncoderD0Ev","__ZN2cv10PFMDecoderD2Ev","__ZN2cv10PFMDecoderD0Ev","__ZN2cv10PFMEncoderD2Ev","__ZN2cv10PFMEncoderD0Ev","__ZN2cv10PngDecoderD2Ev","__ZN2cv10PngDecoderD0Ev","__ZN2cv10PngEncoderD2Ev","__ZN2cv10PngEncoderD0Ev","__ZN2cv10PxMDecoderD2Ev","__ZN2cv10PxMDecoderD0Ev","__ZN2cv10PxMEncoderD2Ev","__ZN2cv10PxMEncoderD0Ev","__ZN2cv16SunRasterDecoderD2Ev","__ZN2cv16SunRasterDecoderD0Ev","__ZN2cv16SunRasterEncoderD2Ev","__ZN2cv16SunRasterEncoderD0Ev","__ZN2cv11WebPDecoderD2Ev","__ZN2cv11WebPDecoderD0Ev","__ZN2cv11WebPEncoderD2Ev","__ZN2cv11WebPEncoderD0Ev","__ZNSt3__220__shared_ptr_pointerIPhPFvPvENS_9allocatorIhEEED0Ev","__ZNSt3__220__shared_ptr_pointerIPhPFvPvENS_9allocatorIhEEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPhPFvPvENS_9allocatorIhEEE21__on_zero_shared_weakEv","__ZN2cv11RBaseStreamD2Ev","__ZN2cv11RBaseStreamD0Ev","__ZN2cv11RBaseStream5closeEv","__ZN2cv11RBaseStream9readBlockEv","__ZN2cv11RBaseStream7releaseEv","__ZN2cv11RBaseStream8allocateEv","__ZN2cv23RBS_THROW_EOS_ExceptionD0Ev","__ZN2cv11WBaseStreamD2Ev","__ZN2cv11WBaseStreamD0Ev","__ZN2cv11WBaseStream5closeEv","__ZN2cv11WBaseStream10writeBlockEv","__ZN2cv11WBaseStream7releaseEv","__ZN2cv11WBaseStream8allocateEv","__ZN2cv12RLByteStreamD0Ev","__ZN2cv12RMByteStreamD0Ev","__ZN2cv12WLByteStreamD0Ev","__ZN2cv12WMByteStreamD0Ev","__ZN2cv16BaseImageDecoderD2Ev","__ZN2cv16BaseImageDecoderD0Ev","__ZN2cv16BaseImageEncoderD2Ev","__ZN2cv16BaseImageEncoderD0Ev","__ZN2cv16ParallelLoopBodyD2Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HSV_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HSV_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HLS_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HLS_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HSV2RGB_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HSV2RGB_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HLS2RGB_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HLS2RGB_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Lab_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Lab_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Luv_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Luv_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Lab2RGB_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Lab2RGB_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Luv2RGB_bEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Luv2RGB_fEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGB2RGB5x5EED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGB5x52RGBEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB5x52GrayEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111Gray2RGB5x5EED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGBA2mRGBAIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110mRGBA2RGBAIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_iIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_iItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_fIfEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_iIhEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_iItEEED0Ev","__ZN2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_fIfEEED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi1ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi1ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi1ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi1ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi2ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi2ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_120RGB8toYUV420pInvokerD0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi1ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi1ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi1ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi1ELi0ELi3EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi1ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi1ELi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi0ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi1ELi4EED0Ev","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi1ELi0ELi4EED0Ev","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED2Ev","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED0Ev","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED2Ev","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED0Ev","__ZN2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED2Ev","__ZN2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED0Ev","__ZN2cv17Bayer2RGB_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED2Ev","__ZN2cv17Bayer2RGB_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED0Ev","__ZN2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED2Ev","__ZN2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEED0Ev","__ZN2cv18Bayer2Gray_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED2Ev","__ZN2cv18Bayer2Gray_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEED0Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEED2Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEED0Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_12VResizeNoVecEEEED2Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_12VResizeNoVecEEEED0Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_12VResizeNoVecEEEED2Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_12VResizeNoVecEEEED0Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_12VResizeNoVecEEEED2Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_12VResizeNoVecEEEED0Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEED2Ev","__ZN2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEED0Ev","__ZN2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEED2Ev","__ZN2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEED0Ev","__ZN2cv22resizeAreaFast_InvokerIffNS_19ResizeAreaFastNoVecIffEEED2Ev","__ZN2cv22resizeAreaFast_InvokerIffNS_19ResizeAreaFastNoVecIffEEED0Ev","__ZN2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_19ResizeAreaFastNoVecIssEEEEED2Ev","__ZN2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_19ResizeAreaFastNoVecIssEEEEED0Ev","__ZN2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_19ResizeAreaFastNoVecIttEEEEED2Ev","__ZN2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_19ResizeAreaFastNoVecIttEEEEED0Ev","__ZN2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_19ResizeAreaFastNoVecIhhEEEEED2Ev","__ZN2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_19ResizeAreaFastNoVecIhhEEEEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN4ides13docextraction7profileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN4ides13docextraction7profileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN4ides13docextraction7profileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv","__ZNSt13runtime_errorD2Ev","__ZN4ides15not_found_errorD0Ev","__ZN4ides18line_segment_errorD0Ev","__ZN2cv13parallelCannyD2Ev","__ZN2cv13parallelCannyD0Ev","__ZN2cv9finalPassD0Ev","__ZNSt3__220__shared_ptr_pointerIP12CvMemStorageN2cv14DefaultDeleterIS1_EENS_9allocatorIS1_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIP12CvMemStorageN2cv14DefaultDeleterIS1_EENS_9allocatorIS1_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIP12CvMemStorageN2cv14DefaultDeleterIS1_EENS_9allocatorIS1_EEE21__on_zero_shared_weakEv","__ZN2cv13BaseRowFilterD2Ev","__ZN2cv13BaseRowFilterD0Ev","__ZN2cv16BaseColumnFilterD2Ev","__ZN2cv16BaseColumnFilterD0Ev","__ZN2cv16BaseColumnFilter5resetEv","__ZN2cv10BaseFilterD2Ev","__ZN2cv10BaseFilterD0Ev","__ZN2cv10BaseFilter5resetEv","__ZN2cv12FilterEngineD2Ev","__ZN2cv12FilterEngineD0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIhiNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIhiNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIhiNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIhiNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIffNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIffNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIffNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline18SymmRowSmallFilterIffNS2_17SymmRowSmallNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhiNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhiNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhiNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhiNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhfNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhfNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhfNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhfNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhdNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhdNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhdNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIhdNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItfNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItfNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItfNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItfNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItdNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItdNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItdNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterItdNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsfNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsfNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsfNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsfNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsdNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsdNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsdNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIsdNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIffNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIffNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIffNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIffNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIfdNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIfdNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIfdNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIfdNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIddNS2_8RowNoVecEEENS_9allocatorIS5_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIddNS2_8RowNoVecEEENS_9allocatorIS5_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIddNS2_8RowNoVecEEENS_9allocatorIS5_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline9RowFilterIddNS2_8RowNoVecEEENS_9allocatorIS5_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline9RowFilterIddNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIddNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIfdNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIfdNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIffNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIffNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIsdNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIsdNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIsfNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIsfNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterItdNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterItdNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterItfNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterItfNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIhdNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIhdNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIhfNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIhfNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIhiNS0_8RowNoVecEED2Ev","__ZN2cv12cpu_baseline9RowFilterIhiNS0_8RowNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIffNS0_17SymmRowSmallNoVecEED2Ev","__ZN2cv12cpu_baseline18SymmRowSmallFilterIffNS0_17SymmRowSmallNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIffNS0_17SymmRowSmallNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIhiNS0_17SymmRowSmallNoVecEED2Ev","__ZN2cv12cpu_baseline18SymmRowSmallFilterIhiNS0_17SymmRowSmallNoVecEED0Ev","__ZN2cv12cpu_baseline9RowFilterIhiNS0_17SymmRowSmallNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12ColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIisEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIisEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIisEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIisEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIffEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIffEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIffEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline21SymmColumnSmallFilterINS2_4CastIffEENS2_20SymmColumnSmallNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_13FixedPtCastExIihEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdhEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIftEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdtEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIisEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIisEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIisEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIisEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIfsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIdsEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIffEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline16SymmColumnFilterINS2_4CastIddEENS2_11ColumnNoVecEEENS_9allocatorIS7_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEED2Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEED2Ev","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEED2Ev","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEED0Ev","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv12FilterEngineENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv12FilterEngineENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv12FilterEngineENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12FilterEngineENS_9allocatorIS2_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12FilterEngineENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12FilterEngineENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12FilterEngineENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MinOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIhEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpItEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIsEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIfEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS3_5MaxOpIdEENS3_13MorphRowNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIhEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpItEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIsEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIfEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIdEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIhEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpItEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIsEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIfEENS1_13MorphRowNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIdEENS1_13MorphRowNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MinOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIhEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpItEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIsEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIfEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS3_5MaxOpIdEENS3_16MorphColumnNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIhEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpItEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIsEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIfEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIdEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIhEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpItEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIsEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIfEENS1_16MorphColumnNoVecEED0Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIdEENS1_16MorphColumnNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIhEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIhEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpItEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpItEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIsEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIsEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIfEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIfEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MinOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIdEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIdEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIhEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIhEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIhEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpItEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpItEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpItEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIsEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIsEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIsEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIfEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIfEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIfEENS1_10MorphNoVecEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED2Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEED0Ev","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_emplaceIN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS3_5MaxOpIdEENS3_10MorphNoVecEEENS_9allocatorIS8_EEE21__on_zero_shared_weakEv","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIdEENS1_10MorphNoVecEED2Ev","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIdEENS1_10MorphNoVecEED0Ev","__ZN2cv15ThresholdRunnerD2Ev","__ZN2cv15ThresholdRunnerD0Ev","__ZN2cv16ReplacementDFT1DD2Ev","__ZN2cv16ReplacementDFT1DD0Ev","__ZN2cv15OcvDftBasicImplD2Ev","__ZN2cv15OcvDftBasicImplD0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv15OcvDftBasicImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv15OcvDftBasicImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv15OcvDftBasicImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZN2cv16ReplacementDFT2DD2Ev","__ZN2cv16ReplacementDFT2DD0Ev","__ZN2cv10OcvDftImplD2Ev","__ZN2cv10OcvDftImplD0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv10OcvDftImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv10OcvDftImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv10OcvDftImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__220__shared_ptr_pointerIPN2cv11OCL_FftPlanENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev","__ZNSt3__220__shared_ptr_pointerIPN2cv11OCL_FftPlanENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv","__ZNSt3__220__shared_ptr_pointerIPN2cv11OCL_FftPlanENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv","__ZNSt3__28ios_baseD2Ev","__ZNSt3__28ios_baseD0Ev","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev","__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev","__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev","__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev","__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev","__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev","__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev","__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev","__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev","__ZNSt3__214error_categoryD2Ev","__ZNSt3__219__iostream_categoryD0Ev","__ZNSt3__28ios_base7failureD2Ev","__ZNSt3__28ios_base7failureD0Ev","__ZNSt3__211__stdoutbufIwED0Ev","__ZNSt3__211__stdoutbufIcED0Ev","__ZNSt3__210__stdinbufIwED0Ev","__ZNSt3__210__stdinbufIcED0Ev","__ZNSt3__27collateIcED2Ev","__ZNSt3__27collateIcED0Ev","__ZNSt3__26locale5facet16__on_zero_sharedEv","__ZNSt3__27collateIwED2Ev","__ZNSt3__27collateIwED0Ev","__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__210moneypunctIcLb0EED2Ev","__ZNSt3__210moneypunctIcLb0EED0Ev","__ZNSt3__210moneypunctIcLb1EED2Ev","__ZNSt3__210moneypunctIcLb1EED0Ev","__ZNSt3__210moneypunctIwLb0EED2Ev","__ZNSt3__210moneypunctIwLb0EED0Ev","__ZNSt3__210moneypunctIwLb1EED2Ev","__ZNSt3__210moneypunctIwLb1EED0Ev","__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev","__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev","__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev","__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev","__ZNSt3__28messagesIcED2Ev","__ZNSt3__28messagesIcED0Ev","__ZNSt3__28messagesIwED2Ev","__ZNSt3__28messagesIwED0Ev","__ZNSt3__26locale5facetD2Ev","__ZNSt3__216__narrow_to_utf8ILm32EED0Ev","__ZNSt3__217__widen_from_utf8ILm32EED0Ev","__ZNSt3__27codecvtIwc11__mbstate_tED2Ev","__ZNSt3__27codecvtIwc11__mbstate_tED0Ev","__ZNSt3__26locale5__impD2Ev","__ZNSt3__26locale5__impD0Ev","__ZNSt3__25ctypeIcED2Ev","__ZNSt3__25ctypeIcED0Ev","__ZNSt3__28numpunctIcED2Ev","__ZNSt3__28numpunctIcED0Ev","__ZNSt3__28numpunctIwED2Ev","__ZNSt3__28numpunctIwED0Ev","__ZNSt3__26locale5facetD0Ev","__ZNSt3__25ctypeIwED0Ev","__ZNSt3__27codecvtIcc11__mbstate_tED0Ev","__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev","__ZNSt3__27codecvtIDic11__mbstate_tED0Ev","__ZNSt3__224__generic_error_categoryD0Ev","__ZNSt3__223__system_error_categoryD0Ev","__ZNSt3__212system_errorD2Ev","__ZNSt3__212system_errorD0Ev","__ZN10__cxxabiv116__shim_type_infoD2Ev","__ZN10__cxxabiv117__class_type_infoD0Ev","__ZNK10__cxxabiv116__shim_type_info5noop1Ev","__ZNK10__cxxabiv116__shim_type_info5noop2Ev","__ZN10__cxxabiv120__si_class_type_infoD0Ev","__ZNSt9bad_allocD2Ev","__ZNSt9bad_allocD0Ev","__ZNSt11logic_errorD2Ev","__ZNSt11logic_errorD0Ev","__ZNSt13runtime_errorD0Ev","__ZNSt16invalid_argumentD0Ev","__ZNSt12length_errorD0Ev","__ZNSt12out_of_rangeD0Ev","__ZNSt8bad_castD2Ev","__ZNSt8bad_castD0Ev","__ZN10__cxxabiv123__fundamental_type_infoD0Ev","__ZN10__cxxabiv119__pointer_type_infoD0Ev","__ZN10__cxxabiv116__enum_type_infoD0Ev","__ZN10__cxxabiv121__vmi_class_type_infoD0Ev","_emscripten_console_error","__ZN2cv3Mat7releaseEv","__ZN4ides13docextraction9extractorC2Ev","__ZN10emscripten8internal14raw_destructorIN8idesWASM9DeeResultEEEvPT_","__ZN10emscripten8internal14raw_destructorIN8idesWASM13QualityResultEEEvPT_","__ZN10emscripten8internal14raw_destructorIN8idesWASM19LowResolutionResultEEEvPT_","__ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv","__ZN2cv3Mat10deallocateEv","__ZNK2cv12_OutputArray7releaseEv","__ZN2cv4UMat10deallocateEv","__ZN2cv3ocl7Context4ImplC2Ev","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm","__ZN2cv3ocl6Kernel4Impl5finitEP9_cl_event","__ZN2cv3ocl15OpenCLAllocatorC2Ev","__ZN2cv3ocl20OpenCLBufferPoolImpl19_releaseBufferEntryERKNS0_13CLBufferEntryE","__ZNK2cv3ocl15OpenCLAllocator17flushCleanupQueueEv","__ZN2cv5errorERKNS_9ExceptionE","__ZN2cv9Exception13formatMessageEv","__ZN2cv10ParseErrorD2Ev","__ZN2cv10TlsStorageC2Ev","__ZN2cv16TLSDataContainer7releaseEv","__ZN2cv16TLSDataContainerC2Ev","__ZN2cv12completeSymmERKNS_17_InputOutputArrayEb","__ZNSt3__26vectorIN2cv4UMatENS_9allocatorIS2_EEEC2Em","__ZN2cv5utils5trace7details6Region7destroyEv","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEEC2Ev","__ZN2cv10BmpDecoderC2Ev","__ZNSt3__26vectorIN2cv3PtrINS1_16BaseImageDecoderEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_","__ZN2cv10BmpEncoderC2Ev","__ZNSt3__26vectorIN2cv3PtrINS1_16BaseImageEncoderEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_","__ZN2cv10HdrDecoderC2Ev","__ZN2cv10HdrEncoderC2Ev","__ZN2cv11JpegDecoderC2Ev","__ZN2cv11JpegEncoderC2Ev","__ZN2cv11WebPDecoderC2Ev","__ZN2cv11WebPEncoderC2Ev","__ZN2cv16SunRasterDecoderC2Ev","__ZN2cv16SunRasterEncoderC2Ev","__ZN2cv10PAMEncoderC2Ev","__ZN2cv10PFMEncoderC2Ev","__ZN2cv10PngDecoderC2Ev","__ZN2cv10PngEncoderC2Ev","__ZN2cv8tempfileEPKc","_jpeg_destroy_decompress","__ZdlPv","__ZN2cvL10error_exitEP18jpeg_common_struct","_jpeg_CreateDecompress","__ZN2cvL4stubEP22jpeg_decompress_struct","_jpeg_read_header","_jpeg_calc_output_dimensions","_jpeg_finish_decompress","_jpeg_CreateCompress","__ZN2cvL4stubEP20jpeg_compress_struct","__ZN2cvL16term_destinationEP20jpeg_compress_struct","_jpeg_set_defaults","_jpeg_simple_progression","__ZdaPv","_jpeg_finish_compress","_jpeg_destroy_compress","_png_set_strip_16","_png_set_swap","_png_set_strip_alpha","_png_set_tRNS_to_alpha","_png_set_palette_to_rgb","_png_set_expand_gray_1_2_4_to_8","_png_set_bgr","_png_set_gray_to_rgb","_png_set_rgb_to_gray","__ZN2cv10PngEncoder8flushBufEPv","_png_set_filter","_png_set_packing","__ZN2cv6detail20check_failed_MatTypeEiRKNS0_12CheckContextE","_WebPFree","__ZN7imgprocL9dft_shiftERN2cv3MatE","__ZN4ides13docextraction4quadC2Ev","__ZNSt3__26vectorIN4ides13docextraction4quadENS_9allocatorIS3_EEE8allocateEm","__ZN4ides13docextraction4quad12calc_cornersEv","__ZN4ides13docextraction4quad11calc_anglesEv","__ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEm","__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2Em","__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8allocateEm","__ZN4ides13docextraction15quads_extractor15smooth_segmentsEv","__ZN4ides13docextraction15quads_extractor14short_segmentsEv","__ZNSt3__26vectorIN2cv6Point_IfEENS_9allocatorIS3_EEE8allocateEm","__ZNSt3__26vectorINS0_IN4ides13docextraction12line_segmentENS_9allocatorIS3_EEEENS4_IS6_EEE8allocateEm","_write_file_header","_write_frame_header","_write_scan_header","_write_file_trailer","_write_tables_only","_prepare_for_pass","_pass_startup","_finish_pass_master","_finish_pass_phuff","_finish_pass_gather_phuff","_start_pass_downsample","_init_destination","_term_destination","_init_source","_term_source","_reset_input_controller","_start_input_pass","_finish_input_pass","_reset_marker_reader","_prepare_for_output_pass","_finish_output_pass","_start_pass_merged_upsample","_start_pass_phuff_decoder","_start_pass_upsample","_error_exit","_output_message","_reset_error_mgr","_finish_pass_1_quant","_new_color_map_1_quant","_new_color_map_2_quant","_finish_pass1","_finish_pass2","_realize_virt_arrays","_self_destruct","_null_method","_rgb_ycc_start","_start_pass_fdctmgr","_jpeg_fdct_islow","_jpeg_fdct_ifast","_jpeg_fdct_float","_finish_pass_huff","_finish_pass_gather","_start_input_pass_3562","_start_output_pass","_start_pass_dcolor","_start_pass","_start_pass_huff_decoder","_CustomTeardown","_DC4_C","_TM4_C","_VE4_C","_RD4_C","_LD4_C","_HE4_C","_VR4_C","_VL4_C","_HD4_C","_HU4_C","_DC16_C","_TM16_C","_VE16_C","_HE16_C","_DC16NoTop_C","_DC16NoLeft_C","_DC16NoTopLeft_C","_DC8uv_C","_TM8uv_C","_VE8uv_C","_HE8uv_C","_DC8uvNoTop_C","_DC8uvNoLeft_C","_DC8uvNoTopLeft_C","_png_set_error_fn","_png_default_flush","_cvCreateSeqBlock","_cvChangeSeqBlock","__ZNSt3__25dequeIPhNS_9allocatorIS1_EEE19__add_back_capacityEv","__ZNK2cv14DefaultDeleterI12CvMemStorageEclEPS1_","__ZNK2cv12_OutputArray5clearEv","__ZNSt3__26vectorIN2cv3ocl6KernelENS_9allocatorIS3_EEEC2Em","__ZNSt3__28ios_base16__call_callbacksENS0_5eventE","__ZNSt3__26locale2id6__initEv","__ZNSt3__212__do_nothingEPv","__ZNSt3__221__throw_runtime_errorEPKc","_free","__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm","__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm","__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_vididdii=["0","__ZN2cv11addWeightedERKNS_11_InputArrayEdS2_ddRKNS_12_OutputArrayEi"];var debug_table_vidii=["0","__ZNK2cv5MatOp6divideEdRKNS_7MatExprERS1_","__ZNK2cv11MatOp_AddEx6divideEdRKNS_7MatExprERS1_","__ZNK2cv9MatOp_Bin6divideEdRKNS_7MatExprERS1_","__ZN2cv8scaleAddERKNS_11_InputArrayEdS2_RKNS_12_OutputArrayE","0","0","0"];var debug_table_viffiiii=["0","__ZN2cvL23HoughLinesProbabilisticERNS_3MatEffiiiRNSt3__26vectorINS_3VecIiLi4EEENS2_9allocatorIS5_EEEEi"];var debug_table_vii=["0","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE13static_deleteEPPv","__ZN7cvflann7anyimpl16small_any_policyIPKcE13static_deleteEPPv","__ZN7cvflann7anyimpl16small_any_policyIiE13static_deleteEPPv","__ZN7cvflann7anyimpl16small_any_policyIfE13static_deleteEPPv","__ZN7cvflann7anyimpl16small_any_policyIbE13static_deleteEPPv","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE13static_deleteEPPv","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE13static_deleteEPPv","__ZN7cvflann7anyimpl16small_any_policyIjE13static_deleteEPPv","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13static_deleteEPPv","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE","__ZN2cv25DummyBufferPoolController18setMaxReservedSizeEm","__ZNK2cv15StdMatAllocator10deallocateEPNS_8UMatDataE","__ZNK2cv12MatAllocator5unmapEPNS_8UMatDataE","__ZNK2cv3ocl15OpenCLAllocator10deallocateEPNS_8UMatDataE","__ZNK2cv3ocl15OpenCLAllocator5unmapEPNS_8UMatDataE","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE18setMaxReservedSizeEm","__ZN2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE7releaseES5_","__ZThn4_N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memE7releaseES5_","__ZN2cv3oclL8kerToStrIhEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrIcEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrItEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrIsEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrIiEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrIfEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv3oclL8kerToStrIdEENSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_3MatE","__ZN2cv12ocl_part_sumIiEENS_7Scalar_IdEENS_3MatE","__ZN2cv12ocl_part_sumIfEENS_7Scalar_IdEENS_3MatE","__ZN2cv12ocl_part_sumIdEENS_7Scalar_IdEENS_3MatE","__ZNK2cv7TLSDataINS_11CoreTLSDataEE18deleteDataInstanceEPv","__ZNK2cv7TLSDataINS_12_GLOBAL__N_18ThreadIDEE18deleteDataInstanceEPv","__ZNK2cv7TLSDataINS_18UMatDataAutoLockerEE18deleteDataInstanceEPv","__ZNK2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEE18deleteDataInstanceEPv","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE","__ZNK2cv10BmpDecoder10newDecoderEv","__ZNK2cv16BaseImageEncoder14getDescriptionEv","__ZNK2cv10BmpEncoder10newEncoderEv","__ZNK2cv10HdrDecoder10newDecoderEv","__ZNK2cv10HdrEncoder10newEncoderEv","__ZNK2cv11JpegDecoder10newDecoderEv","__ZNK2cv11JpegEncoder10newEncoderEv","__ZNK2cv10PAMDecoder10newDecoderEv","__ZNK2cv10PAMEncoder10newEncoderEv","__ZNK2cv10PFMDecoder10newDecoderEv","__ZNK2cv10PFMEncoder10newEncoderEv","__ZNK2cv10PngDecoder10newDecoderEv","__ZNK2cv10PngEncoder10newEncoderEv","__ZNK2cv10PxMDecoder10newDecoderEv","__ZNK2cv10PxMEncoder10newEncoderEv","__ZNK2cv16SunRasterDecoder10newDecoderEv","__ZNK2cv16SunRasterEncoder10newEncoderEv","__ZNK2cv11WebPDecoder10newDecoderEv","__ZNK2cv11WebPEncoder10newEncoderEv","__ZNK2cv16BaseImageDecoder10newDecoderEv","__ZNK2cv16BaseImageEncoder10newEncoderEv","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HSV_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HSV_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HLS_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19RGB2HLS_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HSV2RGB_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HSV2RGB_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HLS2RGB_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_19HLS2RGB_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Lab_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Lab_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Luv_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9RGB2Luv_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Lab2RGB_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Lab2RGB_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Luv2RGB_bEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_9Luv2RGB_fEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_17RGB2RGBIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGB2RGB5x5EEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGB5x52RGBEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18RGB2GrayIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_18Gray2RGBIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB5x52GrayEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111Gray2RGB5x5EEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110RGBA2mRGBAIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_110mRGBA2RGBAIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_iIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_iItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111RGB2YCrCb_fIfEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_iIhEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_iItEEEclERKNS_5RangeE","__ZNK2cv4impl12_GLOBAL__N_120CvtColorLoop_InvokerINS_3hal12cpu_baseline12_GLOBAL__N_111YCrCb2RGB_fIfEEEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi1ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi1ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi0ELi1ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120YUV420sp2RGB8InvokerILi2ELi1ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi2ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV420p2RGB8InvokerILi2ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_120RGB8toYUV420pInvokerclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi1ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi1ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi1ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi1ELi0ELi3EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi0ELi1ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi0ELi1ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi0ELi1ELi4EEclERKNS_5RangeE","__ZNK2cv3hal12cpu_baseline12_GLOBAL__N_119YUV422toRGB8InvokerILi2ELi1ELi0ELi4EEclERKNS_5RangeE","__ZNK2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEclERKNS_5RangeE","__ZNK2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEEclERKNS_5RangeE","__ZNK2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEclERKNS_5RangeE","__ZNK2cv17Bayer2RGB_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEEclERKNS_5RangeE","__ZNK2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEclERKNS_5RangeE","__ZNK2cv18Bayer2Gray_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEEclERKNS_5RangeE","__ZNK2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEclERKNS_5RangeE","__ZNK2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_12VResizeNoVecEEEEclERKNS_5RangeE","__ZNK2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_12VResizeNoVecEEEEclERKNS_5RangeE","__ZNK2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_12VResizeNoVecEEEEclERKNS_5RangeE","__ZNK2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEclERKNS_5RangeE","__ZNK2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEEclERKNS_5RangeE","__ZNK2cv22resizeAreaFast_InvokerIffNS_19ResizeAreaFastNoVecIffEEEclERKNS_5RangeE","__ZNK2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_19ResizeAreaFastNoVecIssEEEEEclERKNS_5RangeE","__ZNK2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_19ResizeAreaFastNoVecIttEEEEEclERKNS_5RangeE","__ZNK2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_19ResizeAreaFastNoVecIhhEEEEEclERKNS_5RangeE","__ZNK2cv13parallelCannyclERKNS_5RangeE","__ZNK2cv9finalPassclERKNS_5RangeE","__ZNK2cv15ThresholdRunnerclERKNS_5RangeE","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE","__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE","__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE","__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE","__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE","__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv","__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv","__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv","__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv","__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv","__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv","__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv","__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv","__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv","__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv","__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv","__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv","__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv","__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv","__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv","__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv","__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv","__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv","__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv","__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv","__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv","__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv","__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv","__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv","__ZNKSt3__28messagesIcE8do_closeEl","__ZNKSt3__28messagesIwE8do_closeEl","__ZNKSt3__28numpunctIcE11do_groupingEv","__ZNKSt3__28numpunctIcE11do_truenameEv","__ZNKSt3__28numpunctIcE12do_falsenameEv","__ZNKSt3__28numpunctIwE11do_groupingEv","__ZNKSt3__28numpunctIwE11do_truenameEv","__ZNKSt3__28numpunctIwE12do_falsenameEv","__ZNKSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv","__ZN2cv8imdecodeERKNS_11_InputArrayEi","__ZN7imgproc26assess_image_glare_qualityERKN2cv3MatEffRKNS_7marginsEh","__ZN8idesWASM8logErrorENSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKSt9exception","__ZNSt3__26vectorIN2cv6Point_IiEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc","__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_","__ZNSt3__28ios_base5clearEj","__ZNSt11logic_errorC2EPKc","__ZNK2cv11_InputArray7getUMatEi","__ZN2cv3ocl9KernelArg8ConstantERKNS_3MatE","__ZN2cv3Mat8copySizeERKS0_","__ZNK2cv3Mat6copyToERKNS_12_OutputArrayE","__ZNSt3__26vectorIN2cv3MatENS_9allocatorIS2_EEE6resizeEm","__ZNSt3__26vectorIN2cv3MatENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE","__ZN2cv4UMat8copySizeERKS0_","__ZNK2cv4UMat6copyToERKNS_12_OutputArrayE","__ZN2cv5utils7logging8internal15writeLogMessageENS1_8LogLevelEPKc","__ZNSt3__26vectorIP15_cl_platform_idNS_9allocatorIS2_EEE8__appendEm","__ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_","__ZNSt3__26vectorIP13_cl_device_idNS_9allocatorIS2_EEE8__appendEm","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE","__ZNSt3__26vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_","__ZN2cv3ocl6Device4ImplC2EPv","__ZN2cv3ocl7Program4Impl16getProgramBinaryERNSt3__26vectorIcNS3_9allocatorIcEEEE","__ZN2cv3ocl13ProgramSource4Impl10updateHashEPKc","__ZNSt3__214__split_bufferIPPN2cv8UMatDataERNS_9allocatorIS4_EEE9push_backEOS4_","__ZNSt3__214__split_bufferIPPN2cv8UMatDataERNS_9allocatorIS4_EEE10push_frontERKS4_","__ZNK2cv3ocl15OpenCLAllocator11deallocate_EPNS_8UMatDataE","__ZNSt3__26vectorImNS_9allocatorImEEE21__push_back_slow_pathImEEvOT_","__ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_","__ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_","__ZN2cv9ExceptionC2ERKS0_","__ZNSt3__26vectorIPN2cv10ThreadDataENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_","__ZNSt3__26vectorIPvNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_","__ZN2cv9transposeERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cv12typeToStringEi","__ZNK2cv11_InputArray6copyToERKNS_12_OutputArrayE","__ZN2cv11setIdentityERKNS_17_InputOutputArrayERKNS_7Scalar_IdEE","__ZN2cv6detail17check_failed_autoEiRKNS0_12CheckContextE","__ZN2cv13mulTransposedERKNS_11_InputArrayERKNS_12_OutputArrayEbS2_di","__ZNK2cv4UMat1tEv","__ZN2cv11bitwise_notERKNS_11_InputArrayERKNS_12_OutputArrayES2_","__ZNK2cv11_InputArray13getUMatVectorERNSt3__26vectorINS_4UMatENS1_9allocatorIS3_EEEE","__ZNSt3__26vectorIN2cv4UMatENS_9allocatorIS2_EEEC2EmRKS2_","__ZN2cv5utils5trace7details16SyncTraceStorageC2ERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE","__ZN2cv5utils5trace7details17AsyncTraceStorageC2ERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE","__ZN2cv5utils5trace7details6Region4Impl11enterRegionERNS2_23TraceManagerThreadLocalE","__ZNSt3__214__split_bufferIPN2cv5utils5trace7details23TraceManagerThreadLocal10StackEntryERNS_9allocatorIS7_EEE9push_backEOS7_","__ZNSt3__214__split_bufferIPN2cv5utils5trace7details23TraceManagerThreadLocal10StackEntryERNS_9allocatorIS7_EEE10push_frontERKS7_","__ZN2cv10PxMEncoderC2ENS_7PxMModeE","__ZN2cvL9imdecode_ERKNS_3MatEiRS0_","__ZN2cv11RBaseStream4skipEi","__ZN2cv11RBaseStream6setPosEi","__ZN2cv12WLByteStream8putDWordEi","__ZN2cv12WLByteStream7putWordEi","__ZNSt3__26vectorIN2cv3MatENS_9allocatorIS2_EEEC2EmRKS2_","__ZN2cv5mergeERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cvL15skip_input_dataEP22jpeg_decompress_structl","_jpeg_stdio_src","_jpeg_stdio_dest","_jpeg_set_quality","_jpeg_start_compress","__ZN2cv12WLByteStream7putByteEi","__ZN12_GLOBAL__N_114write_anythingIiEEvRN2cv12WLByteStreamERKT_","_png_init_io","_png_read_info","_png_read_update_info","_png_read_image","_png_read_end","_png_set_compression_level","_png_set_compression_strategy","_png_write_info","_png_write_image","_png_write_end","_png_destroy_write_struct","__ZN2cv12WMByteStream8putDWordEi","__ZN2cv23oclCvtColorYUV2Gray_420ERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cv13parallel_for_ERKNS_5RangeERKNS_16ParallelLoopBodyEd","__ZN2cv6detail21check_failed_MatDepthEiRKNS0_12CheckContextE","__ZN2cvL10applyGammaENS_9softfloatE","__ZN2cv4idftERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv5splitERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cv3logERKNS_11_InputArrayERKNS_12_OutputArrayE","__ZN2cvmLERNS_3MatERKd","__ZN2cv4meanERKNS_11_InputArrayES2_","__ZN2cvgtERKNS_3MatEd","__ZNK2cv7MatExprcvNS_3MatEEv","__ZN7imgproc10glare_maskERKN2cv3MatEh","__ZN2cv3MatC2ERKS0_","__ZNK2cv3Mat5cloneEv","__ZN2cv11minAreaRectERKNS_11_InputArrayE","__ZN4ides13docextraction9extractorC2ERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE","__ZN4ides13docextraction7profileC2ERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE","__ZN4ides15not_found_errorC2EPKc","__ZN4ides18line_segment_errorC2EPKc","__ZNSt3__26__sortIRZN4ides13docextraction9extractor14get_best_quadsERKNS_6vectorINS2_4quadENS_9allocatorIS5_EEEERKN2cv5Size_IiEERKNS4_INS_10unique_ptrINS2_10ref_regionENS_14default_deleteISH_EEEENS6_ISK_EEEEmE3__0PNS_4pairIdS5_EEEEvT0_SU_T_","__ZN4ides13docextraction4quadC2ERKS1_","__ZNSt3__24pairIdN4ides13docextraction4quadEEC2EOS4_","__ZNSt3__26vectorINS_4pairIdN4ides13docextraction4quadEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_","__ZNSt3__26vectorINS_4pairIdN4ides13docextraction4quadEEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE","__ZN2cv5splitERKNS_3MatEPS0_","__ZN2cv3sumERKNS_11_InputArrayE","__ZNSt3__26vectorIN2cv6Point_IiEENS_9allocatorIS3_EEEC2ERKS6_","__ZN4ides13docextraction15quads_extractor11add_segmentERKNS0_12line_segmentE","__ZNK4ides13docextraction4quad7cornersEv","__ZNSt3__26vectorIN2cv6Point_IiEENS_9allocatorIS3_EEE8allocateEm","__ZNSt13runtime_errorC2EPKc","__ZNK4ides13docextraction4quad12sort_cornersEv","__ZN4ides13docextraction12line_segmentC2ERKS1_","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__26vectorIN4ides13docextraction5PointENS_9allocatorIS3_EEEC2ERKS6_","__ZNSt3__26vectorIdNS_9allocatorIdEEE8allocateEm","__ZNSt3__26vectorIN4ides13docextraction5PointENS_9allocatorIS3_EEE8allocateEm","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE8allocateEm","__ZNSt3__26vectorIdNS_9allocatorIdEEEC2Em","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_","__ZNSt3__26vectorINS_4pairINS_11__wrap_iterIPN4ides13docextraction12line_segmentEEES7_EENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_","__ZN4ides13docextraction4quadC2EOKS1_","__ZNSt3__26vectorIN4ides13docextraction4quadENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_","__ZNSt3__26vectorIN4ides13docextraction4quadENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE","__ZNSt3__26vectorINS0_IN4ides13docextraction12line_segmentENS_9allocatorIS3_EEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEEC2ERKS6_","__ZNSt3__26vectorINS0_IN4ides13docextraction12line_segmentENS_9allocatorIS3_EEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_","__ZN2cv7fitLineERKNS_11_InputArrayERKNS_12_OutputArrayEiddd","__ZN2cv12boundingRectERKNS_11_InputArrayE","_start_pass_main","_write_marker_byte","_start_pass_phuff","_start_pass_prep","_skip_input_data","_start_pass_dpost","_emit_message","_format_message","_start_pass_1_quant","_start_pass_2_quant","_free_pool","_start_pass_coef","_start_pass_huff","_start_pass_main_3590","_ExtractAlphaRows","_ProcessRows","_emscripten_longjmp","_png_zfree","_png_free","_cvStartReadChainPoints","__ZN2cv5utils5trace7details6RegionC2ERKNS3_21LocationStaticStorageE","__ZNSt3__214__split_bufferIPPhRNS_9allocatorIS2_EEE9push_backEOS2_","__ZNSt3__214__split_bufferIPPhRNS_9allocatorIS2_EEE10push_frontERKS2_","__ZNSt3__210shared_ptrI12CvMemStorageEC2IS1_N2cv14DefaultDeleterIS1_EEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS8_PS1_EE5valueENS2_5__natEE4typeE","_cvStartReadSeq","__ZNSt3__26vectorI5CvSeqNS_9allocatorIS1_EEE8__appendEm","__ZNSt3__26vectorI10CvSeqBlockNS_9allocatorIS1_EEE8__appendEm","_cvInitTreeNodeIterator","__ZNK2cv12_OutputArray6assignERKNS_4UMatE","__ZNSt3__26vectorIN2cv6Point_IiEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_","__ZNSt3__26vectorIN2cv3VecIiLi4EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_","__ZNSt3__26vectorIPhNS_9allocatorIS1_EEE8__appendEm","__ZN2cv10convexHullERKNS_11_InputArrayERKNS_12_OutputArrayEbb","__ZN2cvL16maskBoundingRectERKNS_3MatE","__ZN2cvL20pointSetBoundingRectERKNS_3MatE","__ZN2cv11OCL_FftPlan14fillRadixTableIfEEvNS_4UMatERKNSt3__26vectorIiNS3_9allocatorIiEEEE","__ZN2cv11OCL_FftPlan14fillRadixTableIdEEvNS_4UMatERKNSt3__26vectorIiNS3_9allocatorIiEEEE","__ZNSt3__26vectorIN2cv4UMatENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_","__ZNK2cv11_InputArray12getMatVectorERNSt3__26vectorINS_3MatENS1_9allocatorIS3_EEEE","_zcfree","__ZNSt3__28ios_base7failureC2EPKcRKNS_10error_codeE","__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw","__ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcvar debug_table_viid=["0","__ZN2cv7MatOp_T8makeExprERNS_7MatExprERKNS_3MatEd","__ZN2cveqERKNS_3MatEd","__ZNK4ides13docextraction12line_segment18scale_line_segmentEd"];var debug_table_viidd=["0","__ZN4ides13docextraction4quad5scaleERS1_dd","__ZN2cv5CannyERKNS_11_InputArrayERKNS_12_OutputArrayEddib","__ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi"];var debug_table_viiddidd=["0","__ZN2cv11HoughLinesPERKNS_11_InputArrayERKNS_12_OutputArrayEddidd"];var debug_table_viidi=["0","__ZNK2cv5MatOp8multiplyERKNS_7MatExprEdRS1_","__ZNK2cv10MatOp_GEMM8multiplyERKNS_7MatExprEdRS1_","__ZNK2cv11MatOp_AddEx8multiplyERKNS_7MatExprEdRS1_","__ZNK2cv9MatOp_Bin8multiplyERKNS_7MatExprEdRS1_","__ZNK2cv7MatOp_T8multiplyERKNS_7MatExprEdRS1_","__ZNK2cv17MatOp_Initializer8multiplyERKNS_7MatExprEdRS1_","__ZN2cv12approxPolyDPERKNS_11_InputArrayERKNS_12_OutputArrayEdb"];var debug_table_viididii=["0","__ZN2cv4gemmERKNS_11_InputArrayES2_dS2_dRKNS_12_OutputArrayEi","__ZN2cv12cpu_baselineL8gemmImplENS_3MatES1_dS1_dS1_i","0"];var debug_table_viif=["0","__ZN10emscripten8internal12MemberAccessIN8idesWASM9DeeResultEfE7setWireIS3_EEvRKMS3_fRT_f"];var debug_table_viii=["0","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE5cloneEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE4moveEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS0_9empty_anyEE5printERNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl16small_any_policyIPKcE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl16small_any_policyIPKcE5cloneEPKPvPS5_","__ZN7cvflann7anyimpl16small_any_policyIPKcE4moveEPKPvPS5_","__ZN7cvflann7anyimpl16small_any_policyIPKcE5printERNSt3__213basic_ostreamIcNS5_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl16small_any_policyIiE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl16small_any_policyIiE5cloneEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIiE4moveEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIiE5printERNSt3__213basic_ostreamIcNS3_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl16small_any_policyIfE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl16small_any_policyIfE5cloneEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIfE4moveEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIfE5printERNSt3__213basic_ostreamIcNS3_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl16small_any_policyIbE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl16small_any_policyIbE5cloneEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIbE4moveEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIbE5printERNSt3__213basic_ostreamIcNS3_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE5cloneEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE4moveEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEE5printERNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE5cloneEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE4moveEPKPvPS4_","__ZN7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEE5printERNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl16small_any_policyIjE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl16small_any_policyIjE5cloneEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIjE4moveEPKPvPS3_","__ZN7cvflann7anyimpl16small_any_policyIjE5printERNSt3__213basic_ostreamIcNS3_11char_traitsIcEEEEPKPv","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15copy_from_valueEPKvPPv","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5cloneEPKPvPSA_","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE4moveEPKPvPSA_","__ZN7cvflann7anyimpl14big_any_policyINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5printERNS2_13basic_ostreamIcS5_EEPKPv","__ZNK2cv12MatAllocator3mapEPNS_8UMatDataENS_10AccessFlagE","__ZN2cvL13transposeI_8uEPhmi","__ZN2cvL14transposeI_16uEPhmi","__ZN2cvL15transposeI_8uC3EPhmi","__ZN2cvL14transposeI_32sEPhmi","__ZN2cvL16transposeI_16uC3EPhmi","__ZN2cvL16transposeI_32sC2EPhmi","__ZN2cvL16transposeI_32sC3EPhmi","__ZN2cvL16transposeI_32sC4EPhmi","__ZN2cvL16transposeI_32sC6EPhmi","__ZN2cvL16transposeI_32sC8EPhmi","__ZNK2cv3ocl15OpenCLAllocator3mapEPNS_8UMatDataENS_10AccessFlagE","__ZNK2cv5MatOp12augAssignAddERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp17augAssignSubtractERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp17augAssignMultiplyERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp15augAssignDivideERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp12augAssignAndERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp11augAssignOrERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp12augAssignXorERKNS_7MatExprERNS_3MatE","__ZNK2cv5MatOp3absERKNS_7MatExprERS1_","__ZNK2cv5MatOp9transposeERKNS_7MatExprERS1_","__ZNK2cv5MatOp4sizeERKNS_7MatExprE","__ZNK2cv10MatOp_GEMM9transposeERKNS_7MatExprERS1_","__ZNK2cv11MatOp_AddEx3absERKNS_7MatExprERS1_","__ZNK2cv11MatOp_AddEx9transposeERKNS_7MatExprERS1_","__ZNK2cv7MatOp_T9transposeERKNS_7MatExprERS1_","__ZN2cv16ReplacementDFT1D5applyEPKhPh","__ZN2cv15OcvDftBasicImpl5applyEPKhPh","__ZN2cvL7DFT_32fERKNS_13OcvDftOptionsEPKNS_7ComplexIfEEPS4_","__ZN2cvL11RealDFT_32fERKNS_13OcvDftOptionsEPKfPf","__ZN2cvL11CCSIDFT_32fERKNS_13OcvDftOptionsEPKfPf","__ZN2cvL7DFT_64fERKNS_13OcvDftOptionsEPKNS_7ComplexIdEEPS4_","__ZN2cvL11RealDFT_64fERKNS_13OcvDftOptionsEPKdPd","__ZN2cvL11CCSIDFT_64fERKNS_13OcvDftOptionsEPKdPd","__ZNKSt3__214error_category23default_error_conditionEi","__ZNKSt3__219__iostream_category7messageEi","__ZNKSt3__224__generic_error_category7messageEi","__ZNKSt3__223__system_error_category23default_error_conditionEi","__ZNKSt3__223__system_error_category7messageEi","__ZN8idesWASM7toCVMatEPhm","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm","__ZN4ides13docextraction9extractor15detect_documentERKN2cv3MatE","__ZN10emscripten8internal12MemberAccessIN8idesWASM13QualityResultEiE7setWireIS3_EEvRKMS3_iRT_i","__ZN10emscripten8internal12MemberAccessIN8idesWASM19LowResolutionResultEiE7setWireIS3_EEvRKMS3_iRT_i","__ZN8idesWASM15detect_documentEim","__ZN2cv3MatC2ERKS0_PKNS_5RangeE","__ZN2cv6formatEPKcz","__ZNK2cv3Mat4diagEi","__ZNK2cv11_InputArray7getMat_Ei","__ZNK2cv3Mat7getUMatENS_10AccessFlagENS_14UMatUsageFlagsE","__ZN2cv3oclL5splitERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEcRNS1_6vectorIS7_NS5_IS7_EEEE","__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b","__ZN2cv3ocl5Queue4ImplC2ERKNS0_7ContextERKNS0_6DeviceEb","__ZN2cv3oclL16joinBuildOptionsERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_","__ZN2cv5utils31getConfigurationParameterStringEPKcS2_","__ZN2cv3ocl6Kernel4ImplC2EPKcRKNS0_7ProgramE","__ZN2cv3ocl6Kernel6createEPKcRKNS0_7ProgramE","__ZL18oclCleanupCallbackP9_cl_eventiPv","__ZN2cv3ocl20OpenCLBufferPoolImpl20_allocateBufferEntryERNS0_13CLBufferEntryEm","__ZNK2cv11_InputArray4sizeEi","___cxa_throw","__ZNK2cv4UMat6getMatENS_10AccessFlagE","__ZNK2cv10ParseError8toStringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE","__ZNSt3__26vectorIPvNS_9allocatorIS1_EEE8__appendEmRKS1_","__ZN2cv10TlsStorage11releaseSlotEmRNSt3__26vectorIPvNS1_9allocatorIS3_EEEEb","__ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_","__ZN2cv4readINSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_RKS7_RKS8_","__ZN2cv18UMatDataAutoLocker7releaseEPNS_8UMatDataES2_","__ZNK2cv3Mat9locateROIERNS_5Size_IiEERNS_6Point_IiEE","__ZN2cv4UMatC2ERKS0_RKNS_5Rect_IiEE","__ZN2cv4UMatC2ERKS0_PKNS_5RangeE","__ZNK2cv12_OutputArray14createSameSizeERKNS_11_InputArrayEi","__ZNK2cv12_OutputArray5setToERKNS_11_InputArrayES3_","__ZN2cv6detail17check_failed_autoEiiRKNS0_12CheckContextE","__ZNK2cv4UMat9locateROIERNS_5Size_IiEERNS_6Point_IiEE","__ZN2cv5eigenERKNS_11_InputArrayERKNS_12_OutputArrayES5_","__ZN2cv3ocl6KernelC2EPKcRKNS0_7ProgramE","__ZN2cv8subtractERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i","__ZN2cv3addERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i","__ZN2cv11bitwise_andERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_","__ZN2cv10bitwise_orERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_","__ZN2cv11bitwise_xorERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_","__ZN2cv12MatOp_Invert8makeExprERNS_7MatExprEiRKNS_3MatE","__ZN2cv6invertERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv3minERKNS_3MatES2_RS0_","__ZN2cv3minERKNS_11_InputArrayES2_RKNS_12_OutputArrayE","__ZN2cv3maxERKNS_3MatES2_RS0_","__ZN2cv3maxERKNS_11_InputArrayES2_RKNS_12_OutputArrayE","__ZN2cv7absdiffERKNS_11_InputArrayES2_RKNS_12_OutputArrayE","__ZN2cv17MatOp_Initializer8makeExprERNS_7MatExprEiNS_5Size_IiEEid","__ZN2cv11mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayEPKim","__ZN2cvL22validateInputImageSizeERKNS_5Size_IiEE","__ZN2cv12WLByteStream8putBytesEPKvi","__Z15RGBE_ReadHeaderP8_IO_FILEPiS1_P16rgbe_header_info","__Z16RGBE_WriteHeaderP8_IO_FILEiiP16rgbe_header_info","__Z16RGBE_WritePixelsP8_IO_FILEPfi","__ZN2cv24icvCvt_CMYK2BGR_8u_C4C3REPKhiPhiNS_5Size_IiEE","__ZN2cv21icvCvt_BGR2RGB_8u_C3REPKhiPhiNS_5Size_IiEE","__ZN2cv25icvCvt_CMYK2Gray_8u_C4C1REPKhiPhiNS_5Size_IiEE","__ZN2cv8cvtColorERKNS_11_InputArrayERKNS_12_OutputArrayEii","_png_destroy_read_struct","_png_set_read_fn","__ZN2cv10PngDecoder15readDataFromBufEPvPhm","__ZN2cv10PngEncoder14writeDataToBufEPvPhm","__ZN2cv6detail20check_failed_MatTypeEiiRKNS0_12CheckContextE","__ZNSt3__2plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_","__ZN2cvL10Bayer2RGB_IhNS_26SIMDBayerStubInterpolator_IhEEEEvRKNS_3MatERS3_i","__ZN2cv3dftERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZNK2cv3MatclERKNS_5Rect_IiEE","__ZN2cv9magnitudeERKNS_11_InputArrayES2_RKNS_12_OutputArrayE","__ZN2cv3MatC2ERKS0_RKNS_5Rect_IiEE","__ZN2cv21getStructuringElementEiNS_5Size_IiEENS_6Point_IiEE","__ZN4ides13docextraction9extractor12get_contoursERKN2cv3MatERS3_","__ZN4ides13docextraction15quads_extractor9get_quadsERNSt3__26vectorINS0_4quadENS2_9allocatorIS4_EEEERKNS3_INS2_10unique_ptrINS0_10ref_regionENS2_14default_deleteISA_EEEENS5_ISD_EEEE","__ZNK4ides13docextraction9extractor12filter_quadsERNSt3__26vectorINS0_4quadENS2_9allocatorIS4_EEEERKN2cv5Size_IiEE","__ZNSt3__26vectorIN4ides13docextraction4quadENS_9allocatorIS3_EEE18__construct_at_endIPKS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_m","__ZN2cv10medianBlurERKNS_11_InputArrayERKNS_12_OutputArrayEi","__ZN2cv3Mat5zerosENS_5Size_IiEEi","__ZNSt3__26vectorIN2cv6Point_IiEENS_9allocatorIS3_EEEC2INS_11__wrap_iterIPS3_EEEET_NS_9enable_ifIXaasr21__is_forward_iteratorISB_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueESB_E4typeE","__ZN4ides13docextraction9extractor8get_quadERKN2cv3MatE","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE18__construct_at_endIPKS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_m","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_","__ZN4ides13docextraction12line_segmentaSERKS1_","__ZNSt3__26vectorINS0_IN4ides13docextraction12line_segmentENS_9allocatorIS3_EEEENS4_IS6_EEE18__construct_at_endIPKS6_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESD_SD_m","__ZNSt3__26vectorIbNS_9allocatorIbEEEC2EmRKb","__ZNSt3__26vectorIN4ides13docextraction12line_segmentENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m","_write_marker_header","_convsamp","_quantize","_convsamp_float","_quantize_float","_jsimd_quantize","_png_default_read_data","_png_read_filter_row_sub","_png_read_filter_row_up","_png_read_filter_row_avg","_png_read_filter_row_paeth_multibyte_pixel","_png_read_filter_row_paeth_1byte_pixel","_png_default_write_data","__ZN2cvL24connectedComponents_sub1INS_19connectedcomponents9CCStatsOpEEEiRKNS_3MatERS3_iiRT_","__ZN2cv12cpu_baseline9RowFilterIhiNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIhfNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIhdNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterItfNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterItdNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIsfNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIsdNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIffNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIfdNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline9RowFilterIddNS0_8RowNoVecEEC2ERKNS_3MatEiRKS2_","__ZN2cv12cpu_baseline10medianBlurERKNS_3MatERS1_i","__ZN2cv18preprocess2DKernelERKNS_3MatERNSt3__26vectorINS_6Point_IiEENS3_9allocatorIS6_EEEERNS4_IhNS7_IhEEEE","__ZN2cv11OCL_FftPlanC2Eii","__ZN2cv5mergeEPKNS_3MatEmRKNS_12_OutputArrayE","__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcmm","__ZNSt3__212system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiid=["0","__ZN2cv12cpu_baselineL14MulTransposedRIhfEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIhdEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRItfEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRItdEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIsfEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIsdEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIffEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIfdEEvRKNS_3MatES4_S4_d","__ZN2cv12cpu_baselineL14MulTransposedRIddEEvRKNS_3MatES4_S4_d","__ZN2cv6divideERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi","__ZN2cv8multiplyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi","__ZN2cv9MatOp_Cmp8makeExprERNS_7MatExprEiRKNS_3MatEd","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiidd=["0","__ZNK2cv3Mat9convertToERKNS_12_OutputArrayEidd","__ZN2cv6resizeERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEddi","__ZN2cv15ThresholdRunnerC2ENS_3MatES1_ddi"];var debug_table_viiiddi=["0","__ZN2cv11MatOp_AddEx8makeExprERNS_7MatExprERKNS_3MatES5_ddRKNS_7Scalar_IdEE"];var debug_table_viiidi=["0","__ZN2cv12cpu_baseline12ColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEC2ERKNS_3MatEidRKS3_RKS4_","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","0","0","0"];var debug_table_viiidii=["0","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEC2ERKNS_3MatEidiRKS3_RKS4_","0"];var debug_table_viiifi=["0","__ZN4ides13docextraction7db_scan17db_scan_keypointsERKNSt3__26vectorINS0_12line_segmentENS2_9allocatorIS4_EEEEfi"];var debug_table_viiii=["0","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj","__ZNK2cv12MatOp_Invert6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv5MatOp4diagERKNS_7MatExprEiRS1_","__ZNK2cv5MatOp3addERKNS_7MatExprES3_RS1_","__ZNK2cv5MatOp3addERKNS_7MatExprERKNS_7Scalar_IdEERS1_","__ZNK2cv5MatOp8subtractERKNS_7MatExprES3_RS1_","__ZNK2cv5MatOp8subtractERKNS_7Scalar_IdEERKNS_7MatExprERS5_","__ZNK2cv12MatOp_Invert6matmulERKNS_7MatExprES3_RS1_","__ZNK2cv5MatOp6invertERKNS_7MatExprEiRS1_","__ZNK2cv11MatOp_Solve6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv5MatOp6matmulERKNS_7MatExprES3_RS1_","__ZNK2cv14MatOp_Identity6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv10MatOp_GEMM6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv10MatOp_GEMM3addERKNS_7MatExprES3_RS1_","__ZNK2cv10MatOp_GEMM8subtractERKNS_7MatExprES3_RS1_","__ZNK2cv11MatOp_AddEx6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv11MatOp_AddEx3addERKNS_7MatExprERKNS_7Scalar_IdEERS1_","__ZNK2cv11MatOp_AddEx8subtractERKNS_7Scalar_IdEERKNS_7MatExprERS5_","__ZNK2cv9MatOp_Bin6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv7MatOp_T6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv9MatOp_Cmp6assignERKNS_7MatExprERNS_3MatEi","__ZNK2cv17MatOp_Initializer6assignERKNS_7MatExprERNS_3MatEi","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj","__ZN2cv3hal7merge8uEPPKhPhii","__ZN2cv3hal8merge16uEPPKtPtii","__ZN2cv3hal8merge32sEPPKiPiii","__ZN2cv3hal8merge64sEPPKxPxii","__ZN2cv3hal7split8uEPKhPPhii","__ZN2cv3hal8split16uEPKtPPtii","__ZN2cv3hal8split32sEPKiPPiii","__ZN2cv3hal8split64sEPKxPPxii","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj","__ZNKSt3__27collateIcE12do_transformEPKcS3_","__ZNKSt3__27collateIwE12do_transformEPKwS3_","__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi","__ZN8idesWASM17checkImageQualityEimi","__ZN2cv15NAryMatIteratorC2EPPKNS_3MatEPPhi","__ZNK2cv3Mat7reshapeEiiPKi","__ZN2cv3Mat6createEiPKii","__ZN2cv3MatC2ERKS0_RKNS_5RangeES5_","__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_mmRKS4_","__ZNSt3__26__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_","__ZN2cv3ocl7Program6createERKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERSB_","__ZN2cv3ocl7Program4ImplC2ERKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEERSC_","__ZN2cv3ocl7Program4Impl7compileERKNS0_7ContextEPKNS0_13ProgramSource4ImplERNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE","__ZN2cv3ocl7Program4Impl13dumpBuildLog_EiPKP13_cl_device_idRNSt3__212basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEE","__ZNK2cv3Mat7reshapeEii","__ZN2cv3ocl7Image2D4Impl4initERKNS_4UMatEbb","__ZN2cv4UMat6createEiPKiiNS_14UMatUsageFlagsE","__ZN2cv22convertAndUnrollScalarERKNS_3MatEiPhm","__ZN2cv19getContinuousSize2DERNS_3MatES1_i","__ZN2cv15scalarToRawDataERKNS_7Scalar_IdEEPvii","__ZN2cvL11_SVDcomputeERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_i","__ZN2cv6repeatERKNS_11_InputArrayEiiRKNS_12_OutputArrayE","_cvCvtSeqToArray","__ZN2cv5solveERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi","__ZN2cv7compareERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi","__Z19RGBE_ReadPixels_RLEP8_IO_FILEPfii","__Z20RGBE_WritePixels_RLEP8_IO_FILEPfii","__ZN2cv24icvCvt_BGRA2BGR_8u_C4C3REPKhiPhiNS_5Size_IiEEi","_png_set_write_fn","__ZN2cv11demosaicingERKNS_11_InputArrayERKNS_12_OutputArrayEii","__ZN2cv4UMatC2ERKS0_RKNS_5RangeES5_","__ZN2cv3ocl7Image2DC2ERKNS_4UMatEbb","__ZN2cv28connectedComponentsWithStatsERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_ii","__ZN4ides13docextraction15quads_extractorC2ENSt3__210shared_ptrINS0_7profileEEERKN2cv5Size_IiEENS6_3MatE","__ZN4ides13docextraction9extractor12get_segmentsERKN2cv3MatERNS0_15quads_extractorERKNSt3__26vectorINS8_10unique_ptrINS0_10ref_regionENS8_14default_deleteISB_EEEENS8_9allocatorISE_EEEE","__ZN4ides13docextraction9extractor12filter_quadsERNSt3__26vectorINS0_4quadENS2_9allocatorIS4_EEEERKN2cv5Size_IiEERKNS3_INS2_10unique_ptrINS0_10ref_regionENS2_14default_deleteISF_EEEENS5_ISI_EEEE","__ZN4ides13docextraction4quad13calc_color_sdENSt3__210shared_ptrINS0_7profileEEERKN2cv3MatERKNS2_6vectorINS2_10unique_ptrINS0_10ref_regionENS2_14default_deleteISC_EEEENS2_9allocatorISF_EEEE","__ZN4ides13docextraction12line_segmentC2ERKNS0_5PointES4_i","__ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_","__ZNSt3__214__split_bufferIN2cv6Point_IiEERNS_9allocatorIS3_EEEC2EmmS6_","_process_data_simple_main","_fullsize_smooth_downsample","_fullsize_downsample","_h2v1_downsample","_h2v2_smooth_downsample","_h2v2_downsample","_int_downsample","_h2v2_merged_upsample","_h2v2_merged_upsample_565D","_h2v2_merged_upsample_565","_h2v1_merged_upsample","_h2v1_merged_upsample_565D","_h2v1_merged_upsample_565","_noop_upsample","_fullsize_upsample","_h2v1_fancy_upsample","_h2v1_upsample","_h1v2_fancy_upsample","_h2v2_fancy_upsample","_h2v2_upsample","_int_upsample","_color_quantize3","_color_quantize","_quantize_ord_dither","_quantize3_ord_dither","_quantize_fs_dither","_prescan_quantize","_pass2_no_dither","_pass2_fs_dither","_process_data_context_main","_process_data_simple_main_3591","_process_data_crank_post","_HorizontalUnfilter_C","_VerticalUnfilter_C","_GradientUnfilter_C","_PredictorAdd0_C","_PredictorAdd1_C","_PredictorAdd2_C","_PredictorAdd3_C","_PredictorAdd4_C","_PredictorAdd5_C","_PredictorAdd6_C","_PredictorAdd7_C","_PredictorAdd8_C","_PredictorAdd9_C","_PredictorAdd10_C","_PredictorAdd11_C","_PredictorAdd12_C","_PredictorAdd13_C","_PredictorSub0_C","_PredictorSub1_C","_PredictorSub2_C","_PredictorSub3_C","_PredictorSub4_C","_PredictorSub5_C","_PredictorSub6_C","_PredictorSub7_C","_PredictorSub8_C","_PredictorSub9_C","_PredictorSub10_C","_PredictorSub11_C","_PredictorSub12_C","_PredictorSub13_C","_png_set_mem_fn","_cvStartWriteSeq","__ZN2cv12cpu_baseline18SymmRowSmallFilterIhiNS0_17SymmRowSmallNoVecEEC2ERKNS_3MatEiiRKS2_","__ZN2cv12cpu_baseline18SymmRowSmallFilterIffNS0_17SymmRowSmallNoVecEEC2ERKNS_3MatEiiRKS2_","__ZN2cv3ocl11kernelToStrERKNS_11_InputArrayEiPKc","__ZN2cvL14fitLine2D_wodsEPKNS_6Point_IfEEiPfS4_","__ZN2cvL14fitLine3D_wodsEPKNS_7Point3_IfEEiPfS4_","__ZN2cv11OCL_FftPlan14ocl_getRadixesEiRNSt3__26vectorIiNS1_9allocatorIiEEEES6_Ri","__ZNSt3__212system_errorC2ENS_10error_codeEPKc","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiid=["0","__ZNK2cv5MatOp8multiplyERKNS_7MatExprES3_RS1_d","__ZNK2cv5MatOp6divideERKNS_7MatExprES3_RS1_d","__ZN2cv9MatOp_Bin8makeExprERNS_7MatExprEcRKNS_3MatES5_d"];var debug_table_viiiidid=["0","__ZN2cv10MatOp_GEMM8makeExprERNS_7MatExprEiRKNS_3MatES5_dS5_d"];var debug_table_viiiidiidiiiiiii=["0","__ZN2cv12cpu_baselineL12callGemmImplIdEEvPKT_mS4_mS2_S4_mS2_PS2_miiiii"];var debug_table_viiiif=["0","__ZN4ides13docextraction7db_scan12region_queryERKNSt3__26vectorINS0_12line_segmentENS2_9allocatorIS4_EEEERKS4_f"];var debug_table_viiiifiifiiiiiii=["0","__ZN2cv12cpu_baselineL12callGemmImplIfEEvPKT_mS4_mS2_S4_mS2_PS2_miiiii"];var debug_table_viiiii=["0","__ZN2cvL12transpose_8uEPKhmPhmNS_5Size_IiEE","__ZN2cvL13transpose_16uEPKhmPhmNS_5Size_IiEE","__ZN2cvL14transpose_8uC3EPKhmPhmNS_5Size_IiEE","__ZN2cvL13transpose_32sEPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_16uC3EPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_32sC2EPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_32sC3EPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_32sC4EPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_32sC6EPKhmPhmNS_5Size_IiEE","__ZN2cvL15transpose_32sC8EPKhmPhmNS_5Size_IiEE","__ZNK2cv5MatOp3roiERKNS_7MatExprERKNS_5RangeES6_RS1_","__ZN2cv12FilterEngine5applyERKNS_3MatERS1_RKNS_5Size_IiEERKNS_6Point_IiEE","__ZN2cv12cpu_baseline9RowFilterIddNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIfdNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIffNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIsdNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIsfNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterItdNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterItfNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIhdNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIhfNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIhiNS0_8RowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline18SymmRowSmallFilterIffNS0_17SymmRowSmallNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIffNS0_17SymmRowSmallNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline18SymmRowSmallFilterIhiNS0_17SymmRowSmallNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline9RowFilterIhiNS0_17SymmRowSmallNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIhEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpItEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIsEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIfEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MinOpIdEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIhEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpItEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIsEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIfEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv12cpu_baseline12_GLOBAL__N_114MorphRowFilterINS1_5MaxOpIdEENS1_13MorphRowNoVecEEclEPKhPhii","__ZN2cv16ReplacementDFT2D5applyEPKhmPhm","__ZN2cv10OcvDftImpl5applyEPKhmPhm","__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib","__ZN2cv5errorEiRKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcSA_i","__ZN2cv7setSizeERNS_3MatEiPKiPKmb","__ZN2cv3ocl6KernelC2EPKcRKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEPSD_","__ZN2cv3ocl7Context4Impl7getProgERKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEERSC_","__ZN2cv7setSizeERNS_4UMatEiPKiPKmb","__ZNK2cv12_OutputArray6createENS_5Size_IiEEiibNS0_9DepthMaskE","__ZN2cv19getContinuousSize2DERNS_3MatES1_S1_i","__ZN2cv3SVD9backSubstERKNS_11_InputArrayES3_S3_S3_RKNS_12_OutputArrayE","__ZN2cv3ocl7Context7getProgERKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERSB_","__ZN2cv12cpu_baselineL12scaleAdd_32fEPKfS2_PfiS3_","__ZN2cv12cpu_baselineL12scaleAdd_64fEPKdS2_PdiS3_","_png_get_tRNS","__ZN2cv3ocl6Kernel6createEPKcRKNS0_13ProgramSourceERKNSt3__212basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEPSD_","__ZN2cv12morphologyExERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE","__ZN2cv12findContoursERKNS_11_InputArrayERKNS_12_OutputArrayES5_iiNS_6Point_IiEE","__ZN4ides13docextraction9extractor9get_quadsERKN2cv3MatERNSt3__26vectorINS0_4quadENS6_9allocatorIS8_EEEERNS2_5Size_IiEERKNS7_INS6_10unique_ptrINS0_10ref_regionENS6_14default_deleteISH_EEEENS9_ISK_EEEE","__ZN4ides13docextraction9extractor14get_best_quadsERKNSt3__26vectorINS0_4quadENS2_9allocatorIS4_EEEERKN2cv5Size_IiEERKNS3_INS2_10unique_ptrINS0_10ref_regionENS2_14default_deleteISG_EEEENS5_ISJ_EEEEm","_sep_downsample","_grayscale_convert","_rgb_gray_convert","_null_convert","_rgb_rgb_convert","_rgb_ycc_convert","_cmyk_ycck_convert","_grayscale_convert_3565","_rgb_gray_convert_3566","_ycc_rgb_convert","_gray_rgb_convert","_null_convert_3568","_rgb_rgb_convert_3569","_ycc_rgb565_convert","_gray_rgb565_convert","_rgb_rgb565_convert","_ycc_rgb565D_convert","_gray_rgb565D_convert","_rgb_rgb565D_convert","_ycck_cmyk_convert","_jpeg_idct_1x1","_jpeg_idct_2x2","_jpeg_idct_3x3","_jpeg_idct_4x4","_jpeg_idct_5x5","_jpeg_idct_6x6","_jpeg_idct_7x7","_jpeg_idct_islow","_jpeg_idct_ifast","_jpeg_idct_float","_jpeg_idct_9x9","_jpeg_idct_10x10","_jpeg_idct_11x11","_jpeg_idct_12x12","_jpeg_idct_13x13","_jpeg_idct_14x14","_jpeg_idct_15x15","_jpeg_idct_16x16","_HorizontalFilter_C","_VerticalFilter_C","_GradientFilter_C","_WebPYuv444ToRgba_C","_WebPYuv444ToBgra_C","_WebPYuv444ToRgb_C","_WebPYuv444ToBgr_C","_WebPYuv444ToArgb_C","_WebPYuv444ToRgba4444_C","_WebPYuv444ToRgb565_C","_YuvToRgbRow","_YuvToRgbaRow","_YuvToBgrRow","_YuvToBgraRow","_YuvToArgbRow","_YuvToRgba4444Row","_YuvToRgb565Row","__ZN2cvL16getScharrKernelsERKNS_12_OutputArrayES2_iibi","__ZN2cv11sepFilter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_S2_NS_6Point_IiEEdi","__ZN2cv10cvarrToMatEPKvbbiPNS_10AutoBufferIdLm136EEE","__ZN2cv12cpu_baseline19getMorphologyFilterEiiRKNS_3MatENS_6Point_IiEE","__ZN2cv12cpu_baseline22getMorphologyRowFilterEiiii","__ZN2cv12cpu_baseline25getMorphologyColumnFilterEiiii","__ZN2cv19getMorphologyFilterEiiRKNS_11_InputArrayENS_6Point_IiEE","0","0","0","0","0","0","0"];var debug_table_viiiiid=["0","__ZN2cv5SobelERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiddi"];var debug_table_viiiiii=["0","__ZN2cvL13mixChannels8uEPPKhPKiPPhS4_ii","__ZN2cvL14mixChannels16uEPPKtPKiPPtS4_ii","__ZN2cvL14mixChannels32sEPPKiS1_PPiS1_ii","__ZN2cvL14mixChannels64sEPPKxPKiPPxS4_ii","__ZN2cvL15resizeAreaFast_IhiNS_17ResizeAreaFastVecIhNS_19ResizeAreaFastNoVecIhhEEEEEEvRKNS_3MatERS5_PKiSA_ii","__ZN2cvL15resizeAreaFast_ItfNS_17ResizeAreaFastVecItNS_19ResizeAreaFastNoVecIttEEEEEEvRKNS_3MatERS5_PKiSA_ii","__ZN2cvL15resizeAreaFast_IsfNS_17ResizeAreaFastVecIsNS_19ResizeAreaFastNoVecIssEEEEEEvRKNS_3MatERS5_PKiSA_ii","__ZN2cvL15resizeAreaFast_IffNS_19ResizeAreaFastNoVecIffEEEEvRKNS_3MatERS3_PKiS8_ii","__ZN2cvL15resizeAreaFast_IddNS_19ResizeAreaFastNoVecIddEEEEvRKNS_3MatERS3_PKiS8_ii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIddEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdsEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfsEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdtEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIftEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIdhEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIfhEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIffEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12ColumnFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline16SymmColumnFilterINS0_4CastIisEENS0_20SymmColumnSmallNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline21SymmColumnSmallFilterINS0_13FixedPtCastExIihEENS0_11ColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIhEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpItEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIsEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIfEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MinOpIdEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIhEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpItEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIsEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIfEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZN2cv12cpu_baseline12_GLOBAL__N_117MorphColumnFilterINS1_5MaxOpIdEENS1_16MorphColumnNoVecEEclEPPKhPhiii","__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE","__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE","__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib","__ZNK2cv12_OutputArray6createEiiiibNS0_9DepthMaskE","__ZN2cv3ocl13ProgramSource4ImplC2ENS2_4KINDERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_PKhmSC_","__ZN2cv9ExceptionC2EiRKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_i","__ZN2cv3MatC2EiPKiiPvPKm","__ZN2cvL9binary_opERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_PKPFvPKhmS7_mPhmiiPvEbi","__ZNK2cv12_OutputArray6createEiPKiiibNS0_9DepthMaskE","__ZN2cv3MatC2EiiiPvm","__ZN2cv11mixChannelsEPKNS_3MatEmPS0_mPKim","_png_get_IHDR","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi0ELi0ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi0ELi1ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi1ELi0ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi0ELi0ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi0ELi1ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi1ELi0ELi3EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi0ELi0ELi4EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi0ELi1ELi4EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi0ELi1ELi0ELi4EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi0ELi0ELi4EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi0ELi1ELi4EEEvPhmPKhmii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV422toRGBILi2ELi1ELi0ELi4EEEvPhmPKhmii","__ZN2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEC2ERKNS_3MatERS4_iiRKNS_5Size_IiEE","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEEC2ERKNS_3MatERS4_RKNS_5Size_IiEEii","__ZN2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEC2ERKNS_3MatERS4_RKNS_5Size_IiEEii","__ZN2cv3MatC2ENS_5Size_IiEEiPvm","__ZN2cv12drawContoursERKNS_17_InputOutputArrayERKNS_11_InputArrayEiRKNS_7Scalar_IdEEiiS5_iNS_6Point_IiEE","_encode_mcu_AC_first_prepare","__ZN2cv13parallelCannyC2ERKNS_3MatERS1_RNSt3__25dequeIPhNS5_9allocatorIS7_EEEEiiib","__ZL19cvFindContours_ImplPvP12CvMemStoragePP5CvSeqiii7CvPointi","__ZN2cvL15getSobelKernelsERKNS_12_OutputArrayES2_iiibi","_cvDrawContours","__ZN2cv12cpu_baseline18getLinearRowFilterEiiRKNS_3MatEii","__ZN2cv18getLinearRowFilterEiiRKNS_11_InputArrayEii","__ZN2cv22createMorphologyFilterEiiRKNS_11_InputArrayENS_6Point_IiEEiiRKNS_7Scalar_IdEE","__ZN2cvL7morphOpEiRKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiid=["0","__ZN4ides13docextraction4quadC2ERKNS0_12line_segmentES4_S4_S4_bd"];var debug_table_viiiiiiddi=["0","__ZN2cv7MatExprC2EPKNS_5MatOpEiRKNS_3MatES6_S6_ddRKNS_7Scalar_IdEE"];var debug_table_viiiiiidi=["0","__ZN2cv12cpu_baseline21getLinearColumnFilterEiiRKNS_3MatEiidi","__ZN2cv21getLinearColumnFilterEiiRKNS_11_InputArrayEiidi","0"];var debug_table_viiiiiii=["0","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIhEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpItEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIsEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIfEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MinOpIdEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIhEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpItEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIsEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIfEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv12cpu_baseline12_GLOBAL__N_111MorphFilterINS1_5MaxOpIdEENS1_10MorphNoVecEEclEPPKhPhiiii","__ZN2cv3ocl9KernelArgC2EiPNS_4UMatEiiPKvm","__ZL16basic_conversionPvPK14channel_layoutiiS_ii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi0ELi0ELi3EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi0ELi1ELi3EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi2ELi0ELi3EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi2ELi1ELi3EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi0ELi0ELi4EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi0ELi1ELi4EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi2ELi0ELi4EEEvPhmiimPKhS6_","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_115cvtYUV420sp2RGBILi2ELi1ELi4EEEvPhmiimPKhS6_","_pre_process_context","_pre_process_data","_merged_2v_upsample","_merged_1v_upsample","_post_process_1pass","_post_process_prepass","_post_process_2pass","_sep_upsample","_forward_DCT","_forward_DCT_float","__ZN2cv27createSeparableLinearFilterEiiRKNS_11_InputArrayES2_NS_6Point_IiEEdiiRKNS_7Scalar_IdEE","__ZN2cv3hal5DFT2D6createEiiiiiii","__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE","__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE","__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE","__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiddi=["0","__ZN2cv12cpu_baselineL13GEMMStore_32fEPKfmPKdmPfmNS_5Size_IiEEddi","__ZN2cv12cpu_baselineL13GEMMStore_64fEPKdmS2_mPdmNS_5Size_IiEEddi","__ZN2cv12cpu_baselineL14GEMMStore_32fcEPKNS_7ComplexIfEEmPKNS1_IdEEmPS2_mNS_5Size_IiEEddi","__ZN2cv12cpu_baselineL14GEMMStore_64fcEPKNS_7ComplexIdEEmS4_mPS2_mNS_5Size_IiEEddi","0","0","0"];var debug_table_viiiiiiii=["0","__ZNK2cv12MatAllocator8downloadEPNS_8UMatDataEPviPKmS5_S5_S5_","__ZNK2cv12MatAllocator6uploadEPNS_8UMatDataEPKviPKmS6_S6_S6_","__ZNK2cv3ocl15OpenCLAllocator8downloadEPNS_8UMatDataEPviPKmS6_S6_S6_","__ZNK2cv3ocl15OpenCLAllocator6uploadEPNS_8UMatDataEPKviPKmS7_S7_S7_","__ZN2cv12cpu_baselineL5cvt8uEPKhmPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL7cvt8s8uEPKamPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16u8uEPKtmPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16s8uEPKsmPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt32s8uEPKimPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt32f8uEPKfmPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt64f8uEPKdmPhmS3_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16f8uEPKNS_9float16_tEmPhmS4_mNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL7cvt8u8sEPKhmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16u8sEPKtmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16s8sEPKsmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt32s8sEPKimPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt32f8sEPKfmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt64f8sEPKdmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt16f8sEPKNS_9float16_tEmPhmPamNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u16uEPKhmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s16uEPKamPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL6cvt16uEPKtmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16s16uEPKsmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32s16uEPKimPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32f16uEPKfmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt64f16uEPKdmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16f16uEPKNS_9float16_tEmPhmPtmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u16sEPKhmPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s16sEPKamPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16u16sEPKtmPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32s16sEPKimPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32f16sEPKfmPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt64f16sEPKdmPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16f16sEPKNS_9float16_tEmPhmPsmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u32sEPKhmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s32sEPKamPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16u32sEPKtmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16s32sEPKsmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL6cvt32sEPKimPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32f32sEPKfmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt64f32sEPKdmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16f32sEPKNS_9float16_tEmPhmPimNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u32fEPKhmPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s32fEPKamPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16u32fEPKtmPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16s32fEPKsmPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32s32fEPKimPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt64f32fEPKdmPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16f32fEPKNS_9float16_tEmPhmPfmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u64fEPKhmPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s64fEPKamPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16u64fEPKtmPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16s64fEPKsmPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32s64fEPKimPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32f64fEPKfmPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL6cvt64sEPKxmPhmPxmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16f64fEPKNS_9float16_tEmPhmPdmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8u16fEPKhmPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL8cvt8s16fEPKamPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16u16fEPKtmPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt16s16fEPKsmPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32s16fEPKimPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt32f16fEPKfmPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL9cvt64f16fEPKdmPhmPNS_9float16_tEmNS_5Size_IiEEPv","__ZN2cv12cpu_baselineL10cvtScale8uEPKhmS2_mPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL12cvtScale8s8uEPKamPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16u8uEPKtmPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16s8uEPKsmPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale32s8uEPKimPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale32f8uEPKfmPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale64f8uEPKdmPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16f8uEPKNS_9float16_tEmPKhmPhmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL12cvtScale8u8sEPKhmS2_mPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL10cvtScale8sEPKamPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16u8sEPKtmPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16s8sEPKsmPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale32s8sEPKimPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale32f8sEPKfmPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale64f8sEPKdmPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale16f8sEPKNS_9float16_tEmPKhmPamNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8u16uEPKhmS2_mPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8s16uEPKamPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL11cvtScale16uEPKtmPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16s16uEPKsmPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32s16uEPKimPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32f16uEPKfmPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale64f16uEPKdmPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16f16uEPKNS_9float16_tEmPKhmPtmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8u16sEPKhmS2_mPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8s16sEPKamPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16u16sEPKtmPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL11cvtScale16sEPKsmPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32s16sEPKimPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32f16sEPKfmPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale64f16sEPKdmPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16f16sEPKNS_9float16_tEmPKhmPsmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8u32sEPKhmS2_mPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8s32sEPKamPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16u32sEPKtmPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16s32sEPKsmPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL11cvtScale32sEPKimPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32f32sEPKfmPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale64f32sEPKdmPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16f32sEPKNS_9float16_tEmPKhmPimNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8u32fEPKhmS2_mPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8s32fEPKamPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16u32fEPKtmPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16s32fEPKsmPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32s32fEPKimPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL11cvtScale32fEPKfmPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale64f32fEPKdmPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16f32fEPKNS_9float16_tEmPKhmPfmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8u64fEPKhmS2_mPdmNS_5Size_IiEES3_","__ZN2cv12cpu_baselineL13cvtScale8s64fEPKamPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL14cvtScale16u64fEPKtmPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL14cvtScale16s64fEPKsmPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL14cvtScale32s64fEPKimPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL14cvtScale32f64fEPKfmPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL11cvtScale64fEPKdmPKhmPdmNS_5Size_IiEES5_","__ZN2cv12cpu_baselineL14cvtScale16f64fEPKNS_9float16_tEmPKhmPdmNS_5Size_IiEES6_","__ZN2cv12cpu_baselineL13cvtScale8u16fEPKhmS2_mPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL13cvtScale8s16fEPKamPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16u16fEPKtmPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale16s16fEPKsmPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32s16fEPKimPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale32f16fEPKfmPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL14cvtScale64f16fEPKdmPKhmPNS_9float16_tEmNS_5Size_IiEEPd","__ZN2cv12cpu_baselineL11cvtScale16fEPKNS_9float16_tEmPKhmPS1_mNS_5Size_IiEEPd","__ZN2cvL10copyMask8uEPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL11copyMask16uEPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL12copyMask8uC3EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL11copyMask32sEPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask16uC3EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask32sC2EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask32sC3EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask32sC4EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask32sC6EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL13copyMask32sC8EPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cvL15copyMaskGenericEPKhmS1_mPhmNS_5Size_IiEEPv","__ZN2cv14JacobiSVDImpl_IfEEvPT_mS2_S2_miiidS1_","__ZN2cv14JacobiSVDImpl_IdEEvPT_mS2_S2_miiidS1_","__ZN2cv3hal12cpu_baseline12cvtGraytoBGREPKhmPhmiiii","__ZN2cv18Bayer2Gray_InvokerIhNS_26SIMDBayerStubInterpolator_IhEEEC2ERKNS_3MatERS4_ibRKNS_5Size_IiEEii","__ZN2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEC2ERKNS_3MatERS4_ibRKNS_5Size_IiEEii","__ZN2cv14copyMakeBorderERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiiRKNS_7Scalar_IdEE","__ZNSt3__25dequeIPhNS_9allocatorIS1_EEE6insertINS_16__deque_iteratorIS1_PS1_RS1_PS7_lLl0EEEEESA_NS6_IS1_PKS1_RSB_PKSC_lLl0EEET_SH_PNS_9enable_ifIXsr27__is_bidirectional_iteratorISH_EE5valueEvE4typeE","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiii=["0","__ZN2cv3hal5max8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5max8sEPKamS2_mPamiiPv","__ZN2cv3hal6max16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6max16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6max32sEPKimS2_mPimiiPv","__ZN2cv3hal6max32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6max64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5min8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5min8sEPKamS2_mPamiiPv","__ZN2cv3hal6min16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6min16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6min32sEPKimS2_mPimiiPv","__ZN2cv3hal6min32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6min64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5add8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5add8sEPKamS2_mPamiiPv","__ZN2cv3hal6add16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6add16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6add32sEPKimS2_mPimiiPv","__ZN2cv3hal6add32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6add64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5sub8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5sub8sEPKamS2_mPamiiPv","__ZN2cv3hal6sub16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6sub16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6sub32sEPKimS2_mPimiiPv","__ZN2cv3hal6sub32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6sub64fEPKdmS2_mPdmiiPv","__ZN2cv3hal9absdiff8uEPKhmS2_mPhmiiPv","__ZN2cv3hal9absdiff8sEPKamS2_mPamiiPv","__ZN2cv3hal10absdiff16uEPKtmS2_mPtmiiPv","__ZN2cv3hal10absdiff16sEPKsmS2_mPsmiiPv","__ZN2cv3hal10absdiff32sEPKimS2_mPimiiPv","__ZN2cv3hal10absdiff32fEPKfmS2_mPfmiiPv","__ZN2cv3hal10absdiff64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5mul8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5mul8sEPKamS2_mPamiiPv","__ZN2cv3hal6mul16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6mul16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6mul32sEPKimS2_mPimiiPv","__ZN2cv3hal6mul32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6mul64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5div8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5div8sEPKamS2_mPamiiPv","__ZN2cv3hal6div16uEPKtmS2_mPtmiiPv","__ZN2cv3hal6div16sEPKsmS2_mPsmiiPv","__ZN2cv3hal6div32sEPKimS2_mPimiiPv","__ZN2cv3hal6div32fEPKfmS2_mPfmiiPv","__ZN2cv3hal6div64fEPKdmS2_mPdmiiPv","__ZN2cv3hal7recip8uEPKhmS2_mPhmiiPv","__ZN2cv3hal7recip8sEPKamS2_mPamiiPv","__ZN2cv3hal8recip16uEPKtmS2_mPtmiiPv","__ZN2cv3hal8recip16sEPKsmS2_mPsmiiPv","__ZN2cv3hal8recip32sEPKimS2_mPimiiPv","__ZN2cv3hal8recip32fEPKfmS2_mPfmiiPv","__ZN2cv3hal8recip64fEPKdmS2_mPdmiiPv","__ZN2cv3hal13addWeighted8uEPKhmS2_mPhmiiPv","__ZN2cv3hal13addWeighted8sEPKamS2_mPamiiPv","__ZN2cv3hal14addWeighted16uEPKtmS2_mPtmiiPv","__ZN2cv3hal14addWeighted16sEPKsmS2_mPsmiiPv","__ZN2cv3hal14addWeighted32sEPKimS2_mPimiiPv","__ZN2cv3hal14addWeighted32fEPKfmS2_mPfmiiPv","__ZN2cv3hal14addWeighted64fEPKdmS2_mPdmiiPv","__ZN2cv3hal5cmp8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5cmp8sEPKamS2_mPhmiiPv","__ZN2cv3hal6cmp16uEPKtmS2_mPhmiiPv","__ZN2cv3hal6cmp16sEPKsmS2_mPhmiiPv","__ZN2cv3hal6cmp32sEPKimS2_mPhmiiPv","__ZN2cv3hal6cmp32fEPKfmS2_mPhmiiPv","__ZN2cv3hal6cmp64fEPKdmS2_mPhmiiPv","__ZN2cvL14resizeGeneric_INS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEEvRKNS_3MatERS9_PKiPKvSE_SG_iii","__ZN2cvL14resizeGeneric_INS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_12VResizeNoVecEEEEEvRKNS_3MatERS9_PKiPKvSE_SG_iii","__ZN2cvL14resizeGeneric_INS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_12VResizeNoVecEEEEEvRKNS_3MatERS9_PKiPKvSE_SG_iii","__ZN2cvL14resizeGeneric_INS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_12VResizeNoVecEEEEEvRKNS_3MatERS9_PKiPKvSE_SG_iii","__ZN2cvL14resizeGeneric_INS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEEvRKNS_3MatERS9_PKiPKvSE_SG_iii","__ZN2cv3hal5and8uEPKhmS2_mPhmiiPv","__ZN2cv3hal4or8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5xor8uEPKhmS2_mPhmiiPv","__ZN2cv3hal5not8uEPKhmS2_mPhmiiPv","__ZN2cv12cpu_baselineL16GEMMBlockMul_32fEPKfmS2_mPdmNS_5Size_IiEES5_i","__ZN2cv12cpu_baselineL16GEMMBlockMul_64fEPKdmS2_mPdmNS_5Size_IiEES5_i","__ZN2cv12cpu_baselineL17GEMMBlockMul_32fcEPKNS_7ComplexIfEEmS4_mPNS1_IdEEmNS_5Size_IiEES8_i","__ZN2cv12cpu_baselineL17GEMMBlockMul_64fcEPKNS_7ComplexIdEEmS4_mPS2_mNS_5Size_IiEES7_i","_png_set_IHDR","__ZN2cv3hal11cvtBGRtoXYZEPKhmPhmiiiib","__ZN2cv3hal11cvtXYZtoBGREPKhmPhmiiiib","__ZN2cv3hal12cpu_baseline12cvtBGRtoGrayEPKhmPhmiiiib","__ZN2cv3hal12cpu_baseline21cvtThreePlaneYUVtoBGREPKhmPhmiiibi","_UpsampleRgbaLinePair_C","_UpsampleBgraLinePair_C","_UpsampleRgbLinePair_C","_UpsampleBgrLinePair_C","_UpsampleArgbLinePair_C","_UpsampleRgba4444LinePair_C","_UpsampleRgb565LinePair_C","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiiidd=["0","__ZN2cv3hal6resizeEiPKhmiiPhmiiddi"];var debug_table_viiiiiiiiii=["0","__ZNK2cv12MatAllocator4copyEPNS_8UMatDataES2_iPKmS4_S4_S4_S4_b","__ZNK2cv3ocl15OpenCLAllocator4copyEPNS_8UMatDataES3_iPKmS5_S5_S5_S5_b","__ZN2cv3hal12cpu_baseline11cvtBGRtoBGREPKhmPhmiiiiib","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV420p2RGBILi0ELi3EEEvPhmiimPKhS6_S6_ii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV420p2RGBILi2ELi3EEEvPhmiimPKhS6_S6_ii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV420p2RGBILi0ELi4EEEvPhmiimPKhS6_S6_ii","__ZN2cv3hal12cpu_baseline12_GLOBAL__N_114cvtYUV420p2RGBILi2ELi4EEEvPhmiimPKhS6_S6_ii","__ZN2cv3hal12cpu_baseline11cvtBGRtoYUVEPKhmPhmiiiibb","__ZN2cv3hal12cpu_baseline11cvtYUVtoBGREPKhmPhmiiiibb","__ZN2cv3hal12cpu_baseline19cvtOnePlaneYUVtoBGREPKhmPhmiiibii","__ZN2cv3hal12cpu_baseline19cvtTwoPlaneYUVtoBGREPKhS3_mPhmiiibi","__ZN2cv12FilterEngine4initERKNS_3PtrINS_10BaseFilterEEERKNS1_INS_13BaseRowFilterEEERKNS1_INS_16BaseColumnFilterEEEiiiiiRKNS_7Scalar_IdEE","__ZN2cv12FilterEngineC2ERKNS_3PtrINS_10BaseFilterEEERKNS1_INS_13BaseRowFilterEEERKNS1_INS_16BaseColumnFilterEEEiiiiiRKNS_7Scalar_IdEE","__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri","__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri","__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri","__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiiiiddi=["0","__ZN2cv12cpu_baselineL17GEMMSingleMul_32fEPKfmS2_mS2_mPfmNS_5Size_IiEES5_ddi","__ZN2cv12cpu_baselineL17GEMMSingleMul_64fEPKdmS2_mS2_mPdmNS_5Size_IiEES5_ddi","__ZN2cv12cpu_baselineL18GEMMSingleMul_32fcEPKNS_7ComplexIfEEmS4_mS4_mPS2_mNS_5Size_IiEES7_ddi","__ZN2cv12cpu_baselineL18GEMMSingleMul_64fcEPKNS_7ComplexIdEEmS4_mS4_mPS2_mNS_5Size_IiEES7_ddi","0","0","0"];var debug_table_viiiiiiiiiii=["0","__ZN2cv3hal12cpu_baseline11cvtBGRtoHSVEPKhmPhmiiiibbb","__ZN2cv3hal12cpu_baseline11cvtHSVtoBGREPKhmPhmiiiibbb","__ZN2cv3hal11cvtBGRtoLabEPKhmPhmiiiibbb","__ZN2cv3hal11cvtLabtoBGREPKhmPhmiiiibbb","0","0","0"];var debug_table_viiiiiiiiiiiiiii=["0","__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i","__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i","0"];var debug_table_viiiiiiiiiiiiiiiiiii=["0","__ZN2cv3hal11sepFilter2DEiiiPhmS1_miiiiiiS1_iS1_iiidi"];var debug_table_viiiiiiiiiiiiiiiiiiiiiiiii=["0","__ZN2cv3hal5morphEiiiPhmS1_miiiiiiiiiiiS1_miiiiiPKdib"];var debug_table_viijii=["0","__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj","__ZNSt3__213basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj","__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj","__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj","0","0","0"];function nullFunc_di(x){err("Invalid function pointer '"+x+"' called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: dii: "+debug_table_dii[x]+"  diii: "+debug_table_diii[x]+"  i: "+debug_table_i[x]+"  ii: "+debug_table_ii[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  vdii: "+debug_table_vdii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  v: "+debug_table_v[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  viiidi: "+debug_table_viiidi[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_dii(x){err("Invalid function pointer '"+x+"' called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: di: "+debug_table_di[x]+"  diii: "+debug_table_diii[x]+"  ii: "+debug_table_ii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  vdii: "+debug_table_vdii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  i: "+debug_table_i[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  vidii: "+debug_table_vidii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  v: "+debug_table_v[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viididii: "+debug_table_viididii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_diii(x){err("Invalid function pointer '"+x+"' called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: dii: "+debug_table_dii[x]+"  di: "+debug_table_di[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  i: "+debug_table_i[x]+"  iiiji: "+debug_table_iiiji[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viidd: "+debug_table_viidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viijii: "+debug_table_viijii[x]+"  v: "+debug_table_v[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_fii(x){err("Invalid function pointer '"+x+"' called with signature 'fii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  dii: "+debug_table_dii[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  i: "+debug_table_i[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  v: "+debug_table_v[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_i(x){err("Invalid function pointer '"+x+"' called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  iiii: "+debug_table_iiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_ii(x){err("Invalid function pointer '"+x+"' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: i: "+debug_table_i[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  iiii: "+debug_table_iiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  v: "+debug_table_v[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iid(x){err("Invalid function pointer '"+x+"' called with signature 'iid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiddd: "+debug_table_iiddd[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  viid: "+debug_table_viid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiii: "+debug_table_iiii[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  vdii: "+debug_table_vdii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  vidii: "+debug_table_vidii[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  v: "+debug_table_v[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiddd(x){err("Invalid function pointer '"+x+"' called with signature 'iiddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  viidd: "+debug_table_viidd[x]+"  viid: "+debug_table_viid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiii: "+debug_table_iiii[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  viiidd: "+debug_table_viiidd[x]+"  vdii: "+debug_table_vdii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  vidii: "+debug_table_vidii[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  v: "+debug_table_v[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iif(x){err("Invalid function pointer '"+x+"' called with signature 'iif'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iid: "+debug_table_iid[x]+"  iii: "+debug_table_iii[x]+"  viif: "+debug_table_viif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiii: "+debug_table_iiii[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  viid: "+debug_table_viid[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  v: "+debug_table_v[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iii(x){err("Invalid function pointer '"+x+"' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  vidii: "+debug_table_vidii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  v: "+debug_table_v[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  i: "+debug_table_i[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiid: "+debug_table_viiid[x]+"  viidi: "+debug_table_viidi[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  v: "+debug_table_v[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiddii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  dii: "+debug_table_dii[x]+"  iid: "+debug_table_iid[x]+"  viiid: "+debug_table_viiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  di: "+debug_table_di[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  viif: "+debug_table_viif[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  v: "+debug_table_v[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  v: "+debug_table_v[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiid(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  i: "+debug_table_i[x]+"  iid: "+debug_table_iid[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viiid: "+debug_table_viiid[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiid: "+debug_table_viiiid[x]+"  viid: "+debug_table_viid[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viidi: "+debug_table_viidi[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiif: "+debug_table_viiiif[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiidi(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iid: "+debug_table_iid[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  di: "+debug_table_di[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiid: "+debug_table_viiiid[x]+"  viid: "+debug_table_viid[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  vidii: "+debug_table_vidii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiif: "+debug_table_viiiif[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  v: "+debug_table_v[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiid(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iid: "+debug_table_iid[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viiid: "+debug_table_viiid[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viid: "+debug_table_viid[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viidi: "+debug_table_viidi[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  v: "+debug_table_v[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  vidii: "+debug_table_vidii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiij(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  jiji: "+debug_table_jiji[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  vi: "+debug_table_vi[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viijii: "+debug_table_viijii[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiijiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiijiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  ji: "+debug_table_ji[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiid: "+debug_table_viiid[x]+"  viidi: "+debug_table_viidi[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  v: "+debug_table_v[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiijiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiijiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  ii: "+debug_table_ii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  ji: "+debug_table_ji[x]+"  viiid: "+debug_table_viiid[x]+"  viidi: "+debug_table_viidi[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  v: "+debug_table_v[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiijiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiijiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  ii: "+debug_table_ii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  jiji: "+debug_table_jiji[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiid: "+debug_table_viiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  ji: "+debug_table_ji[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  v: "+debug_table_v[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiji(x){err("Invalid function pointer '"+x+"' called with signature 'iiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiijii: "+debug_table_iiijii[x]+"  i: "+debug_table_i[x]+"  iiii: "+debug_table_iiii[x]+"  ji: "+debug_table_ji[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiii: "+debug_table_viiii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viijii: "+debug_table_viijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiijii(x){err("Invalid function pointer '"+x+"' called with signature 'iiijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiji: "+debug_table_iiiji[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  ji: "+debug_table_ji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viijii: "+debug_table_viijii[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  jiji: "+debug_table_jiji[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  vdii: "+debug_table_vdii[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iijiii(x){err("Invalid function pointer '"+x+"' called with signature 'iijiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  i: "+debug_table_i[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iii: "+debug_table_iii[x]+"  ji: "+debug_table_ji[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viijii: "+debug_table_viijii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vidii: "+debug_table_vidii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iijiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iijiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iijiii: "+debug_table_iijiii[x]+"  ii: "+debug_table_ii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  i: "+debug_table_i[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  jiji: "+debug_table_jiji[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viijii: "+debug_table_viijii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viididii: "+debug_table_viididii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  v: "+debug_table_v[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iijiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iijiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  ii: "+debug_table_ii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  jiji: "+debug_table_jiji[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  ji: "+debug_table_ji[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viiidd: "+debug_table_viiidd[x]+"  viidd: "+debug_table_viidd[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viididii: "+debug_table_viididii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iijiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iijiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  ii: "+debug_table_ii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  jiji: "+debug_table_jiji[x]+"  diii: "+debug_table_diii[x]+"  viii: "+debug_table_viii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  ji: "+debug_table_ji[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  vidii: "+debug_table_vidii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  v: "+debug_table_v[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_ji(x){err("Invalid function pointer '"+x+"' called with signature 'ji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jiji: "+debug_table_jiji[x]+"  i: "+debug_table_i[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  vi: "+debug_table_vi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  v: "+debug_table_v[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_jiji(x){err("Invalid function pointer '"+x+"' called with signature 'jiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ji: "+debug_table_ji[x]+"  ii: "+debug_table_ii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  di: "+debug_table_di[x]+"  vi: "+debug_table_vi[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  i: "+debug_table_i[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viijii: "+debug_table_viijii[x]+"  v: "+debug_table_v[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_v(x){err("Invalid function pointer '"+x+"' called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  vii: "+debug_table_vii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  ji: "+debug_table_ji[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_vdii(x){err("Invalid function pointer '"+x+"' called with signature 'vdii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: v: "+debug_table_v[x]+"  vii: "+debug_table_vii[x]+"  dii: "+debug_table_dii[x]+"  vi: "+debug_table_vi[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viii: "+debug_table_viii[x]+"  diii: "+debug_table_diii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  vidii: "+debug_table_vidii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  ji: "+debug_table_ji[x]+"  iiii: "+debug_table_iiii[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  i: "+debug_table_i[x]+"  jiji: "+debug_table_jiji[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viijii: "+debug_table_viijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_vi(x){err("Invalid function pointer '"+x+"' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: v: "+debug_table_v[x]+"  vii: "+debug_table_vii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  ji: "+debug_table_ji[x]+"  vdii: "+debug_table_vdii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_vididdii(x){err("Invalid function pointer '"+x+"' called with signature 'vididdii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  vidii: "+debug_table_vidii[x]+"  viidd: "+debug_table_viidd[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  vii: "+debug_table_vii[x]+"  dii: "+debug_table_dii[x]+"  viiid: "+debug_table_viiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiidd: "+debug_table_viiidd[x]+"  diii: "+debug_table_diii[x]+"  viif: "+debug_table_viif[x]+"  viijii: "+debug_table_viijii[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iid: "+debug_table_iid[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  viididii: "+debug_table_viididii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viiidii: "+debug_table_viiidii[x]+"  ji: "+debug_table_ji[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  i: "+debug_table_i[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_vidii(x){err("Invalid function pointer '"+x+"' called with signature 'vidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  vii: "+debug_table_vii[x]+"  dii: "+debug_table_dii[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  diii: "+debug_table_diii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iid: "+debug_table_iid[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iii: "+debug_table_iii[x]+"  viidd: "+debug_table_viidd[x]+"  ji: "+debug_table_ji[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viffiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viffiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  iiii: "+debug_table_iiii[x]+"  vii: "+debug_table_vii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viif: "+debug_table_viif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiid: "+debug_table_viiid[x]+"  viid: "+debug_table_viid[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  ii: "+debug_table_ii[x]+"  iif: "+debug_table_iif[x]+"  dii: "+debug_table_dii[x]+"  iid: "+debug_table_iid[x]+"  viidd: "+debug_table_viidd[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  i: "+debug_table_i[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_vii(x){err("Invalid function pointer '"+x+"' called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  v: "+debug_table_v[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  vdii: "+debug_table_vdii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  i: "+debug_table_i[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  vidii: "+debug_table_vidii[x]+"  jiji: "+debug_table_jiji[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viid(x){err("Invalid function pointer '"+x+"' called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  v: "+debug_table_v[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  viiid: "+debug_table_viiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  iif: "+debug_table_iif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viiii: "+debug_table_viiii[x]+"  i: "+debug_table_i[x]+"  jiji: "+debug_table_jiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  vidii: "+debug_table_vidii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viidd(x){err("Invalid function pointer '"+x+"' called with signature 'viidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viid: "+debug_table_viid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  viif: "+debug_table_viif[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidd: "+debug_table_viiidd[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  iif: "+debug_table_iif[x]+"  viiii: "+debug_table_viiii[x]+"  vidii: "+debug_table_vidii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  i: "+debug_table_i[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viididii: "+debug_table_viididii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiddidd(x){err("Invalid function pointer '"+x+"' called with signature 'viiddidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiddd: "+debug_table_iiddd[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  viiii: "+debug_table_viiii[x]+"  viif: "+debug_table_viif[x]+"  vidii: "+debug_table_vidii[x]+"  viiidi: "+debug_table_viiidi[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiid: "+debug_table_viiiid[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiiif: "+debug_table_viiiif[x]+"  diii: "+debug_table_diii[x]+"  jiji: "+debug_table_jiji[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  ji: "+debug_table_ji[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viidi(x){err("Invalid function pointer '"+x+"' called with signature 'viidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viid: "+debug_table_viid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viididii: "+debug_table_viididii[x]+"  viii: "+debug_table_viii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viidd: "+debug_table_viidd[x]+"  viiii: "+debug_table_viiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiid: "+debug_table_viiid[x]+"  viif: "+debug_table_viif[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidi: "+debug_table_viiidi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiifi: "+debug_table_viiifi[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  i: "+debug_table_i[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viididii(x){err("Invalid function pointer '"+x+"' called with signature 'viididii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viid: "+debug_table_viid[x]+"  viidi: "+debug_table_viidi[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  viidd: "+debug_table_viidd[x]+"  viiii: "+debug_table_viiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiid: "+debug_table_viiid[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  dii: "+debug_table_dii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viif: "+debug_table_viif[x]+"  iiddd: "+debug_table_iiddd[x]+"  viiiid: "+debug_table_viiiid[x]+"  diii: "+debug_table_diii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iijiii: "+debug_table_iijiii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  ji: "+debug_table_ji[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  i: "+debug_table_i[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viif(x){err("Invalid function pointer '"+x+"' called with signature 'viif'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iif: "+debug_table_iif[x]+"  ii: "+debug_table_ii[x]+"  viid: "+debug_table_viid[x]+"  viii: "+debug_table_viii[x]+"  vdii: "+debug_table_vdii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  viidd: "+debug_table_viidd[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  i: "+debug_table_i[x]+"  jiji: "+debug_table_jiji[x]+"  vidii: "+debug_table_vidii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiddd: "+debug_table_iiddd[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viii(x){err("Invalid function pointer '"+x+"' called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiid: "+debug_table_viiid[x]+"  viiii: "+debug_table_viiii[x]+"  v: "+debug_table_v[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  jiji: "+debug_table_jiji[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidd: "+debug_table_viidd[x]+"  i: "+debug_table_i[x]+"  iiiji: "+debug_table_iiiji[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiid(x){err("Invalid function pointer '"+x+"' called with signature 'viiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  v: "+debug_table_v[x]+"  viid: "+debug_table_viid[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  viidd: "+debug_table_viidd[x]+"  viiii: "+debug_table_viiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiiid: "+debug_table_viiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiji: "+debug_table_iiiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  jiji: "+debug_table_jiji[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viijii: "+debug_table_viijii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  i: "+debug_table_i[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiidd(x){err("Invalid function pointer '"+x+"' called with signature 'viiidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiid: "+debug_table_viiid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  v: "+debug_table_v[x]+"  viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  viiii: "+debug_table_viiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiddd: "+debug_table_iiddd[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viijii: "+debug_table_viijii[x]+"  jiji: "+debug_table_jiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iijiii: "+debug_table_iijiii[x]+"  i: "+debug_table_i[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiddi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiid: "+debug_table_viiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiidi: "+debug_table_viiidi[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiji: "+debug_table_iiiji[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viijii: "+debug_table_viijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  ji: "+debug_table_ji[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiidi(x){err("Invalid function pointer '"+x+"' called with signature 'viiidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiid: "+debug_table_viiid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiidii: "+debug_table_viiidii[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viidd: "+debug_table_viidd[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  jiji: "+debug_table_jiji[x]+"  ji: "+debug_table_ji[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiii: "+debug_table_iijiii[x]+"  i: "+debug_table_i[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiidii(x){err("Invalid function pointer '"+x+"' called with signature 'viiidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiid: "+debug_table_viiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viiii: "+debug_table_viiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiiii: "+debug_table_viiiii[x]+"  dii: "+debug_table_dii[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  viif: "+debug_table_viif[x]+"  iiiji: "+debug_table_iiiji[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiifi: "+debug_table_viiifi[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  ji: "+debug_table_ji[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viididii: "+debug_table_viididii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiifi(x){err("Invalid function pointer '"+x+"' called with signature 'viiifi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viif: "+debug_table_viif[x]+"  viiii: "+debug_table_viiii[x]+"  iii: "+debug_table_iii[x]+"  iif: "+debug_table_iif[x]+"  ii: "+debug_table_ii[x]+"  viiid: "+debug_table_viiid[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  jiji: "+debug_table_jiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  i: "+debug_table_i[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  v: "+debug_table_v[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viidd: "+debug_table_viidd[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  i: "+debug_table_i[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiid(x){err("Invalid function pointer '"+x+"' called with signature 'viiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  v: "+debug_table_v[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viiid: "+debug_table_viiid[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiif: "+debug_table_viiiif[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  jiji: "+debug_table_jiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iijiii: "+debug_table_iijiii[x]+"  i: "+debug_table_i[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiidid(x){err("Invalid function pointer '"+x+"' called with signature 'viiiidid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  vidii: "+debug_table_vidii[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  iiijii: "+debug_table_iiijii[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  ji: "+debug_table_ji[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiidiidiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiidiidiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiid: "+debug_table_viiiid[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  iiii: "+debug_table_iiii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  dii: "+debug_table_dii[x]+"  iii: "+debug_table_iii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  iid: "+debug_table_iid[x]+"  iiddd: "+debug_table_iiddd[x]+"  viif: "+debug_table_viif[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  fii: "+debug_table_fii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iif: "+debug_table_iif[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  ji: "+debug_table_ji[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiif(x){err("Invalid function pointer '"+x+"' called with signature 'viiiif'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  viif: "+debug_table_viif[x]+"  iii: "+debug_table_iii[x]+"  iif: "+debug_table_iif[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viijii: "+debug_table_viijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiijii: "+debug_table_iiijii[x]+"  jiji: "+debug_table_jiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiidii: "+debug_table_viiidii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  i: "+debug_table_i[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiifiifiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiifiifiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiif: "+debug_table_viiiif[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  viif: "+debug_table_viif[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiidi: "+debug_table_viiidi[x]+"  viijii: "+debug_table_viijii[x]+"  iif: "+debug_table_iif[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiijii: "+debug_table_iiijii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  dii: "+debug_table_dii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iid: "+debug_table_iid[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  i: "+debug_table_i[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiid(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiid: "+debug_table_viiid[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  ii: "+debug_table_ii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiddd: "+debug_table_iiddd[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  i: "+debug_table_i[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  ii: "+debug_table_ii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiid(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiid: "+debug_table_viiid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  ii: "+debug_table_ii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  i: "+debug_table_i[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiddi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  vidii: "+debug_table_vidii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iif: "+debug_table_iif[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  vididdii: "+debug_table_vididdii[x]+"  ji: "+debug_table_ji[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  i: "+debug_table_i[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiidi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  vidii: "+debug_table_vidii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidd: "+debug_table_viidd[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidd: "+debug_table_viiidd[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  ji: "+debug_table_ji[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  ii: "+debug_table_ii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiddi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iid: "+debug_table_iid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  vidii: "+debug_table_vidii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iif: "+debug_table_iif[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  ji: "+debug_table_ji[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  ii: "+debug_table_ii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  ii: "+debug_table_ii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiidd(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiid: "+debug_table_viiid[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iii: "+debug_table_iii[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iid: "+debug_table_iid[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iif: "+debug_table_iif[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  jiji: "+debug_table_jiji[x]+"  ii: "+debug_table_ii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  i: "+debug_table_i[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  ii: "+debug_table_ii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiddi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  viidd: "+debug_table_viidd[x]+"  iiii: "+debug_table_iiii[x]+"  viid: "+debug_table_viid[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiiid: "+debug_table_viiiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iii: "+debug_table_iii[x]+"  iid: "+debug_table_iid[x]+"  vidii: "+debug_table_vidii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viif: "+debug_table_viif[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iif: "+debug_table_iif[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  di: "+debug_table_di[x]+"  ii: "+debug_table_ii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iijiii: "+debug_table_iijiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  ji: "+debug_table_ji[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  jiji: "+debug_table_jiji[x]+"  ii: "+debug_table_ii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  iii: "+debug_table_iii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viidd: "+debug_table_viidd[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  jiji: "+debug_table_jiji[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iijiii: "+debug_table_iijiii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  i: "+debug_table_i[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viii: "+debug_table_viii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iii: "+debug_table_iii[x]+"  viidd: "+debug_table_viidd[x]+"  viiidd: "+debug_table_viiidd[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  jiji: "+debug_table_jiji[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iijiii: "+debug_table_iijiii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  i: "+debug_table_i[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiiiiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiiiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viii: "+debug_table_viii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  viijii: "+debug_table_viijii[x]+"  vidii: "+debug_table_vidii[x]+"  viidi: "+debug_table_viidi[x]+"  viiid: "+debug_table_viiid[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiijii: "+debug_table_iiijii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  viiidd: "+debug_table_viiidd[x]+"  viidd: "+debug_table_viidd[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iijiii: "+debug_table_iijiii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  iii: "+debug_table_iii[x]+"  iiddd: "+debug_table_iiddd[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viididii: "+debug_table_viididii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  di: "+debug_table_di[x]+"  ji: "+debug_table_ji[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  i: "+debug_table_i[x]+"  ");abort(x)}function nullFunc_viijii(x){err("Invalid function pointer '"+x+"' called with signature 'viijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  ji: "+debug_table_ji[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidi: "+debug_table_viidi[x]+"  iiiii: "+debug_table_iiiii[x]+"  vidii: "+debug_table_vidii[x]+"  viiid: "+debug_table_viiid[x]+"  viid: "+debug_table_viid[x]+"  viif: "+debug_table_viif[x]+"  iiijii: "+debug_table_iiijii[x]+"  viiiii: "+debug_table_viiiii[x]+"  diii: "+debug_table_diii[x]+"  vdii: "+debug_table_vdii[x]+"  viiidi: "+debug_table_viiidi[x]+"  viiifi: "+debug_table_viiifi[x]+"  viiiid: "+debug_table_viiiid[x]+"  viiiif: "+debug_table_viiiif[x]+"  jiji: "+debug_table_jiji[x]+"  iijiii: "+debug_table_iijiii[x]+"  dii: "+debug_table_dii[x]+"  fii: "+debug_table_fii[x]+"  iid: "+debug_table_iid[x]+"  iif: "+debug_table_iif[x]+"  viidd: "+debug_table_viidd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiid: "+debug_table_iiiiid[x]+"  viiidd: "+debug_table_viiidd[x]+"  di: "+debug_table_di[x]+"  viiiiid: "+debug_table_viiiiid[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiidii: "+debug_table_viiidii[x]+"  iijiiii: "+debug_table_iijiiii[x]+"  viiiddi: "+debug_table_viiiddi[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiddd: "+debug_table_iiddd[x]+"  i: "+debug_table_i[x]+"  iiiiiid: "+debug_table_iiiiiid[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiidi: "+debug_table_iiiiidi[x]+"  viiiiiid: "+debug_table_viiiiiid[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viididii: "+debug_table_viididii[x]+"  viiiidid: "+debug_table_viiiidid[x]+"  iiiijiii: "+debug_table_iiiijiii[x]+"  vididdii: "+debug_table_vididdii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viffiiii: "+debug_table_viffiiii[x]+"  viiddidd: "+debug_table_viiddidd[x]+"  iiiiddii: "+debug_table_iiiiddii[x]+"  viiiiiidi: "+debug_table_viiiiiidi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  iijiiiiii: "+debug_table_iijiiiiii[x]+"  iiiiiiiii: "+debug_table_iiiiiiiii[x]+"  viiiiiiddi: "+debug_table_viiiiiiddi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  iiiiiiiiii: "+debug_table_iiiiiiiiii[x]+"  viiiiiiiddi: "+debug_table_viiiiiiiddi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  iiiijiiiiii: "+debug_table_iiiijiiiiii[x]+"  iijiiiiiiii: "+debug_table_iijiiiiiiii[x]+"  iiiiiiiiiii: "+debug_table_iiiiiiiiiii[x]+"  viiiiiiiiidd: "+debug_table_viiiiiiiiidd[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiiiiiii: "+debug_table_iiiiiiiiiiii[x]+"  iiiijiiiiiiii: "+debug_table_iiiijiiiiiiii[x]+"  viiiiiiiiiiddi: "+debug_table_viiiiiiiiiiddi[x]+"  iiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiii[x]+"  viiiidiidiiiiiii: "+debug_table_viiiidiidiiiiiii[x]+"  viiiifiifiiiiiii: "+debug_table_viiiifiifiiiiiii[x]+"  iiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiiiiii: "+debug_table_iiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiii[x]+"  viiiiiiiiiiiiiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiiiiiiiiiiiiii[x]+"  ");abort(x)}function invoke_di(index,a1){var sp=stackSave();try{return dynCall_di(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_dii(index,a1,a2){var sp=stackSave();try{return dynCall_dii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_diii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_diii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_i(index){var sp=stackSave();try{return dynCall_i(index)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return dynCall_ii(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iid(index,a1,a2){var sp=stackSave();try{return dynCall_iid(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiddd(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiddd(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iif(index,a1,a2){var sp=stackSave();try{return dynCall_iif(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return dynCall_iii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iiii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiddii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiddii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiiid(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiidi(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiidi(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{return dynCall_iiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){var sp=stackSave();try{return dynCall_iiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{return dynCall_iiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{return dynCall_iiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_iijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_jiji(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jiji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_v(index){var sp=stackSave();try{dynCall_v(index)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vdii(index,a1,a2,a3){var sp=stackSave();try{dynCall_vdii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{dynCall_vi(index,a1)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vididdii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vididdii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vidii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_vidii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viffiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viffiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{dynCall_vii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viid(index,a1,a2,a3){var sp=stackSave();try{dynCall_viid(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viidd(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viidd(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiddidd(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiddidd(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viidi(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viidi(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viididii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viididii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{dynCall_viii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiid(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viiid(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiidd(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiidd(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiddi(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiddi(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiidi(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiidi(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiidii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiidii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiifi(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiifi(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiid(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiiid(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiidid(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiidid(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiidiidiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{dynCall_viiiidiidiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiif(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiiif(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiifiifiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{dynCall_viiiifiifiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiiid(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiidi(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiidi(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiidd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiiiiiidd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{dynCall_viiiiiiiiiiddi(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19){var sp=stackSave();try{dynCall_viiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25){var sp=stackSave();try{dynCall_viiiiiiiiiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}function invoke_viijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0)}}var asmGlobalArg={};var asmLibraryArg={"t":setTempRet0,"b":getTempRet0,"h":abortStackOverflow,"hb":nullFunc_di,"Ja":nullFunc_dii,"ac":nullFunc_diii,"Vb":nullFunc_fii,"da":nullFunc_i,"G":nullFunc_ii,"Ib":nullFunc_iid,"nd":nullFunc_iiddd,"jd":nullFunc_iif,"D":nullFunc_iii,"N":nullFunc_iiii,"ed":nullFunc_iiiiddii,"R":nullFunc_iiiii,"Pa":nullFunc_iiiiid,"ub":nullFunc_iiiiidi,"pb":nullFunc_iiiiii,"nb":nullFunc_iiiiiid,"H":nullFunc_iiiiiii,"jb":nullFunc_iiiiiiii,"Ta":nullFunc_iiiiiiiii,"ra":nullFunc_iiiiiiiiii,"pc":nullFunc_iiiiiiiiiii,"Sa":nullFunc_iiiiiiiiiiii,"oc":nullFunc_iiiiiiiiiiiiii,"Ma":nullFunc_iiiiiiiiiiiiiii,"nc":nullFunc_iiiiiiiiiiiiiiii,"mc":nullFunc_iiiiiiiiiiiiiiiiii,"La":nullFunc_iiiiij,"lc":nullFunc_iiiijiii,"kc":nullFunc_iiiijiiiiii,"jc":nullFunc_iiiijiiiiiiii,"ic":nullFunc_iiiji,"hc":nullFunc_iiijii,"Ka":nullFunc_iijiii,"gb":nullFunc_iijiiii,"gc":nullFunc_iijiiiiii,"fc":nullFunc_iijiiiiiiii,"Ia":nullFunc_ji,"fb":nullFunc_jiji,"S":nullFunc_v,"ec":nullFunc_vdii,"_":nullFunc_vi,"dc":nullFunc_vididdii,"Ha":nullFunc_vidii,"cc":nullFunc_viffiiii,"r":nullFunc_vii,"bc":nullFunc_viid,"$b":nullFunc_viidd,"_b":nullFunc_viiddidd,"Zb":nullFunc_viidi,"eb":nullFunc_viididii,"Yb":nullFunc_viif,"E":nullFunc_viii,"Z":nullFunc_viiid,"Xb":nullFunc_viiidd,"Wb":nullFunc_viiiddi,"Ga":nullFunc_viiidi,"db":nullFunc_viiidii,"Ub":nullFunc_viiifi,"y":nullFunc_viiii,"Tb":nullFunc_viiiid,"Sb":nullFunc_viiiidid,"Rb":nullFunc_viiiidiidiiiiiii,"Qb":nullFunc_viiiif,"Pb":nullFunc_viiiifiifiiiiiii,"ja":nullFunc_viiiii,"Ob":nullFunc_viiiiid,"K":nullFunc_viiiiii,"Nb":nullFunc_viiiiiid,"Mb":nullFunc_viiiiiiddi,"cb":nullFunc_viiiiiidi,"Q":nullFunc_viiiiiii,"Fa":nullFunc_viiiiiiiddi,"w":nullFunc_viiiiiiii,"O":nullFunc_viiiiiiiii,"Lb":nullFunc_viiiiiiiiidd,"U":nullFunc_viiiiiiiiii,"Ea":nullFunc_viiiiiiiiiiddi,"Da":nullFunc_viiiiiiiiiii,"bb":nullFunc_viiiiiiiiiiiiiii,"Kb":nullFunc_viiiiiiiiiiiiiiiiiii,"Jb":nullFunc_viiiiiiiiiiiiiiiiiiiiiiiii,"Ca":nullFunc_viijii,"qa":invoke_di,"pa":invoke_dii,"fa":invoke_diii,"s":invoke_i,"i":invoke_ii,"va":invoke_iid,"Ba":invoke_iiddd,"Aa":invoke_iif,"m":invoke_iii,"k":invoke_iiii,"Hb":invoke_iiiiddii,"p":invoke_iiiii,"ab":invoke_iiiiid,"$a":invoke_iiiiidi,"F":invoke_iiiiii,"C":invoke_iiiiiii,"ea":invoke_iiiiiiii,"oa":invoke_iiiiiiiii,"ba":invoke_iiiiiiiiii,"za":invoke_iiiiiiiiiiii,"md":invoke_iiiiiiiiiiiiii,"ya":invoke_iiiiiiiiiiiiiii,"ld":invoke_iiiiiiiiiiiiiiii,"kd":invoke_iiiiiiiiiiiiiiiiii,"yc":invoke_iiiji,"xc":invoke_iiijii,"wc":invoke_iijiii,"vc":invoke_iijiiii,"uc":invoke_jiji,"n":invoke_v,"id":invoke_vdii,"f":invoke_vi,"Gb":invoke_vididdii,"Fb":invoke_vidii,"hd":invoke_viffiiii,"g":invoke_vii,"_a":invoke_viid,"ua":invoke_viidd,"gd":invoke_viiddidd,"Eb":invoke_viidi,"na":invoke_viididii,"l":invoke_viii,"W":invoke_viiid,"L":invoke_viiidd,"ma":invoke_viiiddi,"aa":invoke_viiidi,"Db":invoke_viiidii,"Cb":invoke_viiifi,"q":invoke_viiii,"ta":invoke_viiiid,"fd":invoke_viiiidid,"Bb":invoke_viiiidiidiiiiiii,"Ab":invoke_viiiif,"zb":invoke_viiiifiifiiiiiii,"j":invoke_viiiii,"Ra":invoke_viiiiid,"z":invoke_viiiiii,"yb":invoke_viiiiiid,"Y":invoke_viiiiiiddi,"xb":invoke_viiiiiidi,"o":invoke_viiiiiii,"dd":invoke_viiiiiiiddi,"M":invoke_viiiiiiii,"T":invoke_viiiiiiiii,"cd":invoke_viiiiiiiiidd,"V":invoke_viiiiiiiiii,"wb":invoke_viiiiiiiiiiddi,"ka":invoke_viiiiiiiiiii,"Qa":invoke_viiiiiiiiiiiiiii,"bd":invoke_viiiiiiiiiiiiiiiiiii,"ad":invoke_viiiiiiiiiiiiiiiiiiiiiiiii,"tc":invoke_viijii,"sc":___atomic_compare_exchange_8,"rc":___atomic_fetch_add_8,"qc":___atomic_fetch_sub_8,"$c":___buildEnvironment,"_c":___clock_gettime,"v":___cxa_allocate_exception,"A":___cxa_begin_catch,"I":___cxa_end_catch,"c":___cxa_find_matching_catch_2,"d":___cxa_find_matching_catch_3,"P":___cxa_find_matching_catch_4,"Zc":___cxa_find_matching_catch_5,"x":___cxa_free_exception,"Za":___cxa_get_exception_ptr,"Yc":___cxa_pure_virtual,"vb":___cxa_rethrow,"B":___cxa_throw,"Xc":___cxa_uncaught_exception,"Oa":___lock,"Wc":___map_file,"e":___resumeException,"tb":___setErrNo,"Vc":___syscall10,"Uc":___syscall140,"Tc":___syscall145,"sb":___syscall146,"Na":___syscall221,"Sc":___syscall40,"rb":___syscall5,"qb":___syscall54,"Ya":___syscall6,"Rc":___syscall91,"xa":___unlock,"Qc":__embind_register_bool,"Xa":__embind_register_class,"Wa":__embind_register_class_constructor,"ca":__embind_register_class_property,"Pc":__embind_register_emval,"ob":__embind_register_float,"Va":__embind_register_function,"ia":__embind_register_integer,"$":__embind_register_memory_view,"mb":__embind_register_std_string,"Oc":__embind_register_std_wstring,"Nc":__embind_register_void,"Ua":_abort,"Mc":_emscripten_console_error,"Lc":_emscripten_get_heap_size,"Kc":_emscripten_longjmp,"Jc":_emscripten_memcpy_big,"Ic":_emscripten_resize_heap,"Hc":_exit,"X":_getenv,"Gc":_gettimeofday,"J":_llvm_eh_typeid_for,"la":_llvm_log10_f64,"ha":_llvm_stackrestore,"ga":_llvm_stacksave,"lb":_llvm_trap,"u":_longjmp,"kb":_pthread_cond_destroy,"Fc":_pthread_cond_init,"wa":_pthread_cond_signal,"sa":_pthread_cond_wait,"Ec":_pthread_create,"Dc":_pthread_join,"ib":_pthread_mutexattr_destroy,"Cc":_pthread_mutexattr_init,"Bc":_pthread_mutexattr_settype,"Ac":_strftime_l,"zc":abortOnCannotGrowMemory,"a":DYNAMICTOP_PTR};var asm=Module["asm"](asmGlobalArg,asmLibraryArg,buffer);var real___GLOBAL__I_000101=asm["od"];asm["od"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__I_000101.apply(null,arguments)};var real___GLOBAL__sub_I_bind_cpp=asm["pd"];asm["pd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_bind_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_color_lab_cpp=asm["qd"];asm["qd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_color_lab_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_grfmt_webp_cpp=asm["rd"];asm["rd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_grfmt_webp_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_idesmicro_js_cpp=asm["sd"];asm["sd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_idesmicro_js_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_iostream_cpp=asm["td"];asm["td"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_iostream_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_kmeans_cpp=asm["ud"];asm["ud"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_kmeans_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_loadsave_cpp=asm["vd"];asm["vd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_loadsave_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_ocl_cpp=asm["wd"];asm["wd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_ocl_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_system_cpp=asm["xd"];asm["xd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_system_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_trace_cpp=asm["yd"];asm["yd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_trace_cpp.apply(null,arguments)};var real___GLOBAL__sub_I_umatrix_cpp=asm["zd"];asm["zd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___GLOBAL__sub_I_umatrix_cpp.apply(null,arguments)};var real___ZN8idesWASM15detect_documentEim=asm["Ad"];asm["Ad"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___ZN8idesWASM15detect_documentEim.apply(null,arguments)};var real___ZN8idesWASM17checkImageQualityEimi=asm["Bd"];asm["Bd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___ZN8idesWASM17checkImageQualityEimi.apply(null,arguments)};var real___ZN8idesWASM18checkLowResolutionEimNS_9DeeResultE=asm["Cd"];asm["Cd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___ZN8idesWASM18checkLowResolutionEimNS_9DeeResultE.apply(null,arguments)};var real___ZSt18uncaught_exceptionv=asm["Dd"];asm["Dd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___ZSt18uncaught_exceptionv.apply(null,arguments)};var real____cxa_can_catch=asm["Ed"];asm["Ed"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxa_can_catch.apply(null,arguments)};var real____cxa_is_pointer_type=asm["Fd"];asm["Fd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxa_is_pointer_type.apply(null,arguments)};var real____cxx_global_var_init_20=asm["Gd"];asm["Gd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_20.apply(null,arguments)};var real____cxx_global_var_init_21=asm["Hd"];asm["Hd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_21.apply(null,arguments)};var real____cxx_global_var_init_22=asm["Id"];asm["Id"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_22.apply(null,arguments)};var real____cxx_global_var_init_23=asm["Jd"];asm["Jd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_23.apply(null,arguments)};var real____cxx_global_var_init_24=asm["Kd"];asm["Kd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_24.apply(null,arguments)};var real____cxx_global_var_init_25=asm["Ld"];asm["Ld"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_25.apply(null,arguments)};var real____cxx_global_var_init_26=asm["Md"];asm["Md"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_26.apply(null,arguments)};var real____cxx_global_var_init_27=asm["Nd"];asm["Nd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_27.apply(null,arguments)};var real____cxx_global_var_init_28=asm["Od"];asm["Od"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____cxx_global_var_init_28.apply(null,arguments)};var real____emscripten_environ_constructor=asm["Pd"];asm["Pd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____emscripten_environ_constructor.apply(null,arguments)};var real____getTypeName=asm["Qd"];asm["Qd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____getTypeName.apply(null,arguments)};var real___get_environ=asm["Rd"];asm["Rd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___get_environ.apply(null,arguments)};var real__free=asm["Sd"];asm["Sd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__free.apply(null,arguments)};var real__i64Add=asm["Td"];asm["Td"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__i64Add.apply(null,arguments)};var real__i64Subtract=asm["Ud"];asm["Ud"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__i64Subtract.apply(null,arguments)};var real__llvm_bswap_i32=asm["Vd"];asm["Vd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_bswap_i32.apply(null,arguments)};var real__llvm_round_f64=asm["Wd"];asm["Wd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_round_f64.apply(null,arguments)};var real__malloc=asm["Xd"];asm["Xd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__malloc.apply(null,arguments)};var real__memmove=asm["Yd"];asm["Yd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__memmove.apply(null,arguments)};var real__pthread_cond_broadcast=asm["Zd"];asm["Zd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__pthread_cond_broadcast.apply(null,arguments)};var real__realloc=asm["_d"];asm["_d"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__realloc.apply(null,arguments)};var real__rintf=asm["$d"];asm["$d"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__rintf.apply(null,arguments)};var real__saveSetjmp=asm["ae"];asm["ae"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__saveSetjmp.apply(null,arguments)};var real__sbrk=asm["be"];asm["be"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__sbrk.apply(null,arguments)};var real__setThrew=asm["ce"];asm["ce"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__setThrew.apply(null,arguments)};var real__testSetjmp=asm["de"];asm["de"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__testSetjmp.apply(null,arguments)};var real_establishStackSpace=asm["If"];asm["If"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_establishStackSpace.apply(null,arguments)};var real_stackAlloc=asm["Jf"];asm["Jf"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackAlloc.apply(null,arguments)};var real_stackRestore=asm["Kf"];asm["Kf"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackRestore.apply(null,arguments)};var real_stackSave=asm["Lf"];asm["Lf"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackSave.apply(null,arguments)};Module["asm"]=asm;var __GLOBAL__I_000101=Module["__GLOBAL__I_000101"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["od"].apply(null,arguments)};var __GLOBAL__sub_I_bind_cpp=Module["__GLOBAL__sub_I_bind_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["pd"].apply(null,arguments)};var __GLOBAL__sub_I_color_lab_cpp=Module["__GLOBAL__sub_I_color_lab_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["qd"].apply(null,arguments)};var __GLOBAL__sub_I_grfmt_webp_cpp=Module["__GLOBAL__sub_I_grfmt_webp_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["rd"].apply(null,arguments)};var __GLOBAL__sub_I_idesmicro_js_cpp=Module["__GLOBAL__sub_I_idesmicro_js_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["sd"].apply(null,arguments)};var __GLOBAL__sub_I_iostream_cpp=Module["__GLOBAL__sub_I_iostream_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["td"].apply(null,arguments)};var __GLOBAL__sub_I_kmeans_cpp=Module["__GLOBAL__sub_I_kmeans_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ud"].apply(null,arguments)};var __GLOBAL__sub_I_loadsave_cpp=Module["__GLOBAL__sub_I_loadsave_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["vd"].apply(null,arguments)};var __GLOBAL__sub_I_ocl_cpp=Module["__GLOBAL__sub_I_ocl_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["wd"].apply(null,arguments)};var __GLOBAL__sub_I_system_cpp=Module["__GLOBAL__sub_I_system_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["xd"].apply(null,arguments)};var __GLOBAL__sub_I_trace_cpp=Module["__GLOBAL__sub_I_trace_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["yd"].apply(null,arguments)};var __GLOBAL__sub_I_umatrix_cpp=Module["__GLOBAL__sub_I_umatrix_cpp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["zd"].apply(null,arguments)};var __ZN8idesWASM15detect_documentEim=Module["__ZN8idesWASM15detect_documentEim"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ad"].apply(null,arguments)};var __ZN8idesWASM17checkImageQualityEimi=Module["__ZN8idesWASM17checkImageQualityEimi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Bd"].apply(null,arguments)};var __ZN8idesWASM18checkLowResolutionEimNS_9DeeResultE=Module["__ZN8idesWASM18checkLowResolutionEimNS_9DeeResultE"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Cd"].apply(null,arguments)};var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Dd"].apply(null,arguments)};var ___cxa_can_catch=Module["___cxa_can_catch"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ed"].apply(null,arguments)};var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Fd"].apply(null,arguments)};var ___cxx_global_var_init_20=Module["___cxx_global_var_init_20"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Gd"].apply(null,arguments)};var ___cxx_global_var_init_21=Module["___cxx_global_var_init_21"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Hd"].apply(null,arguments)};var ___cxx_global_var_init_22=Module["___cxx_global_var_init_22"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Id"].apply(null,arguments)};var ___cxx_global_var_init_23=Module["___cxx_global_var_init_23"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Jd"].apply(null,arguments)};var ___cxx_global_var_init_24=Module["___cxx_global_var_init_24"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Kd"].apply(null,arguments)};var ___cxx_global_var_init_25=Module["___cxx_global_var_init_25"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ld"].apply(null,arguments)};var ___cxx_global_var_init_26=Module["___cxx_global_var_init_26"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Md"].apply(null,arguments)};var ___cxx_global_var_init_27=Module["___cxx_global_var_init_27"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Nd"].apply(null,arguments)};var ___cxx_global_var_init_28=Module["___cxx_global_var_init_28"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Od"].apply(null,arguments)};var ___emscripten_environ_constructor=Module["___emscripten_environ_constructor"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Pd"].apply(null,arguments)};var ___getTypeName=Module["___getTypeName"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Qd"].apply(null,arguments)};var __get_environ=Module["__get_environ"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Rd"].apply(null,arguments)};var _free=Module["_free"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Sd"].apply(null,arguments)};var _i64Add=Module["_i64Add"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Td"].apply(null,arguments)};var _i64Subtract=Module["_i64Subtract"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ud"].apply(null,arguments)};var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Vd"].apply(null,arguments)};var _llvm_round_f64=Module["_llvm_round_f64"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Wd"].apply(null,arguments)};var _malloc=Module["_malloc"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Xd"].apply(null,arguments)};var _memmove=Module["_memmove"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Yd"].apply(null,arguments)};var _pthread_cond_broadcast=Module["_pthread_cond_broadcast"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Zd"].apply(null,arguments)};var _realloc=Module["_realloc"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["_d"].apply(null,arguments)};var _rintf=Module["_rintf"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["$d"].apply(null,arguments)};var _saveSetjmp=Module["_saveSetjmp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ae"].apply(null,arguments)};var _sbrk=Module["_sbrk"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["be"].apply(null,arguments)};var _setThrew=Module["_setThrew"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ce"].apply(null,arguments)};var _testSetjmp=Module["_testSetjmp"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["de"].apply(null,arguments)};var establishStackSpace=Module["establishStackSpace"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["If"].apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Jf"].apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Kf"].apply(null,arguments)};var stackSave=Module["stackSave"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Lf"].apply(null,arguments)};var dynCall_di=Module["dynCall_di"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ee"].apply(null,arguments)};var dynCall_dii=Module["dynCall_dii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["fe"].apply(null,arguments)};var dynCall_diii=Module["dynCall_diii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ge"].apply(null,arguments)};var dynCall_fii=Module["dynCall_fii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["he"].apply(null,arguments)};var dynCall_i=Module["dynCall_i"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ie"].apply(null,arguments)};var dynCall_ii=Module["dynCall_ii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["je"].apply(null,arguments)};var dynCall_iid=Module["dynCall_iid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ke"].apply(null,arguments)};var dynCall_iiddd=Module["dynCall_iiddd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["le"].apply(null,arguments)};var dynCall_iif=Module["dynCall_iif"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["me"].apply(null,arguments)};var dynCall_iii=Module["dynCall_iii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ne"].apply(null,arguments)};var dynCall_iiii=Module["dynCall_iiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["oe"].apply(null,arguments)};var dynCall_iiiiddii=Module["dynCall_iiiiddii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["pe"].apply(null,arguments)};var dynCall_iiiii=Module["dynCall_iiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["qe"].apply(null,arguments)};var dynCall_iiiiid=Module["dynCall_iiiiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["re"].apply(null,arguments)};var dynCall_iiiiidi=Module["dynCall_iiiiidi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["se"].apply(null,arguments)};var dynCall_iiiiii=Module["dynCall_iiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["te"].apply(null,arguments)};var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ue"].apply(null,arguments)};var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ve"].apply(null,arguments)};var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["we"].apply(null,arguments)};var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["xe"].apply(null,arguments)};var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ye"].apply(null,arguments)};var dynCall_iiiiiiiiiii=Module["dynCall_iiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ze"].apply(null,arguments)};var dynCall_iiiiiiiiiiii=Module["dynCall_iiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ae"].apply(null,arguments)};var dynCall_iiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Be"].apply(null,arguments)};var dynCall_iiiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ce"].apply(null,arguments)};var dynCall_iiiiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["De"].apply(null,arguments)};var dynCall_iiiiiiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ee"].apply(null,arguments)};var dynCall_iiiiij=Module["dynCall_iiiiij"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Fe"].apply(null,arguments)};var dynCall_iiiijiii=Module["dynCall_iiiijiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ge"].apply(null,arguments)};var dynCall_iiiijiiiiii=Module["dynCall_iiiijiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["He"].apply(null,arguments)};var dynCall_iiiijiiiiiiii=Module["dynCall_iiiijiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ie"].apply(null,arguments)};var dynCall_iiiji=Module["dynCall_iiiji"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Je"].apply(null,arguments)};var dynCall_iiijii=Module["dynCall_iiijii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ke"].apply(null,arguments)};var dynCall_iijiii=Module["dynCall_iijiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Le"].apply(null,arguments)};var dynCall_iijiiii=Module["dynCall_iijiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Me"].apply(null,arguments)};var dynCall_iijiiiiii=Module["dynCall_iijiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ne"].apply(null,arguments)};var dynCall_iijiiiiiiii=Module["dynCall_iijiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Oe"].apply(null,arguments)};var dynCall_ji=Module["dynCall_ji"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Pe"].apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Qe"].apply(null,arguments)};var dynCall_v=Module["dynCall_v"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Re"].apply(null,arguments)};var dynCall_vdii=Module["dynCall_vdii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Se"].apply(null,arguments)};var dynCall_vi=Module["dynCall_vi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Te"].apply(null,arguments)};var dynCall_vididdii=Module["dynCall_vididdii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ue"].apply(null,arguments)};var dynCall_vidii=Module["dynCall_vidii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ve"].apply(null,arguments)};var dynCall_viffiiii=Module["dynCall_viffiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["We"].apply(null,arguments)};var dynCall_vii=Module["dynCall_vii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Xe"].apply(null,arguments)};var dynCall_viid=Module["dynCall_viid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ye"].apply(null,arguments)};var dynCall_viidd=Module["dynCall_viidd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ze"].apply(null,arguments)};var dynCall_viiddidd=Module["dynCall_viiddidd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["_e"].apply(null,arguments)};var dynCall_viidi=Module["dynCall_viidi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["$e"].apply(null,arguments)};var dynCall_viididii=Module["dynCall_viididii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["af"].apply(null,arguments)};var dynCall_viif=Module["dynCall_viif"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["bf"].apply(null,arguments)};var dynCall_viii=Module["dynCall_viii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["cf"].apply(null,arguments)};var dynCall_viiid=Module["dynCall_viiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["df"].apply(null,arguments)};var dynCall_viiidd=Module["dynCall_viiidd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ef"].apply(null,arguments)};var dynCall_viiiddi=Module["dynCall_viiiddi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ff"].apply(null,arguments)};var dynCall_viiidi=Module["dynCall_viiidi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["gf"].apply(null,arguments)};var dynCall_viiidii=Module["dynCall_viiidii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["hf"].apply(null,arguments)};var dynCall_viiifi=Module["dynCall_viiifi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["jf"].apply(null,arguments)};var dynCall_viiii=Module["dynCall_viiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["kf"].apply(null,arguments)};var dynCall_viiiid=Module["dynCall_viiiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["lf"].apply(null,arguments)};var dynCall_viiiidid=Module["dynCall_viiiidid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["mf"].apply(null,arguments)};var dynCall_viiiidiidiiiiiii=Module["dynCall_viiiidiidiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["nf"].apply(null,arguments)};var dynCall_viiiif=Module["dynCall_viiiif"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["of"].apply(null,arguments)};var dynCall_viiiifiifiiiiiii=Module["dynCall_viiiifiifiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["pf"].apply(null,arguments)};var dynCall_viiiii=Module["dynCall_viiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["qf"].apply(null,arguments)};var dynCall_viiiiid=Module["dynCall_viiiiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["rf"].apply(null,arguments)};var dynCall_viiiiii=Module["dynCall_viiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["sf"].apply(null,arguments)};var dynCall_viiiiiid=Module["dynCall_viiiiiid"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["tf"].apply(null,arguments)};var dynCall_viiiiiiddi=Module["dynCall_viiiiiiddi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["uf"].apply(null,arguments)};var dynCall_viiiiiidi=Module["dynCall_viiiiiidi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["vf"].apply(null,arguments)};var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["wf"].apply(null,arguments)};var dynCall_viiiiiiiddi=Module["dynCall_viiiiiiiddi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["xf"].apply(null,arguments)};var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["yf"].apply(null,arguments)};var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["zf"].apply(null,arguments)};var dynCall_viiiiiiiiidd=Module["dynCall_viiiiiiiiidd"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Af"].apply(null,arguments)};var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Bf"].apply(null,arguments)};var dynCall_viiiiiiiiiiddi=Module["dynCall_viiiiiiiiiiddi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Cf"].apply(null,arguments)};var dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Df"].apply(null,arguments)};var dynCall_viiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ef"].apply(null,arguments)};var dynCall_viiiiiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ff"].apply(null,arguments)};var dynCall_viiiiiiiiiiiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiiiiiiiiiiii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Gf"].apply(null,arguments)};var dynCall_viijii=Module["dynCall_viijii"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Hf"].apply(null,arguments)};Module["asm"]=asm;if(!Module["intArrayFromString"])Module["intArrayFromString"]=function(){abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["intArrayToString"])Module["intArrayToString"]=function(){abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["ccall"])Module["ccall"]=function(){abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["cwrap"])Module["cwrap"]=function(){abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["setValue"])Module["setValue"]=function(){abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getValue"])Module["getValue"]=function(){abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["allocate"])Module["allocate"]=function(){abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getMemory"])Module["getMemory"]=function(){abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["AsciiToString"])Module["AsciiToString"]=function(){abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stringToAscii"])Module["stringToAscii"]=function(){abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["UTF8ArrayToString"])Module["UTF8ArrayToString"]=function(){abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["UTF8ToString"])Module["UTF8ToString"]=function(){abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stringToUTF8Array"])Module["stringToUTF8Array"]=function(){abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stringToUTF8"])Module["stringToUTF8"]=function(){abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["lengthBytesUTF8"])Module["lengthBytesUTF8"]=function(){abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["UTF16ToString"])Module["UTF16ToString"]=function(){abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stringToUTF16"])Module["stringToUTF16"]=function(){abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["lengthBytesUTF16"])Module["lengthBytesUTF16"]=function(){abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["UTF32ToString"])Module["UTF32ToString"]=function(){abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stringToUTF32"])Module["stringToUTF32"]=function(){abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["lengthBytesUTF32"])Module["lengthBytesUTF32"]=function(){abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["allocateUTF8"])Module["allocateUTF8"]=function(){abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stackTrace"])Module["stackTrace"]=function(){abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addOnPreRun"])Module["addOnPreRun"]=function(){abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addOnInit"])Module["addOnInit"]=function(){abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addOnPreMain"])Module["addOnPreMain"]=function(){abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addOnExit"])Module["addOnExit"]=function(){abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addOnPostRun"])Module["addOnPostRun"]=function(){abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["writeStringToMemory"])Module["writeStringToMemory"]=function(){abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["writeArrayToMemory"])Module["writeArrayToMemory"]=function(){abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["writeAsciiToMemory"])Module["writeAsciiToMemory"]=function(){abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addRunDependency"])Module["addRunDependency"]=function(){abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["removeRunDependency"])Module["removeRunDependency"]=function(){abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["ENV"])Module["ENV"]=function(){abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["FS"])Module["FS"]=function(){abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["FS_createFolder"])Module["FS_createFolder"]=function(){abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createPath"])Module["FS_createPath"]=function(){abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createDataFile"])Module["FS_createDataFile"]=function(){abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createPreloadedFile"])Module["FS_createPreloadedFile"]=function(){abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createLazyFile"])Module["FS_createLazyFile"]=function(){abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createLink"])Module["FS_createLink"]=function(){abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_createDevice"])Module["FS_createDevice"]=function(){abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["FS_unlink"])Module["FS_unlink"]=function(){abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Module["GL"])Module["GL"]=function(){abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["dynamicAlloc"])Module["dynamicAlloc"]=function(){abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["warnOnce"])Module["warnOnce"]=function(){abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["loadDynamicLibrary"])Module["loadDynamicLibrary"]=function(){abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["loadWebAssemblyModule"])Module["loadWebAssemblyModule"]=function(){abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getLEB"])Module["getLEB"]=function(){abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getFunctionTables"])Module["getFunctionTables"]=function(){abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["alignFunctionTables"])Module["alignFunctionTables"]=function(){abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["registerFunctions"])Module["registerFunctions"]=function(){abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["addFunction"])Module["addFunction"]=function(){abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["removeFunction"])Module["removeFunction"]=function(){abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getFuncWrapper"])Module["getFuncWrapper"]=function(){abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["prettyPrint"])Module["prettyPrint"]=function(){abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["makeBigInt"])Module["makeBigInt"]=function(){abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["dynCall"])Module["dynCall"]=function(){abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getCompilerSetting"])Module["getCompilerSetting"]=function(){abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stackSave"])Module["stackSave"]=function(){abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stackRestore"])Module["stackRestore"]=function(){abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["stackAlloc"])Module["stackAlloc"]=function(){abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["establishStackSpace"])Module["establishStackSpace"]=function(){abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["print"])Module["print"]=function(){abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["printErr"])Module["printErr"]=function(){abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["getTempRet0"])Module["getTempRet0"]=function(){abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["setTempRet0"])Module["setTempRet0"]=function(){abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["Pointer_stringify"])Module["Pointer_stringify"]=function(){abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["writeStackCookie"])Module["writeStackCookie"]=function(){abort("'writeStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["checkStackCookie"])Module["checkStackCookie"]=function(){abort("'checkStackCookie' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["abortStackOverflow"])Module["abortStackOverflow"]=function(){abort("'abortStackOverflow' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Module["ALLOC_NORMAL"])Object.defineProperty(Module,"ALLOC_NORMAL",{get:function(){abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Module["ALLOC_STACK"])Object.defineProperty(Module,"ALLOC_STACK",{get:function(){abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Module["ALLOC_DYNAMIC"])Object.defineProperty(Module,"ALLOC_DYNAMIC",{get:function(){abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Module["ALLOC_NONE"])Object.defineProperty(Module,"ALLOC_NONE",{get:function(){abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});Module["then"]=function(func){if(Module["calledRun"]){func(Module)}else{var old=Module["onRuntimeInitialized"];Module["onRuntimeInitialized"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}writeStackCookie();preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();assert(!Module["_main"],'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}checkStackCookie()}Module["run"]=run;function checkUnflushedContent(){var print=out;var printErr=err;var has=false;out=err=function(x){has=true};try{var flush=flush_NO_FILESYSTEM;if(flush)flush(0)}catch(e){}out=print;err=printErr;if(has){warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.");warnOnce("(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)")}}function exit(status,implicit){checkUnflushedContent();if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){if(!implicit){err("exit("+status+") called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)")}}else{ABORT=true;EXITSTATUS=status;exitRuntime();if(Module["onExit"])Module["onExit"](status)}Module["quit"](status,new ExitStatus(status))}var abortDecorators=[];function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach(function(decorator){output=decorator(output,what)})}throw output}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}Module["noExitRuntime"]=true;run();


  return InitIdesmicro
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
      module.exports = InitIdesmicro;
    else if (typeof define === 'function' && define['amd'])
      define([], function() { return InitIdesmicro; });
    else if (typeof exports === 'object')
      exports["InitIdesmicro"] = InitIdesmicro;
    