// source: reportingentity/v2/reporting_entity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.reportingentity.v2.CreateRequest', null, global);
goog.exportSymbol('proto.reportingentity.v2.CreateResponse', null, global);
goog.exportSymbol('proto.reportingentity.v2.DeleteRequest', null, global);
goog.exportSymbol('proto.reportingentity.v2.DeleteResponse', null, global);
goog.exportSymbol('proto.reportingentity.v2.GetRequest', null, global);
goog.exportSymbol('proto.reportingentity.v2.GetResponse', null, global);
goog.exportSymbol('proto.reportingentity.v2.QueryRequest', null, global);
goog.exportSymbol('proto.reportingentity.v2.QueryResponse', null, global);
goog.exportSymbol('proto.reportingentity.v2.ReportingEntity', null, global);
goog.exportSymbol('proto.reportingentity.v2.UpdateRequest', null, global);
goog.exportSymbol('proto.reportingentity.v2.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.CreateRequest.displayName = 'proto.reportingentity.v2.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.CreateResponse.displayName = 'proto.reportingentity.v2.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.QueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.QueryRequest.displayName = 'proto.reportingentity.v2.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.QueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reportingentity.v2.QueryResponse.repeatedFields_, null);
};
goog.inherits(proto.reportingentity.v2.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.QueryResponse.displayName = 'proto.reportingentity.v2.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.GetRequest.displayName = 'proto.reportingentity.v2.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.GetResponse.displayName = 'proto.reportingentity.v2.GetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.UpdateRequest.displayName = 'proto.reportingentity.v2.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.UpdateResponse.displayName = 'proto.reportingentity.v2.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.DeleteRequest.displayName = 'proto.reportingentity.v2.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.DeleteResponse.displayName = 'proto.reportingentity.v2.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reportingentity.v2.ReportingEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.reportingentity.v2.ReportingEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reportingentity.v2.ReportingEntity.displayName = 'proto.reportingentity.v2.ReportingEntity';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contactName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contactEmail: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.CreateRequest}
 */
proto.reportingentity.v2.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.CreateRequest;
  return proto.reportingentity.v2.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.CreateRequest}
 */
proto.reportingentity.v2.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContactEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string org_name = 1;
 * @return {string}
 */
proto.reportingentity.v2.CreateRequest.prototype.getOrgName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.CreateRequest} returns this
 */
proto.reportingentity.v2.CreateRequest.prototype.setOrgName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contact_name = 2;
 * @return {string}
 */
proto.reportingentity.v2.CreateRequest.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.CreateRequest} returns this
 */
proto.reportingentity.v2.CreateRequest.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contact_email = 3;
 * @return {string}
 */
proto.reportingentity.v2.CreateRequest.prototype.getContactEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.CreateRequest} returns this
 */
proto.reportingentity.v2.CreateRequest.prototype.setContactEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportingEntity: (f = msg.getReportingEntity()) && proto.reportingentity.v2.ReportingEntity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.CreateResponse}
 */
proto.reportingentity.v2.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.CreateResponse;
  return proto.reportingentity.v2.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.CreateResponse}
 */
proto.reportingentity.v2.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reportingentity.v2.ReportingEntity;
      reader.readMessage(value,proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader);
      msg.setReportingEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportingEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReportingEntity reporting_entity = 1;
 * @return {?proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.CreateResponse.prototype.getReportingEntity = function() {
  return /** @type{?proto.reportingentity.v2.ReportingEntity} */ (
    jspb.Message.getWrapperField(this, proto.reportingentity.v2.ReportingEntity, 1));
};


/**
 * @param {?proto.reportingentity.v2.ReportingEntity|undefined} value
 * @return {!proto.reportingentity.v2.CreateResponse} returns this
*/
proto.reportingentity.v2.CreateResponse.prototype.setReportingEntity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reportingentity.v2.CreateResponse} returns this
 */
proto.reportingentity.v2.CreateResponse.prototype.clearReportingEntity = function() {
  return this.setReportingEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reportingentity.v2.CreateResponse.prototype.hasReportingEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.QueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.QueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.QueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.QueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.QueryRequest}
 */
proto.reportingentity.v2.QueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.QueryRequest;
  return proto.reportingentity.v2.QueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.QueryRequest}
 */
proto.reportingentity.v2.QueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.QueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.QueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.QueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 offset = 1;
 * @return {number}
 */
proto.reportingentity.v2.QueryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.reportingentity.v2.QueryRequest} returns this
 */
proto.reportingentity.v2.QueryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.reportingentity.v2.QueryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reportingentity.v2.QueryRequest} returns this
 */
proto.reportingentity.v2.QueryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reportingentity.v2.QueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.QueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.QueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.QueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.QueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.reportingentity.v2.ReportingEntity.toObject, includeInstance),
    matches: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.QueryResponse}
 */
proto.reportingentity.v2.QueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.QueryResponse;
  return proto.reportingentity.v2.QueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.QueryResponse}
 */
proto.reportingentity.v2.QueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reportingentity.v2.ReportingEntity;
      reader.readMessage(value,proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.QueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.QueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.QueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter
    );
  }
  f = message.getMatches();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ReportingEntity data = 1;
 * @return {!Array<!proto.reportingentity.v2.ReportingEntity>}
 */
proto.reportingentity.v2.QueryResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.reportingentity.v2.ReportingEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reportingentity.v2.ReportingEntity, 1));
};


/**
 * @param {!Array<!proto.reportingentity.v2.ReportingEntity>} value
 * @return {!proto.reportingentity.v2.QueryResponse} returns this
*/
proto.reportingentity.v2.QueryResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.reportingentity.v2.ReportingEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.QueryResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.reportingentity.v2.ReportingEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reportingentity.v2.QueryResponse} returns this
 */
proto.reportingentity.v2.QueryResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional int64 matches = 2;
 * @return {number}
 */
proto.reportingentity.v2.QueryResponse.prototype.getMatches = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.reportingentity.v2.QueryResponse} returns this
 */
proto.reportingentity.v2.QueryResponse.prototype.setMatches = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.GetRequest}
 */
proto.reportingentity.v2.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.GetRequest;
  return proto.reportingentity.v2.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.GetRequest}
 */
proto.reportingentity.v2.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportingEntity: (f = msg.getReportingEntity()) && proto.reportingentity.v2.ReportingEntity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.GetResponse}
 */
proto.reportingentity.v2.GetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.GetResponse;
  return proto.reportingentity.v2.GetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.GetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.GetResponse}
 */
proto.reportingentity.v2.GetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reportingentity.v2.ReportingEntity;
      reader.readMessage(value,proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader);
      msg.setReportingEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.GetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.GetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.GetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.GetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportingEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReportingEntity reporting_entity = 1;
 * @return {?proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.GetResponse.prototype.getReportingEntity = function() {
  return /** @type{?proto.reportingentity.v2.ReportingEntity} */ (
    jspb.Message.getWrapperField(this, proto.reportingentity.v2.ReportingEntity, 1));
};


/**
 * @param {?proto.reportingentity.v2.ReportingEntity|undefined} value
 * @return {!proto.reportingentity.v2.GetResponse} returns this
*/
proto.reportingentity.v2.GetResponse.prototype.setReportingEntity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reportingentity.v2.GetResponse} returns this
 */
proto.reportingentity.v2.GetResponse.prototype.clearReportingEntity = function() {
  return this.setReportingEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reportingentity.v2.GetResponse.prototype.hasReportingEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportingEntity: (f = msg.getReportingEntity()) && proto.reportingentity.v2.ReportingEntity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.UpdateRequest}
 */
proto.reportingentity.v2.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.UpdateRequest;
  return proto.reportingentity.v2.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.UpdateRequest}
 */
proto.reportingentity.v2.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reportingentity.v2.ReportingEntity;
      reader.readMessage(value,proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader);
      msg.setReportingEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportingEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReportingEntity reporting_entity = 1;
 * @return {?proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.UpdateRequest.prototype.getReportingEntity = function() {
  return /** @type{?proto.reportingentity.v2.ReportingEntity} */ (
    jspb.Message.getWrapperField(this, proto.reportingentity.v2.ReportingEntity, 1));
};


/**
 * @param {?proto.reportingentity.v2.ReportingEntity|undefined} value
 * @return {!proto.reportingentity.v2.UpdateRequest} returns this
*/
proto.reportingentity.v2.UpdateRequest.prototype.setReportingEntity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reportingentity.v2.UpdateRequest} returns this
 */
proto.reportingentity.v2.UpdateRequest.prototype.clearReportingEntity = function() {
  return this.setReportingEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reportingentity.v2.UpdateRequest.prototype.hasReportingEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportingEntity: (f = msg.getReportingEntity()) && proto.reportingentity.v2.ReportingEntity.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.UpdateResponse}
 */
proto.reportingentity.v2.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.UpdateResponse;
  return proto.reportingentity.v2.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.UpdateResponse}
 */
proto.reportingentity.v2.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.reportingentity.v2.ReportingEntity;
      reader.readMessage(value,proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader);
      msg.setReportingEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportingEntity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional ReportingEntity reporting_entity = 1;
 * @return {?proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.UpdateResponse.prototype.getReportingEntity = function() {
  return /** @type{?proto.reportingentity.v2.ReportingEntity} */ (
    jspb.Message.getWrapperField(this, proto.reportingentity.v2.ReportingEntity, 1));
};


/**
 * @param {?proto.reportingentity.v2.ReportingEntity|undefined} value
 * @return {!proto.reportingentity.v2.UpdateResponse} returns this
*/
proto.reportingentity.v2.UpdateResponse.prototype.setReportingEntity = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reportingentity.v2.UpdateResponse} returns this
 */
proto.reportingentity.v2.UpdateResponse.prototype.clearReportingEntity = function() {
  return this.setReportingEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reportingentity.v2.UpdateResponse.prototype.hasReportingEntity = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.DeleteRequest}
 */
proto.reportingentity.v2.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.DeleteRequest;
  return proto.reportingentity.v2.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.DeleteRequest}
 */
proto.reportingentity.v2.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.DeleteResponse}
 */
proto.reportingentity.v2.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.DeleteResponse;
  return proto.reportingentity.v2.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.DeleteResponse}
 */
proto.reportingentity.v2.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reportingentity.v2.ReportingEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.reportingentity.v2.ReportingEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reportingentity.v2.ReportingEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.ReportingEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orgType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tradingAs: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessNumber: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    region: jspb.Message.getFieldWithDefault(msg, 9, ""),
    postCode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    country: jspb.Message.getFieldWithDefault(msg, 11, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    websiteUri: jspb.Message.getFieldWithDefault(msg, 13, ""),
    contactName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    contactPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    contactEmail: jspb.Message.getFieldWithDefault(msg, 16, ""),
    nature: jspb.Message.getFieldWithDefault(msg, 17, ""),
    useOfId: jspb.Message.getFieldWithDefault(msg, 18, ""),
    agreeInfoSecurity: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    agreeRiskManagement: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    hasBreachProcess: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    hasPrivacyPolicy: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    privacyPolicyDocId: jspb.Message.getFieldWithDefault(msg, 23, ""),
    nzBreach: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    nzBreachDetail: jspb.Message.getFieldWithDefault(msg, 25, ""),
    nzBreachMitigation: jspb.Message.getFieldWithDefault(msg, 26, ""),
    ausBreach: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    ausBreachDetail: jspb.Message.getFieldWithDefault(msg, 28, ""),
    ausBreachMitigation: jspb.Message.getFieldWithDefault(msg, 29, ""),
    ausAutoPrivacy: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    seekConsent: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    hasConsentWording: jspb.Message.getBooleanFieldWithDefault(msg, 32, false),
    consentFormDocId: jspb.Message.getFieldWithDefault(msg, 33, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.ReportingEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reportingentity.v2.ReportingEntity;
  return proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reportingentity.v2.ReportingEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reportingentity.v2.ReportingEntity}
 */
proto.reportingentity.v2.ReportingEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradingAs(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostCode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsiteUri(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactEmail(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setNature(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setUseOfId(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgreeInfoSecurity(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgreeRiskManagement(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasBreachProcess(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPrivacyPolicy(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivacyPolicyDocId(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNzBreach(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setNzBreachDetail(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setNzBreachMitigation(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAusBreach(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setAusBreachDetail(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setAusBreachMitigation(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAusAutoPrivacy(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSeekConsent(value);
      break;
    case 32:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasConsentWording(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsentFormDocId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reportingentity.v2.ReportingEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reportingentity.v2.ReportingEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reportingentity.v2.ReportingEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrgType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTradingAs();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessNumber();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPostCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getWebsiteUri();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getContactPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getContactEmail();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNature();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getUseOfId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getAgreeInfoSecurity();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getAgreeRiskManagement();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getHasBreachProcess();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getHasPrivacyPolicy();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getPrivacyPolicyDocId();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getNzBreach();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getNzBreachDetail();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getNzBreachMitigation();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getAusBreach();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getAusBreachDetail();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getAusBreachMitigation();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getAusAutoPrivacy();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
  f = message.getSeekConsent();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getHasConsentWording();
  if (f) {
    writer.writeBool(
      32,
      f
    );
  }
  f = message.getConsentFormDocId();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string org_type = 3;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getOrgType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setOrgType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string size = 4;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setSize = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string trading_as = 5;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getTradingAs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setTradingAs = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string business_number = 6;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getBusinessNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setBusinessNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string region = 9;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string post_code = 10;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getPostCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setPostCode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string country = 11;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string phone_number = 12;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string website_uri = 13;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getWebsiteUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setWebsiteUri = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string contact_name = 14;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string contact_phone = 15;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getContactPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setContactPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string contact_email = 16;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getContactEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setContactEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string nature = 17;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getNature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setNature = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string use_of_id = 18;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getUseOfId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setUseOfId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool agree_info_security = 19;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAgreeInfoSecurity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAgreeInfoSecurity = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool agree_risk_management = 20;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAgreeRiskManagement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAgreeRiskManagement = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool has_breach_process = 21;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getHasBreachProcess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setHasBreachProcess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool has_privacy_policy = 22;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getHasPrivacyPolicy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setHasPrivacyPolicy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional string privacy_policy_doc_id = 23;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getPrivacyPolicyDocId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setPrivacyPolicyDocId = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool nz_breach = 24;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getNzBreach = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setNzBreach = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional string nz_breach_detail = 25;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getNzBreachDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setNzBreachDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string nz_breach_mitigation = 26;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getNzBreachMitigation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setNzBreachMitigation = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional bool aus_breach = 27;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAusBreach = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAusBreach = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional string aus_breach_detail = 28;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAusBreachDetail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAusBreachDetail = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string aus_breach_mitigation = 29;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAusBreachMitigation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAusBreachMitigation = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional bool aus_auto_privacy = 30;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getAusAutoPrivacy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setAusAutoPrivacy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};


/**
 * optional bool seek_consent = 31;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getSeekConsent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setSeekConsent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional bool has_consent_wording = 32;
 * @return {boolean}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getHasConsentWording = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 32, false));
};


/**
 * @param {boolean} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setHasConsentWording = function(value) {
  return jspb.Message.setProto3BooleanField(this, 32, value);
};


/**
 * optional string consent_form_doc_id = 33;
 * @return {string}
 */
proto.reportingentity.v2.ReportingEntity.prototype.getConsentFormDocId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.reportingentity.v2.ReportingEntity} returns this
 */
proto.reportingentity.v2.ReportingEntity.prototype.setConsentFormDocId = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


goog.object.extend(exports, proto.reportingentity.v2);
